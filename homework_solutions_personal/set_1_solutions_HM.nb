(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    324988,       6247]
NotebookOptionsPosition[    315304,       6100]
NotebookOutlinePosition[    315770,       6118]
CellTagsIndexPosition[    315727,       6115]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Problem Set 1", "Chapter",
 CellChangeTimes->{{3.724943992364118*^9, 3.724944007146431*^9}, {
  3.7888051135399356`*^9, 3.788805118738055*^9}, {3.788961296928027*^9, 
  3.7889613149359474`*^9}},ExpressionUUID->"d90cc9ee-2f1b-4f3e-b72d-\
3d49e4e77ba1"],

Cell[" Horia Magureanu (DPhil Student)", "Subtitle",
 CellChangeTimes->{
  3.788961330838393*^9},ExpressionUUID->"80ed7abd-b84b-44b2-89b0-\
a64ceebab980"],

Cell["Question 1", "Subchapter",
 CellChangeTimes->{{3.72494407382446*^9, 3.7249440963039*^9}, 
   3.724944194386578*^9, {3.7888051100862026`*^9, 
   3.7888051114451284`*^9}},ExpressionUUID->"40e5c9cf-a495-40a0-bd7c-\
10810f35b49e"],

Cell[TextData[{
 "Let us first define a function that computes the arithmetic-geometric mean \
of two numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", " ", "b"}], TraditionalForm]],ExpressionUUID->
  "77c7f041-3d8e-4b67-aba0-f8e1bae709b2"],
 " to an accuracy ",
 Cell[BoxData[
  FormBox["acc", TraditionalForm]],ExpressionUUID->
  "9ee98ad5-ac82-4463-9d37-c6ab01e3511c"],
 "."
}], "Text",
 CellChangeTimes->{{3.7889355267330356`*^9, 
  3.788935583543066*^9}},ExpressionUUID->"0c16dd5a-fc17-4628-8a31-\
ed15c5588720"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "M", ",", "x", ",", "y"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"x_", ",", "y_", ",", "acc_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", "x"}], ",", " ", 
       RowBox[{"b", "=", "y"}], ",", 
       RowBox[{"c", "=", "acc"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"a", "-", "b"}], "]"}], ">", 
         SuperscriptBox["10", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"c", "+", "1"}], ")"}]}]]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"a", "+", "b"}], ")"}]}], ",", "c"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"b", "=", 
          RowBox[{"N", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "a"}], "-", "b"}], ")"}], "b"}], ")"}], 
             RowBox[{"1", "/", "2"}]], ",", "c"}], "]"}]}], ";"}]}], "]"}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "This", " ", "is", " ", "needed", " ", "as", " ", "b", " ", "changes", 
        " ", "at", " ", "the", " ", "previous", " ", "iteration"}], "*)"}], 
      "\[IndentingNewLine]", "\t", "a"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.7888051339713097`*^9, {3.788805166837348*^9, 3.7888053742656546`*^9}, {
   3.788805426180295*^9, 3.788805428947504*^9}, {3.788935585876978*^9, 
   3.788935602572891*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f8bb5ad2-64e2-401d-b015-508030ca213c"],

Cell["Let us now check the function:", "Text",
 CellChangeTimes->{{3.7888053797093225`*^9, 3.788805383820566*^9}, {
  3.7889356086425295`*^9, 
  3.7889356197252183`*^9}},ExpressionUUID->"7a30d63d-8c81-4b31-bbdb-\
5a4c4575894d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"24", ",", "6", ",", "100"}], "]"}], ",", "40"}], "]"}]], "Input",\

 CellChangeTimes->{{3.788805386758051*^9, 3.788805410604262*^9}, {
   3.788805452491562*^9, 3.7888054667457075`*^9}, 3.78905502529358*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"29a7eb3b-2eed-4e48-8fb2-d11092f8f269"],

Cell[BoxData["13.4581714817256154207668131569743992430538388544396598555129`\
40."], "Output",
 CellChangeTimes->{{3.788805412900361*^9, 3.7888054672259808`*^9}, {
  3.7890550233617163`*^9, 3.789055026205151*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"1679d11c-5443-4d73-8d3a-537a08bd1b64"]
}, Open  ]],

Cell["The Integral given in the problem:", "Text",
 CellChangeTimes->{{3.788805478702894*^9, 3.788805480393509*^9}, {
  3.788935622794383*^9, 
  3.788935629175439*^9}},ExpressionUUID->"0241c94f-502d-4bd4-8c40-\
a209766cc662"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "4"]}], ")"}], 
          RowBox[{"1", "/", "2"}]]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", "120"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.788805482832487*^9, 3.7888055291357503`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"575c93d3-e862-4ca5-983b-24f8418aeff5"],

Cell["We can now check Gauss\[CloseCurlyQuote]s claim:", "Text",
 CellChangeTimes->{{3.7888055364476943`*^9, 3.788805537463319*^9}, {
  3.788935631971328*^9, 
  3.7889356407878513`*^9}},ExpressionUUID->"61973a87-8d60-4b25-a8aa-\
8482bca83e69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"M", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Sqrt]", "2"}], " ", ",", "120"}], "]"}], ",", "120"}], 
     "]"}], "-", 
    RowBox[{"N", "[", 
     RowBox[{
      FractionBox["\[Pi]", "\[Omega]"], ",", "120"}], "]"}]}], ",", "100"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7888055386190553`*^9, 3.788805649800922*^9}, 
   3.7890550365125523`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"02ec073e-55cc-4020-a6c6-8c1e257a500e"],

Cell[BoxData["0``118.74269943713911"], "Output",
 CellChangeTimes->{{3.7888056231166306`*^9, 3.788805652525119*^9}, 
   3.7890550445860267`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6b47fe62-f8bd-4385-9c8f-86c910cefe69"]
}, Open  ]],

Cell["Question 2", "Subchapter",
 CellChangeTimes->{{3.72494407382446*^9, 3.7249440963039*^9}, 
   3.724944194386578*^9, {3.7888051100862026`*^9, 
   3.788805126666008*^9}},ExpressionUUID->"b5485d21-4daa-4df3-9790-\
5b41e817d50f"],

Cell[TextData[{
 "Define the functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "920ea182-0500-48af-841f-30ad0f577857"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "(", "a", ")"}], TraditionalForm]],ExpressionUUID->
  "cf0351be-4d93-41d7-98c2-5d498c3086cd"],
 " as described in the problem:"
}], "Text",
 CellChangeTimes->{{3.7889581440132747`*^9, 3.7889581538272862`*^9}, {
  3.788958384330921*^9, 3.7889584016582236`*^9}, {3.78895847377995*^9, 
  3.788958478056899*^9}},ExpressionUUID->"db7b42af-d592-4b34-b8b0-\
fc407850f1c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"F", ",", "x", ",", "I0", ",", "a"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox["5", 
     RowBox[{"5", "I", " ", "x"}]], 
    FractionBox[
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", 
       RowBox[{"5", "I", " ", "x"}]}], "]"}], 
     SuperscriptBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", 
        RowBox[{"I", " ", "x"}]}], "]"}], "5"]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I0", "[", "a_", "]"}], ":=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", " ", 
       RowBox[{"Re", "[", 
        RowBox[{"F", "[", "x", "]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "x"}], "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "\[Pi]", " ", "x"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7889581307704773`*^9, 3.78895832072281*^9}, {
  3.788958360957708*^9, 3.7889583730238647`*^9}, {3.7889584095361605`*^9, 
  3.7889584841045027`*^9}, {3.788959127565073*^9, 3.7889591278395147`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6b98743d-aab9-4def-9cda-a33720c68a6f"],

Cell[TextData[{
 "We use the function Series on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", 
    RowBox[{"F", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "508c7753-db19-4d77-99db-182605a80a56"],
 " first. This is relevant since for large ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "dcfc4859-4997-4c8b-9dac-5dd684bc82cf"],
 ", the prefactor of the cosine is essentially ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", 
    RowBox[{"F", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d1fc685e-804f-4a17-9b38-44a6bb65d943"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7889585005106707`*^9, 3.788958537542466*^9}, {
  3.7889600963480673`*^9, 
  3.7889601292640443`*^9}},ExpressionUUID->"73255d74-af56-4078-832c-\
8cfd64fc0ccf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"F", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "\[Infinity]", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7889584307450647`*^9, 3.788958431956814*^9}, {
  3.7889584928182344`*^9, 3.7889584937527046`*^9}, {3.788958546730932*^9, 
  3.788958654429846*^9}, {3.7889586877813416`*^9, 3.7889587129251127`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7ae2637e-96f8-4b2b-b525-0e457b5e0a1a"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SqrtBox["5"], 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", "x"}]]}]], "Output",
 CellChangeTimes->{{3.788958635319874*^9, 3.788958655244666*^9}, {
   3.7889586896353507`*^9, 3.788958715347599*^9}, 3.788959141507966*^9, 
   3.7890549417490463`*^9, 3.7890550570635996`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"2120181c-439d-4292-932b-aeaa9f3ddac3"]
}, Open  ]],

Cell["\<\
Let us now plot the integrand, to see the behaviour of the function that \
multiplies the cosine:\
\>", "Text",
 CellChangeTimes->{{3.788958820677202*^9, 3.78895882147108*^9}, {
  3.7889605932045617`*^9, 
  3.7889606146362863`*^9}},ExpressionUUID->"5fa9f44a-ffa4-4898-9ee1-\
b8be6fc6ef09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"Re", "[", 
      RowBox[{"F", "[", "x", "]"}], "]"}]}], 
    RowBox[{"1", "-", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", " ", "x"}], "]"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7889591926089764`*^9, 3.7889592110670185`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"f3610f5b-e090-4fc9-9d8d-f5165b1a537c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVVXc81f8Xvq57kTKKIkUh2SUiERcho/C1QlZGIWRcKtlaJJSSlb2yI6Tc
9/lUVlb2JmQTsrdfv3/OeT2v85zzPOd1/jjcVnd1bfE4HI7+X/h/ti6ImN/b
o8UuG18TtYEhCusWx2nZbVrshZGx5sDSEKVSNd3Uc50WO2nJIL0lMEw5PVj+
Y3aBFmtNa04UfTNMmT7wO7VnmBabPeJLyPQYobg4SBoVf6fFHIuKuTuMRinc
pRA2B7SY2o0p2nfRo5RWKo0qwQpaTFlH6YZozyjlfIy5eNJHWkzBXOHsB9Mx
ylrN0wMv0mmxxOPvwkOdxim+fL3Yrae0WN7pLLmxT5OUs642a8lBtJjc/Vvg
RDNFGaqYEx3wo8XSqV1opvWnKEr61HF692mxdar9Cz+WpyjEIBEPBXtaTIJO
+J2PwgwldMhXkEOTFvNUxIc9o5+jyInsszS4Qov9yFlWqbebo8zdi4yKuEyL
Ta4kBknVzlF0mLKoaS/RYg2HNS++CZmnsMi3DCyJ0GL+u83mc2ELlNg43leN
jLRYZHDKT7ziIiVbLCa5jJ4W68+3nBDyW6R8rmL8kExDixWflZXgR4uU3vmN
nx67NNj1Hb76TPklCodyMwPXHA1WtV98iENjmRI36x3s3EiDHZOUjH3wYpWS
G7AYbfSDBns2Vdig3btKqThil6VURYO9C1f0EhFYo/Qr6NUcodBgslLVFrQ1
a5TjbwSJkEuDufckfcg6uEGJl+v0ZwqlwTb/MlyZG9ii5LZqRmw8pcHS5Wqu
/bm0Tam4/TXxdxAN9phpYP+5d9uU/pe5qOwhDVbkysATfXOHwjkeuG1xhwYr
46KWsNrcpSSEnb1fqEGD5T5eHsBLU6F83vSnsao0WE2w90nkRoXQJ463j5Ro
MBIvp4pSPhUaHCGWGsnQYLWcqfhCfjziutC/hBOiwcRIsbvOp6hR4q9nd//b
R4MFqEtk0qkRkeV+up/+xH96Zx94tj4nIp4LT88UUtFgePzsT3IzEWWEPf7D
uEnEwtldqLRMaVC+XOCdhmkiZslb6ZTkS4sq4h7evtJAxI77S9LpL+xDvjWb
1Z61REzkRfybPSV6pLD04HRGJRE7ciHAsjiKHlVq3B8jUIjYvI3HqoLiflS/
Qbb+lkfEKPsbyXqpB1DvdWcLuXAi1ke8ye2RwITig/4gx+dEjN6lZDONihmZ
FzhyxT8lYgmFxamF55nRCM2dgU0/IrZ5IrmpOJ4ZTZXcvvHJhYj18rhQUskH
0TrLzesSukRstClP5JAqC/pMGiq10iJi8raHRl4GsSDvOxZHXmkQMYU+U/vO
rywI992sY0GJiLUmenaUKbAiWjcTvXwJIpYnmy3Hq3YYHWnW0xY8TMQKriml
LfixoaNN/F13DhKxVNuGKu8fbOh4w5Z5PgMREz+Gq5tnYUfctanOEjREjOOe
wdCbHHYkgi29kFsjYPTvAvefHz+KlAojG/7rIWB7ItnvbJ8fRyr5t/Vfd/zD
oRXKP0aPI7Vc2f7Oln/8ybVPKiROdC3r98yNOgK22qg8GbXGiYySJPbf+kLA
qEb/Tu14nEB3I9rUvd4RsDJWDuUIQ27kFpbZUhFDwOoTHexHQ7kROfSh8d4b
Aubw+LDh7+/cyOsZr/2jMAKWxbO8OiXBg574uz8L8yNgMrZr04bHeVG8C0tN
yk0CJj6soZrDzIcSnSe0xswI2GXctddlunwoxfFLJ78JAePC16VFvuFDmXbW
47m6BEzKsVy/ivM0KrIsJpZdJmCnzew/GEnzo1odPeV6PgKmzFN57320IBKK
PpRewU3ArETPT7XMC6LQXy3EfE4CtqNFzXVKTQjpOOvURBwmYKaX9NsMtoVQ
9/NrGoZEAsZAczLoprsImqy+ojM8So0lQrDRSOJZpMFI+6F1iBqbTPrPu5Uo
hnINqg9W9lNjV/GN1I6XxJDLqHJbRjs1pqSpltKSI4bWqZQMHSupMdmsfsv8
yHOITu6S6VoqNdbTEBhGDJFADo+2KiYTqbHQZYOTGQ0SqKH+M2dvHDXmdH0i
V4j5PIowufirIpIaAyHczkzMecR+X8oqMIgay6UjQOYnSSRQLGbHYE2NHRCg
Spzmk0Yhm/O1u+bUmMjTH/S696XRrGKB4IIJNXbbIzuzrV4aFTaLzrTqUmMK
syrZ5z0vIuk5IedoJWpsMddXrK9bBqkJ8pF5eaix3i88Sbo9csiUdu6UCRc1
Zq5N9LGXlkcuY6UdERz/9g20NC+Mlkdvk9Uu7B6ixm68l/EaMCWh8aOOm93U
1JjzYrXLQS8F9Ii+2D9sDI9Rm5/J3BBTQtGTD89VDeOxl5orS2sOSii3Wnlk
awCPPb2a0FyQroTaAjsv23fisdWaTy8NOC8jnq0NGuUaPObicl614rAy+jqj
8GIjC4+xaF1lERRVRe0/9smLpeMxn6ZfS5Puqmgys3XuVjIeq3spYfP8iypi
trHRaY/BY1/D7C2Crl1Blv1PWQpC8NjOxItPL73V0G5DU4yNIx471+4b0rVP
Ex3KeasRZ4fHlMXkB4QsNdHpYMutFhs8Jshl1/eqTBNdU1k0JZnhMXaM62e+
/VUUTzl8kkMLj3lVbVR59V1DMvmmGT/P4rHnY1fLDLx1UF4Hs1iJ8D8/w4f6
3Ep00MmdyvJYfjwWk8mUZjivg2iuijbansBjindraHxs/0OtUztLW4x4bJ8h
o17kDV3kwJeoKDBHhTGy8sg8cNVHA1f16hmmqTA7IccvNz7pIx0yrcHSGBUm
uliFl8QZIKnvd+3QABXmcVrkTs8rA4S/qRCu30iFXcL9XtOoNESx8cP9/rlU
2ErDbA/hhjFiqHxz61YWFUYPB65TFxsj/xn1Bc00KiyL7Zjn+QMm6JZMETVb
PBXGuazuTPpmgsS7A4XynlNhGr1uJq5ypqiO5dT9HgcqLBvToFckWyA52W4q
uEWFLTu/iAgctkCFVqHP06yoMEFhheiTApYo6sNywl0TKmwqaMOQL8YSWWlX
VRE1qLBBv7mUV49uos2QWyziglSY6tRzwr0ga5T/6G6VEB8Vtl/HtJap2hpZ
+d6/x8tNhR2TZW8O3WeD6lxD+liPUmGaAV67pEgbFGuUn7pGR4Xpqz+5//uD
Lbp4elWCMonD2D1rB+lO2KHZE3tjJaM4TNmro8jZ1Q4lHaWLzh/CYZun7OXm
K+0QHQPHdmI3DtN1NUbad+1R95JcZWAtDkP/HTfcbnFA978+1lfLwmGOh8fn
k1qdkMiXMBrFNBx27LubWoy0Mxr6+PbTxSQcJqhc1z+f6IzUst4fF47GYb/e
Hc6rc7uL2MIbRxme4bBUL/6EX69dUKnpYY+22zjsQqt5dbiLG3Iw5OJvsMZh
H5zKpnMK3BCXDn9PpQUOU6nOYkied0NPLl+UK72Ow/b/kT/I4+aODIXMiDFX
cFi16buEtgAyWllLe2POj8NmFOwKKpo8kcmzsrfxvDhsZfZFUxTbPYSx18X0
nsBhHmdMKkxu3kOhF+ffGbLjsHf1hZ05a/cQz8OLGVr7cFhjp+hkzdkHKGk7
zsmncw/S21kzC5ofIkfOr64bTXugfqCXNUHQG12QH/fwqNkD+hf10tlB3qjJ
T8zX6dMe9M2qcgjJ+qBtfFWYWewe1KIATrFPvuj6vrkCOfM9OLberTC46o94
hFg+lhvugZhMyk8B0QA0pyH9SVJ7D5TcSja5bQLQo9BATFRhD9reh+0JtAeg
Iia2Fk6ePTDVm9H+URGIGI8oLO6M7YKXps9lu6JHqFfKdvXB4C4sfyxJL1l+
hNKvh2yudO7C4Lm0gO4Lj9GlmHb8XM0uLE1Jeb/HHiP74/Ysg+//8UPOqlb3
P0GVPK/OI6ddaP0ltXRPMRhpdb6Yfmu7C7rkhhmDmGDUHRyc5Gq2CwmrhqK3
F4PR7IL/Ab5ruyBe4OlzPisEscDd0eciu5D3pkBxmScUWd249tp4ZgeqrNU6
9xuHo1lGdQ2J3zvwUCXggmx1OPL8poxj6NsBPmyZTOaIQCGClxyxuh2Qis88
6/A8An1YE1Lmz96B31aalK+eLxHuNd3yst0OeB9RsU72iEQhVwjZTZY70Gdl
GeldHolYt/Yssox2wKFoK0dlNxIJWK3V31DbAXfuDZQf8hppi42nfuPfARup
NQ7ZgjcooeG7XsT4NoSxfk4xEYpGAv6wz2FwG3T+nDX/5BuNiiS+wOXObeAo
rVOTb49GVbFFwmtV29DEsnyoLTAGzdolU5unb8N/ZoLBUXOxSJboVyxssw1T
cpLUdoQEJDD+Yl+E6TZ05hVf1rmVgI7UxFss62+DyR+awgc/EtDCs8/7KSrb
8JDUmZ0UmYgyDqxaa/Fvg3yro2pfXBI6xOrE6jq9BblEeSfPmykIt/LQoWNk
CyoCw7m936WgPx0h2MW+LZBOUd5W7U1BtW+zHPENW1BapGsqZZiKfI6NVkbm
bYEXlYxI1fU0NMlzw6PUZQtmKvWi9z/KQJ3UDvUc9luwJSgQkdWYgb6P3uf2
u7kFXC/vpV1gz0QJGVGNV3S34LmNeLF0YSbSE2rl65HYAn12ifyTs1kInVPv
3FrdBA+62/d8o3JQ7iEjEcv5Teg+bVzXsJCDYpZuBVZObMKj/B9Pla/mInLJ
ozMvujfhz8egMqDJQ4IXsSdcnzfhrczahl5IPnqtcOGCos8m9JY1v2qYKETU
1fMD9R6bsDpvcOQ41wfkppn1yNB5E7jGS4SPGXxA/xkebb1j8U+/WJrqXNUH
xOi45RiluAl7YYvZW3lF6NlbSJkhbsLEwY+LAmkf0drx++qeuxvwhVdGMGz8
I7qVIraAW9uAuqgWrTrBEqSSlyx3ZHID/r7tsGotKkH470HdCnUbsN769oXL
z1LkPXeFMSpsA7SWmxgfSpajGXdcycmnG5Atfkco90k5Mtn4dCPHbwOEFBy9
RrvL0UWC0HvMZQM8Vgli9/0/o9WjB5RndDfg0f7l/ND+L8hFpfmBAtsGdLWp
CkfVI/Sr7tnJeqYNuGEZHTl+BpCWjmKNAd0GeL8uvvUgEpDojSLWOxvr4MZw
wEFWDEPTLq8L3vStQ8fPdMRL/Iqs443GphPXQe+Im/ar5m8o4uOEXNvbddDf
CC55eug7Qg2eUV/C1+HL/dxJW4PviGPn9ZVQv3Uot0wsnBr4jprNWt6LWqyD
vYy0hONmJZI/oeHswrUOSxmHv7jY1CDHCz3VRkfWQXgn3e9laQ2K1bY7oci4
DkmEx3Ht+2rRit+T5oO7a2BXJMzcWlyLcoe+iRcPrMEvm7x0riN16GiK7NpK
/Bp81HCr6mRrRKqf67QHX68BAZ+7zuPbiMitxlnVoWtg9SHLvmesETXj7xu/
9V6DJv4/ajHlTeiJ9ccv0qZr8D5p8+7Di81o+ZSo/8Nja/CNrnRki70V8chV
dFuzrAEzlUhamVEr0jHQPHd1/xoclaf3MIhpRTmP7UeOb61CM8O1hcucbchq
PF0Z9f7D8X0BV8Ta0c9Mrn1UsaugW8ikO/24E1n+wajIr1bhWtd/Z/DNnWhR
3HpzPGQV9rGahzMd60KsKHOm4eEq6J/aLmf72IWM2sWaos1WoZ2wsV9msRuN
4C5HinGvgrpARl9Tch9yVx17nnp0Ff5+DPjbtd2HCKFPHx05tAoce2QhJuN+
xM/W4LGNXwVnbtoBtsMDyFHUwKh2dAX0SkOOEeIH0arxbU7LrBVoL/N3Clwe
Qk8T9x1pS1oB2znFY2SRYcQ+lsOoGrMCh/qCsRO2w0jWZWFPOGQFfgx+Ksnv
Hkb+Tx6MrN1ZgfNtM/f/1o4g+uLnmeFnVwB77qdn1DyK4tZFk/ACK+Dmaq5w
8vAYEpFvjvY4uQLFFF3RRpMxpP2DNeTGwRUIFKEcGpkcQ69/vXPkX1qGYP6B
GC3mCcR1oPAclC6DYa+mDH34FHIeFegPz1+GXuOawNrpKYQqkp9YZixDizB/
dOuVaWTmFNlHFbUMqamnTgwQZ1B8k+djZY9lYPtpL6r/ahYdfSnX80NiGbpt
RoQ1/84jO/vSoFjhZbi8z9bikPgC+qR49swd3mWom48S03ZcQEaLJ4MOsCzD
ZiSlRfn3AorSI4hqLy5Bb6dLk0ffX8R6pN6/vXAJgo15kr+tLSGbucvC6VlL
YCHY+TmXtIw+Vld0eCQtQclT/6q4Z8tI716+EFvEEnxbdkh+y7mCXnW/bDe+
uwQB012n3fRXEVOckcAv0SW4eZvzI2ljHZm7t7QW8C3BqTZaiet6/36OpoaP
P+cSxPE6s5fmbyCtbdlWboYlEFFPGjS130ShZie8bWYXQVrwW1LH3BaiPzn+
cyp7EXSXEvmm5fdQfzxd/VDKIqRX/yyqyNtDeUeFq7tiF+HlMPklAxMOdFhc
KqpCFqHRzW+nNgAHUTSbWckOi5C8LMNCcKUCnj8MgcZC//rfigSKPaCGZXsx
Hx2eRRg9uK1mhqihalz3/hWORZgb/vMwgEAAu6G3zpL0iyAT5HAURRIgv437
xsHpv4Bdqkl0RESQ/Sx5/sf7v/D1d07Dnyt0cOCC0Vks+S88MnxBo51AB4PF
XkJlMX8hSVXj+dgKHQTmwcn04L+gzLI69j1rH9QmqTME2P+FQuMth++c+0H/
qdm4tOBfuC15x2hBjRFOE/yHz3L/BelHX03bPjLCmn9K/+mjfyEn8AruIg8T
xHpNtLLu+wtDRzPWmnHMMOTkCguTC3BpjT31+xQzOOo/js7KWvh3T6PjtqOH
IHn3s4RQ8gLM6MV4SfKyQGfWQlNOzAJkhCn86LJiAYWdG8SCkAVYbYuXfTfK
AqwZ4m4ljgswIkD9xmuRFShrvzS/iS3A9LUnhWwybLCYfHjisuAC2LptKts+
ZQP+q5qBVdwLUBf4W76kgw1eJpV+qj20AFVzfjP2HuxQ/4pDM2FqHh4Z55s8
/XoUjkt57Ja5zoNzFDH/W/hxeBIydP6L1TxsvlTMHZ07DguDmneQ3jwclN4N
U9bmhMqnPN2VkvMAHdfim1i4wKnn54eWjTm4e8SeKSj3BCBvIduZgDl4IvVu
SyiCGwRa3sTNuc2B1VOXpqI6bnjFR9X613oObMLb6HeJPHCrqUt+XWUOuENz
pid9eYDp5GN2Iv0cMKr+UTD24gXL77/quV79gVhZ2bt0sXxwRW7ddiDgD4Q/
z6cXmeSDM2XMuHjXP8BsyKPlcOE0bGcrnj/63x+gY/fPVe05DdGvUuNZmP9A
CQ3fnwUhAWi+eduJLmwWHu3MsTXsE4ayPj/aGp9ZONN1nfb1HWFIMIhOfuw0
CzfzrpVWNAmDo/qPDvy1Wbjr+Gb9cowI0J0Tlt/ZPws4i1nlMtIZUMTNMy4G
z4Bswetd+xkxEPCifV/4YAa0y8xfhwqcA+blE5fv2s+AzanBlpBb52BwQufe
rNoMPLHEm50eOwdeP4t+jdPOAFX5nSixP+JQlOBZ2Pd4GnxGYn86CEtCDHu4
RqzHNJhF8p6tvScJ/q8yR41sp+Ewc5axVJUkaD3pZu9UngZtv5A+PWspmHaS
CWimnoZiPfUvO7kXgEdu97+qgCm4M6nK8uSBDDQflBOJcZuCNCyU1apVBnzH
H9I4WU/B/UjbQWsRWegN3/jMqjIFDFLcNyZ+y0LkyDKvDd0UMFf6nDS8KQeE
ZzMr+PBJCNJhEYm7qgBFpkLNnX6T4LNJ9fZ4kAJYnrPPznaZBDP7azY6nxWg
onfcXFd3EuLPkL91CSmCh+hITfLhSVByrjyQyqoE463dMQrxE2DTLGgixKAM
rzPZyKwvJuCqw4XxX9rKoORtqDXpMwFa3EEdjpHKkMDXjo+wmICTfHTjRzhV
4Pr9n3d+8UxAJVOT+pKMKtRyVsv5vh+HxViJomOpauC5SGDXjR2HYMcQOf9l
NThVc3mR7/k4PIs8Ozyuqg7+Ll8zGh3H4fZk3HDVnDpIf69g4hQbh1F8JdVx
TU14b1c8/KV0DCqb2PS/S2tBu1XiCc2MMfDkTWHZSdUCnNlzs943Y/B3JPRV
ArM2GP5n3bNOHgNFFsdRgTltwMuwtEhKjIFOZ6f6rQEdMNnvjhUUjMKJvHap
1SZdeEy02JVPHIWxtK7DNcx6ULincakpbBTSDaiXHPX0gGaZ59Os0ygMBm8f
U+jTg6L+1gJBkVF4dTxNj7SiD/T54ompWb+h/3bEzD396yCZxTUgHv0b+k7b
Tb5Ouw6WKfTHvj39DXFPoqWzVq5DadRI1NCt31Dto/mjPNYIrPxehXHy/Yay
SRlFWDCGzzqLPm+TR+AT29Xpv42mMKYx+OX0yxEoiGBPMDhjBswqdRsl/iNA
Vra61BBuBrcupni0W4yAxSLX+pqBORzi0XU6yDUC3g67Ds7zFuCw9MH0eeww
5F+43jSScxNipP7K3g4ZhiT+Rvex3zeh9oHYscte/+o04x/cj1sBH66gZ9N4
GJQ0Z89JhFvB0IFcQ4ejw6DPczb90kNrMDidoaMePQSt75I/SDrZQkDR+WBG
kV8gciZy42KRPQxKF1+p3v8LlssKms027eESnKPxnRmEg3OSEWNKDrBafybo
T/YgMB2Rs2LpcADHMQGfBsFBUD2Hcfjv3AEjdk7XEP4BSJyqPpRv4gxnfInG
NLx9ECx0yxKFugLH5+a3k4Q+8H9cLn+qwBWIq3GddeO98Hroa7VOiyv0O4nr
h2f3wmi+6a1JVjcIMbPQZhfvhdY2huuu0W7gGSMUtsnSCxer9UWcPrnBzY6V
hv6VHpj6MvB1r8sNpK+FaiSX98D5awcUGw+7w8SlchUhxR5w1TQ6ePG5O7Te
f/ToAG8PjL1bmzqW6Q7oo/b3OUIPqE+KO1//5g5RIuMKxbXdMJikEvZx1R0C
7T74vcnuhg8x1AHfmcjglOaN7oV2w/7hFz+IAmRQPs5y6ZJON0zXvm/YMiCD
mNGgF5d4N6hc8X8Qe4cMx16/L8exdoMcdY2pkj8ZaJrJ6yMrXSBUj05ORpJh
cb/ChaquLsiXUDnqn0GGwSv7PTPLu0CY8avibhkZfgR1fgyO64Ld+0RZw1oy
fITkpTs+XXD/qbD6wy4yJG05imtZdMETT6v/LMfIEHpB2lVMsQsSQ0q71v6S
4Z47deEh3i646d60LbFDBquCprllQhf02CY+pKH1AK2ZGNGu8U5o7mDLtGTy
ABl+W8fy2k64v47dljjiAaetxXLisjthkeb6xbvHPOBQ4taUT2gnTHoYCRBO
eMBOb7WApXMnZB8L/Tl80gMmj7y6raTTCVFBvgZr/3C7rlnGKfFO6HZetZf4
x8fCBMZoWDvhcKfl5Uf/5uXWLfFOrXTAcYfz8V2HPSCaBqzquzpAYe5qIQej
BwQphSTnlXfA+mt5GRmCBzj7GgyFx3VAwYtkF551Mph8PnnCzacDbM4bUsMU
GVRXZ8z0LTpAj+ob+1Y3Gc6Jl8VLKXZATw5R82sVGY47B/ax83YArl4kfauA
DHTZ1zi2CB2wYX09KfItGZbH2I0Hxtshpm7gpJs3GX5xj76F2nbwUbvr7mdO
hjqzgs7k7HbgYhLRSJUjQ2mM1+FHoe0Qu/a5vPIoGVI6VPRvObcD7v0NqbpF
d3hx8GCkmk47TH9ciYipdYf71/pbhMTbQd+Bb5ktzh1sgjOZGVjb4eu66rCg
gzvoVLlpz6+0wXaJv2ixpDtcopIPa+lqA1+jxt2oHTdgedC+PyquDSi2Sxpr
AW6wvrdxcN6rDTaJERd1pd1g8MkJdjWTNrhbU5rXPOUKWa8dTm2yt8GHfkbp
l3KuEHYsQkhvvRXGOKUv+PxyAfeUErHcrlYItLF8PPTQBeQLcXLmUa2gE8m9
/F71Lpy6cPpymUcrUG2LxDKaOsM+pKnObNAKphZ3/cdtnKC9PsrgG0srJN2r
jbyhfQfKdStuHFtqAZnbVBkCYg6Q0DN8k9zaAuUFix9r8fZgPyHifPplC+jF
ppyreXgLtJx1yX4uLUC5kiGpxG0L51fueXVrt0BnGqvRj1Jr2MV/fxLC2AJ3
o0/VHS20hNHgydDff5qh5aqqQxefOfxgZoy81NgMOTLUAyU1JvCayzhx7nkz
LD0UpmeI1wOvdN/0K3ea4eJ2s2V/tDZYiKTlJGk0Q1PK74iS91dASGa+THdf
M8T6bV/11BQG3xz6ZCeGnyDPpLY+uK1FUi83yDvR0AS9niqM/nn6JNaapPKW
kCYAXmXPLgYT0vsRqVZJuiYwFflVUlhsRSIvBAxOVDcCztvc++UHW5L8bsN0
zONG0CLPvUqrsyO1H7Wm3sU3gtTVx+f2/XeXlMifz1T4tQHMRmt7eyxcSQ6S
G8es/BsgPum9CPdpd9KeTvj56p16cPXVipka8iQJPftiG7ZeB5vPim6oH/Uj
rbyhcVMoq4PlzxGjtO/9SVjqf76LHnVwwmkn7r+mAJIBTEQZLv0Ad0epz/rn
H5H8V1lqueZqQfjUgVMq7sEkTYJFe3NuLVz4mTFP7A8hHTmUPRR4pxYmGvb1
ntYOJeWKKmyMT9YAB/dq/WWDcFKXjaNQwe9qeC32Eq0tviKhAZ0LpRnVwNG0
9kmjMpKUYSipTLGvhm7TTk+IfU0iq+2a1c9XwWzzRwXd61EkZpGIlxNblcD2
Y9l8mDmWtJZGTphDlbDEqTFBxxBHGuQ0zlkJqISsY19XGhnjSblMPFXUdJUg
Ljplbs2bQFJfKl4/wfodNhaHr2+oJZPEHKOJ/F3fIHGTg4F7MJnEPuZ96Ezs
N/iNrK6RPFNI450qIpdOfoPuhKYl+4JUUuDnLgsjka/wYdxOKlElg+RBvfaC
OxjBbthSigsul6S8AplnmRAUSlzra67MJR2aePZV7g0FeJlfHt55nkfScX7q
xfKMAg8IaW7zyXmk/wGWdmqE
        "]], LineBox[CompressedData["
1:eJwVlHk4ldsXxw2HU4mKDEmDilIpGU/jeqkMpduoURKJDI0iiuKSFC5ekqEU
GeLEeUlRsYjLcSjzlOmcQ4YkhLhUfu/vj/3s5/PsvdfzXd+11la1uXTITkxE
RCSbXv/fLYfJ7EFuKXgwnl8devYSQi74NFr7loFfjL/ArzoN7lWI5nQXlMFq
V52EnqEX4KvpSzpMl8HpqWtlvPkvwH3E98BlVy4IiLcehsdSwNrDj3f7fDm4
8VS8OyYSYVNgQMGTPRXwYML/+uTiWFg/wHy8IqACNGK3R2wPjwb1ffduJhdX
ANMsSezo3EegvCCQlbGtEhJfKTxXmhsJYtH3s/I3fIRV9Ynnq11DoD41OLlN
tgp2JyYt5By8Ap/myPhb768C8edl6xr2OgDXOcS2+0EVzMpKPJS12hKsHpnM
dxOrBkXj5rt1P03wsKXpR6+b1RBrkRdcccQNt3WbmQS71EBMKq9xYF4wbpa/
r1/1oAa6PiVEVq39B/WNeWoL0mpgfolm79r4UNRK3cOI7KkB07Ohl/NTwnGV
896iuDO1YBagb8cNfojSY+Zb2QfrQMrnzLBP9mOc/1nb1v1qHXzTP06MxDzB
hYVKD4zIOjB3ymOHecejclD35+b6OhD/0Rlq/Pgprll1y1PieD38uZKy2Ghn
Aq6bY5NQfaMeGLlbak1TE3DDsAkvNroeVCdGev+RSkS993LK2q31wHSKOTha
mYhGR9LzrKwaIFH47Gfs1iTcvSVMoHG7AYr0513TJpPQdLn77PH4BvCftch9
U38S7v9mdOKBoAG8C3f8dys0GS39Pk++OdcI3NabsvWVKej2ajZrgVMTmDw1
X1YokoYeMUNn2h40wahDE3+1YRreutMQkMJuAqOI+p5dd9Lwb/NnTdu/NwF+
+/6ZM5WGod0sd8crzXCZfCX1kZ+OEbyl8XrhzaB2dHnzKUU2RnEYZSLZzXBJ
y2llsTkbn9yqVogaa4bGyhj59a/YmL7Q4XWxewuwxbdubr3+EjOm9nWEPGoB
33oF+YTEl5jF15E8mdcCKwLyVWyqX2Iue8ZieKoFXvu83tqunoGlu6LGVbw/
g9qXYJ213AwsX+u1pO/JZxDX1dZV+56BlfNtd2fjZzA0YJ01kMvEurYNkWai
rTDquc8182Qm8l1Ldd38WoFZWkru78zENq6EcurzVljLJQcafmdis8rumZaS
Vgh6U72gQpqD1SXF5dsl2kBsNUPHYS0HCxcWWUncbYP7xLx3cIaD7x1Edhkk
t4FIvPq6CCcO5r4HjQulbWDjo2kY5s5BzrmC0UrJdlAMkhbcD+Fg/Kt39yIC
2iG3qvT2s1wOxsyadilNaYe9zyKrrD9w8KHllsOTZe3wsmPfkboKDoYw8pZY
zuoAmwKz4cZ2Dt4/PikWsqYDGPO5bo49HLzLNuhD0w4YXJo3//V3DnofeZ21
MrADYtNNN3r+4aBn6niUxYsOmG4rFx2XoNDtl65XQHkHwIeov9dLU3jxebbJ
wOxOyDvrw2hUptBqjNOWdb8TTqX5r9ukQ+FJ0+Gi7rRO8M7KL8lkUWgRtzFF
oaITYo1ZAaPbKVRf0cTKl+BD6wkLr08mFK6qdFvXKM+HXvfoBHtzCle4KSwd
UuPDnWM36ssPULiUZyGuaswHDb1DyoPHKVRxHR/ffJS+L/tRnGNJofLSyL5D
5/lwWmPiOVhTqMTVbXVy4wNrSIkfZ0uhwtX6j353+bDBZm0E9zyFC1VcCx8/
5MOMUXtc8QUKZUvlsl8n8yGOSKkNcaZQRvnwo75SPrQn2itGX6FwbsmP+6JN
fDjQ6V7Wco3CORfDvZR7aW7u6Rm8TuEsJe3LOhN8yCAjdjS6Uyj5ocbGnCmA
vnbrCNKDQobzFQs7RQGwpfTS1W9SKKawwNR7tQCk2NI7Q29RKFLI2RJlIICL
KxmLarwo/HPhgCbHRABa+sd7+70p/CU3vKz8mABIXw+71tsUTuX/Iyu0FwDv
y3zT5DsUTtpvlJh2FwDwZhvu9aHw54KqCbl7AljsGDvDo3ns3cWv6x8JQPHH
QS11Xwp/2Mm0704VgFOcotdpmofnZVRZ5QqgIH178BWav+ft++DOFUDFCX8J
W5rVZpe53mwSQHJpY7M+zZbHidW3ewRQJZqaMEjHJ1PyWnzHBeChxxMG0Mz7
qR10lyGEkdsGipI0ixqzd9yXE4KV2KL3DrReVqTaSPAKIURVVu7l0Plc7H6S
GLZJCO3cgR3tdL5JOkpHIwkhGIbtnztM+9HmGzYrer8QnPWUNPppv2Rr57yL
sxKC3TQ1q5z200zVz+WpixA8Ga0qoZ4U3rn8e9nzW0IoHU1t2EH7/wbdalMe
CGHn1ZBnDXR9vssM+6XHCME1z3rwiBudz0thf1auEB7WanJk6PqSv07FvS4T
Qt7fw5NmdP15exv+etsohLMntthdukTr/1qWXTQmBHbGxq2eThRe2mx4/l/x
LjA4HORoTfdT8r23SuWyXWAS2GaqbU+h3OqXXtVaXTB0qSk4xobCPW7qWvXQ
BTGimLGJ7tc7/8YLm/7qgszHS0ZzTtP6bMNNOp27IO9Mxt4Aut95T90XfE/t
gvY3RrlH99F+Dg8Xj7zpgrLwRE/rPbQecHQbL+2CLo+I2SfpeUput2z91d0F
TbED5UsMKfRRNkqSUu2GEW1q6zA9n6yIuZs1ortBnl/kIKJI6+/yH1if2g0u
wd05GnL0e+2Zx1pvuiFcjUOYzKPnpWZEjNXQDeuFakxrJoVD0k2Vxgu+QMwH
8a8yExxMDnhmfS7wC8AjpRSynoPWlEsmO/oLxOZUi7yr4qBy6+Y/Yy++gIyk
fXwzj/6fNtTG+vO+gNSh2qcThRx0axBrSpbqgYQOB+0KNgeNV57b1x/cA4Oj
Nib/+XKwp0B9y8XwXojZaMLi0v+p2s90uRux/VAz1qcjIsjAjqxl+VsdBiH2
e7LntTVstIji3xsIHQZHb4aZVs4LfJIUlG/+8AdEcuc82WadgoxTLoMSHmMg
ef7l0Xm3k/CT9YuUQ34/4Y7Ge3nP/ETMkVY+PeE8CY6Rkr/eHkpA9RjVPqb5
FGy+/MsvZ/EznHLz+51++BdYJnP1J3vjcWBqsUwq6w8wa5amXRB9gk/tA+oX
rxQh7HM6Tbs04zDUsDJokZoowZI8e7ArMgZlLqUbFcuLEZYuu8xFiWgs2JWb
/1pZnEgzqDO6PhKFv13O6B+VYRBnwrwrPRofoiizNnrdbwaRHS5dMN0cifqm
Vz/sEZEk4j4umuvQHoFTbew++R+SxLGo4UwJyQjc5cwN3fdTkjB/ZTfiKBaB
wdNdLP8pSSJMdvXNmj8kLldeHDgmxiQ6XVvPJUyQaHIsUKNOjknoaoH34X4S
I2rsHEP1mIRmr6Luj0oSN5Qu/TbHg0ksv9GvsiSSxBsWWyKMvJhEpWmRaloY
iUXdFts8fZjE1941J1khJB4RDw7qD2QSfts0bY8HkHiTmF7PjWESjn+VlyR7
kMh92+Ti/55JUD8St9+yIlF2z6h8fiGTCPzwZ5PKKRItW2QKxkqYRIa41oH8
YyQOTeyWOfeRSZD5OUzxgyQq6L3KMOpgEmYRxYfidpJoXVJ11FPIJKKf7vLf
TZD44vDAH6qHjqfb0za0jcRtV1fsVx1iEp+uGPxnok/iXdEdE8dH6XOLgvfj
2iRWh56ID51gEsraCxOfbyRRefl1E+40k5iJTUo/sp5E28zQoZkZJqF3r7NB
QoPE/wEQzs+q
        "]]},
      Annotation[#, "Charting`Private`Tag$7388#1"]& ]}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{534., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.0683966607881947, 0.05787609362051511}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7889592115511103`*^9, 3.78905506841129*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"191c41bb-c2a2-46ca-b1f1-e856348c3147"]
}, Open  ]],

Cell[TextData[{
 "Note that for large negative values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a6082b17-b716-4406-8f0a-ee29103f53f7"],
 ", the exponential term in the denominator dominates, so the function \
diverges very fast. Thus, the only relevant contribution for negative ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "55b0ccb2-ea52-4c0d-bec2-3d177a815e74"],
 " comes from the area around the origin.\nWe can also check to see how good \
of an approximation the leading term of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", 
    RowBox[{"F", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "ad1cd0ab-6db8-4121-8a94-29ea84e2765a"],
 " is for positive ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "8843ec35-173f-4f66-9659-de79e70995ab"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7889605005398655`*^9, 3.78896053444318*^9}, {
  3.788960618879907*^9, 3.7889606213363724`*^9}, {3.7889606808908143`*^9, 
  3.7889607650598326`*^9}, {3.7890550825873528`*^9, 
  3.789055129784154*^9}},ExpressionUUID->"f3a1dea6-0f8c-403f-b76a-\
d24621cbac83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"Re", "[", 
       RowBox[{"F", "[", "x", "]"}], "]"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Pi]", " ", "x"}], "]"}]}]], "+", 
    FractionBox[
     RowBox[{"\[Sqrt]", "5"}], 
     RowBox[{"4", 
      SuperscriptBox["\[Pi]", "2"], "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.78895882393449*^9, {3.7889590367388144`*^9, 3.7889590779106894`*^9}, {
   3.7889591305542555`*^9, 3.7889591306908913`*^9}, {3.788959175561902*^9, 
   3.7889591898908663`*^9}, 3.7889603836255317`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"6958fc3c-1b97-433d-ac6b-84b19bc0dec2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzXs01Gkcx/Gf60SXYy1alUXWz90QKZnm82sUaVcum5ymjGkWJeU6tjlr
1axIbZtLyRG1q03KqOQoO52kySrWutRSsmV3WkrFNiMalwn77B/Pec7rvL/P
97EVJYXH6lIUFUzO/3e8ctyYotRQrt0xcPSsGBv13vod0lVjMsf4+5kTYjjS
Q3sNDdQQ2jXskRwR42VCX+cCYzKf8u7uoTQxYiZun7A0U0MuTbZWB4khXJS7
xMtRjd2MfNeSyTRs5Vg6x4WSffdPPf1hWxrWl6wNai9Xo2Ahf5WcnYpi82lj
65BRCG+edDJWJ2HUujV9cHQUaoem4W8S98K+zSpTUvgO6h57dnRGPLp8h1gn
uWMI1ZZvOHMrDod8mvxslGOgOkN0WrNjcHXSZMwrfxzSzthww2QRavlDARZ+
78GcX3PHSCZEY1CXf8JT4hx789m9AqybdW4OOKqBjXgXm3NxOzpR8m+RywSo
R8pr16K2wdv2eF1t2wSUW2TX66IiYdL6/sOW/ZMoV8VEeyZGQKNNUu35ZArl
g7sFNx58ifD3UbGslikID7pWNXDDkZvXvT81dRo2HRy7F89Ccf863yvUVAvK
JHEkNzYEGeURqdfvaKEY/I0zujQYayxF/GM7P0Cq19ht6fo5kiL/uffKZAY2
m4bca/yDkLnyTYfZ7RlQzVubdQsCcapc72Bd1CyE4vk+CcsCYPewoO7J/DkI
neNU6dXrcSuPXZh8dQ7SXH7O8SR/mGtkOcM0xQhXutWrwng4wpLoizIpRtnS
cXqX9zpI/+7o/aiTdPHGglNcBt6l/SPZ9joMdTjxyngBFz2feYZGZxAXD/WN
/cHBVPrCeWm/6zDSry8YWYX5oa/qvM6m5bqM4splcWm7L7gVTSH8NF2GEdWL
CjNWIz/RfuRhE+lFdceWB65C2VJe2wJLPYaRfSyZWeQD1/yhD9J44uH8cac5
b0heBKTIFXqMQuYuHxj2QpAue42TqT5DKQT9p7UrwFLxw3RExNGa4MxPV0Da
yMjOyIl5z+uL13riwJaayBQjA0ba6/O4QuKBVR29AUY7ibO362cJ2Xhmvj57
3i/E1KX5u1VuMLT3tVjHMmSk0SqaW+2KYYtXrzkCQ4bS3O2xErogosvaNLWG
9MzAL+5wnHE5suzIojnias+S0+5OaGx6wCRGsBiqVrVBZumIiPG8YFYlsec+
bqy9A5o6eR5JF1mMNM7UirF1gEeVxrT3EumRO6eWWjlggUDwpLKa9PSuqsdm
DmhucfsqoJZ06bnnkfoOWFHWLslpIH0/L+HoAA0TnnGFXjfxtFV/5c80Dixr
PJzQQ+xkoCz/kcaIJiW++xF577y5t6yURmt1n/v5J8Q3np8rOkHjoHnVTd5f
ZL6H/qkwi8bbV4Fd370mXczWykU0dvyqrX39hthCuLxJQKPtbE1R2AjxsNi3
nU+jMnwx31ZF3M/2GQinEdXwclAxTnzPRbTMn8wXl7Y4aoiDFZQbaKxO2Swr
mCD/sfWPc/1omNH1ScJp0iul+2K8aGRRe8JbtcTtrnclbBrqP61WeswQf5us
k+dCQ3Dj4eKSWeKFBu4VDjTa83Om5+bIvm0XAm7Z0fgPVAoU4w==
       "]]},
     Annotation[#, "Charting`Private`Tag$7804#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 3}, {0., 0.005033053040974761}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7889590789110465`*^9, 3.7889591364165792`*^9, 
  3.7889603844852314`*^9, 3.7890551363446426`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"4494df17-fc1b-44d9-8578-1aa6bf1a35bc"]
}, Open  ]],

Cell[TextData[{
 "We can now break the integral into two parts. For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "5c666ca7-524a-45c3-868e-453f3396cfe3"],
 " we can use the previous approximation, while for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "<", "1"}], TraditionalForm]],ExpressionUUID->
  "66a7bf32-118b-425d-9961-d082aec8a1e9"],
 " we only take the leading term of the cosine (i.e. 1).\nThe ",
 Cell[BoxData[
  FormBox["J", TraditionalForm]],ExpressionUUID->
  "64c728d1-4839-4c85-be5c-1d0de6ce7a0e"],
 " integral is essentially a \[OpenCurlyQuote]CosIntegral\[CloseCurlyQuote], \
which can be approximated for real ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "8dab58f6-f49b-48d0-af9a-7a1576cf8fa2"],
 " (this can be of course done for negative ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "ca442c10-22e0-4035-8ba2-2dea40090458"],
 " as well, the difference being an ",
 Cell[BoxData[
  FormBox["i\[Pi]", TraditionalForm]],ExpressionUUID->
  "5606e2c3-1fbf-435a-b6ee-ba3498066eea"],
 " term coming from the logarithm):"
}], "Text",
 CellChangeTimes->{{3.78895883153118*^9, 3.788958841027755*^9}, {
   3.788959922276467*^9, 3.7889599903255997`*^9}, 3.788960167624482*^9, {
   3.7889603206963053`*^9, 3.788960368658577*^9}, {3.7889604107091117`*^9, 
   3.788960412170205*^9}, {3.7889607742612305`*^9, 3.788960819452746*^9}, {
   3.7890551548551455`*^9, 
   3.789055185272811*^9}},ExpressionUUID->"11dfe93a-9e19-4751-81e7-\
85c62e674abe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"-", 
      RowBox[{"\[Sqrt]", "5"}]}], 
     RowBox[{"4", 
      SuperscriptBox["\[Pi]", "2"]}]], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "x"}], "]"}], "x"], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "\[Infinity]"}], "}"}], ",", " ", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"a", ">", "0"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7889588443917913`*^9, 3.788958916792582*^9}, {
  3.7889589471127214`*^9, 3.7889589749551497`*^9}, {3.788959729585718*^9, 
  3.788959750929905*^9}, {3.7889597924467115`*^9, 3.788959886246209*^9}, {
  3.7889599841411037`*^9, 3.788959984881125*^9}, {3.7889603065220747`*^9, 
  3.7889603135913057`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"fbd14bd2-d82e-46c9-9057-e1cab4451458"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SqrtBox["5"], " ", "EulerGamma"}], "+", 
     RowBox[{
      SqrtBox["5"], " ", 
      RowBox[{"Log", "[", "a", "]"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Pi]", "2"]}]], "-", 
   FractionBox[
    RowBox[{
     SqrtBox["5"], " ", 
     SuperscriptBox["a", "2"]}], 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Pi]", "2"]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "a", "]"}], "3"],
    SeriesData[$CellContext`a, 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`a, 
   0, {(Rational[1, 4] Pi^(-2)) (5^Rational[1, 2] EulerGamma + 
     5^Rational[1, 2] Log[$CellContext`a]), 
    0, (Rational[-1, 16] 5^Rational[1, 2]) Pi^(-2)}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.788958925913194*^9, 3.7889589796206737`*^9, 3.788959740300581*^9, 
   3.7889598215458517`*^9, {3.78895988177221*^9, 3.7889598868846693`*^9}, 
   3.7889599858365693`*^9, {3.7889603087211943`*^9, 3.7889603144859114`*^9}, 
   3.7890549525111647`*^9, 3.7890551926291084`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"16a1539c-27f3-410a-bde2-cf2968b64c7c"]
}, Open  ]],

Cell[TextData[{
 "We thus obtain the leading term in ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "7294e7c2-214a-47a6-a349-746482f4f3f0"],
 ", so we are only looking for the constant term ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "cd61dbe8-5336-464a-8946-c6a45efeefd9"],
 ". As a result, we set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "442ef946-c64c-48d5-b5ac-045e4593dcba"],
 " in the integral ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "1"}], ")"}], TraditionalForm]],
  ExpressionUUID->"c1ea0bd3-3cd0-4494-a4ac-00279c24fd45"],
 " to find that ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],ExpressionUUID->
  "01114863-a77f-4433-9aa1-c275a56731a4"],
 " is approximately given by:"
}], "Text",
 CellChangeTimes->{{3.7889608465592637`*^9, 3.788960874633198*^9}, {
  3.788961071325235*^9, 
  3.7889611497814817`*^9}},ExpressionUUID->"2fdec39e-67f8-45ff-8f4a-\
83c04982a832"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"x", " ", 
        RowBox[{"Re", "[", 
         RowBox[{"F", "[", "x", "]"}], "]"}]}], 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "\[Pi]", " ", "x"}], "]"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "1"}], "}"}], ",", 
      RowBox[{"WorkingPrecision", "\[Rule]", "40"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}], "+", 
    FractionBox[
     RowBox[{
      SqrtBox["5"], " ", "EulerGamma"}], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Pi]", "2"]}]]}], ",", "120"}], "]"}]], "Input",
 CellChangeTimes->{{3.7889601745419536`*^9, 3.788960197250261*^9}, {
  3.7889602345435405`*^9, 3.7889602414470806`*^9}, {3.7889609710995235`*^9, 
  3.788961050444069*^9}, {3.788961165161261*^9, 3.7889612425184145`*^9}, {
  3.7890549254057474`*^9, 3.789054933066264*^9}, {3.7890549801372943`*^9, 
  3.7890549866179657`*^9}, {3.789055200533972*^9, 3.7890552026443286`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"805d2221-030c-450a-8b30-dabf4fe7598c"],

Cell[BoxData["0.0295629581116624414915504545470430150482462588310022135695`40.\
97510792306122"], "Output",
 CellChangeTimes->{
  3.788960221165312*^9, 3.788960270630047*^9, {3.788960985967766*^9, 
   3.7889610527329483`*^9}, {3.7889611903010387`*^9, 
   3.7889612440722585`*^9}, {3.7890549554044285`*^9, 3.7890549875056224`*^9}, 
   3.789055203735444*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"2ff024f8-9835-4276-9f16-a84bf87c0f96"]
}, Open  ]],

Cell["\<\
We can improve our estimate by increasing the WorkingPrecision and \
AccuracyGoal:\
\>", "Text",
 CellChangeTimes->{{3.7890552205524454`*^9, 3.789055235938339*^9}, {
  3.7890554477210865`*^9, 
  3.7890554511162596`*^9}},ExpressionUUID->"21cb248a-ad4c-40d5-a9a1-\
d9ddc05549e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"x", " ", 
        RowBox[{"Re", "[", 
         RowBox[{"F", "[", "x", "]"}], "]"}]}], 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "\[Pi]", " ", "x"}], "]"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "1"}], "}"}], ",", 
      RowBox[{"WorkingPrecision", "\[Rule]", "200"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "120"}]}], "]"}], "+", 
    FractionBox[
     RowBox[{
      SqrtBox["5"], " ", "EulerGamma"}], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Pi]", "2"]}]]}], ",", "120"}], "]"}]], "Input",
 CellChangeTimes->{{3.7890552372917166`*^9, 3.789055264793148*^9}, {
  3.789055342847576*^9, 3.7890553507947063`*^9}, {3.7890553840481424`*^9, 
  3.7890554363086925`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b98b1792-7c91-43bb-8244-371bfe9b72bc"],

Cell[BoxData["0.\
029562958111662441491550454547043018126067599746244865506157577868327082596730\
743564672500272622852771511034619375696412076183435266442`120."], "Output",
 CellChangeTimes->{{3.789055249595784*^9, 3.7890552663330617`*^9}, {
  3.78905534466372*^9, 3.7890553519765854`*^9}, {3.789055390241152*^9, 
  3.789055443230072*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"0c3c669b-fd21-4ae6-82dc-0f79f2d2b9d6"]
}, Open  ]],

Cell["Question 3", "Subchapter",
 CellChangeTimes->{{3.72494407382446*^9, 3.7249440963039*^9}, 
   3.724944194386578*^9, {3.7888051100862026`*^9, 
   3.7888051279157143`*^9}},ExpressionUUID->"135fae1a-2d53-4b1a-bf7f-\
5ac4a216d1a8"],

Cell["\<\
We start by defining the two functions and plotting them together:\
\>", "Text",
 CellChangeTimes->{{3.7888056637730646`*^9, 3.7888056640171995`*^9}, {
  3.7889359412199035`*^9, 
  3.788935954699215*^9}},ExpressionUUID->"b102386e-ffe1-4072-93b2-\
5c6230eae515"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "g", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     SuperscriptBox["x", "2"], "]"}], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{"Exp", "[", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"5", "-", "x"}], ")"}], "2"], "10"], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "8"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.788805665435068*^9, 3.7888057335248575`*^9}, {
  3.788956849640687*^9, 3.788956854541394*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"51e7c05f-8f20-4eff-ac43-62024fd2ee3b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
K1qkllohKtXJlcuOgsVyKlkDar/h50udVgt3ClYobu45M1oMCsf7Y8TfUtDY
NWlWRryYaC56o7/wjjxfleOznqOMeLjTeLwriqwnRpeS21NBdFCzNFKjKShy
xmTZSqOfRFBLYOWJRApKWHM9dh+tJ/bo6zppfyH9eXnvduv/JkYzOSibkil4
TM9qt1VMI3Eo4srZ+VSSrxWXQ2qOtBCLZ7X+hRNkf9mhzVdU2om4mskQ72yy
/rzNVht+thPH98Zr2uVSMC8ffq+16SC+rF/zUKuQghmRo79vvPxLnO8dpHZW
UHCTf+ExqeIuQvTEO6KsioJn4QLb8HA3kVlsapXyk9T7ROd3gYpuQjIu56PX
LwpSla721OT1EGVXg3FjKwX7VzQdvfugj7jRerhLpI3M//rt750DfeT3nNNn
tp30l/Rs19TvJ9y32daUdpF63Rjv/4x7gNjydp1rcg8F6z7Nyl06NUA0ivym
h/VR8F6hTtj0xwFCeXzPBdshcj47G9tX7CW/v+dm+E1HKJgr3Bd1kdyHHtcm
fIIxCgZxiSgcLhokdu6zMpIbpyBtTEI8lnOI6E6hzKz6R8FtlnFPHdWHiADZ
yrCZSQq6U654v7EZIvClp3bHNAUPhHx5LBM6RAzxqPeUzJL8NV9snckZIkJd
R3yT5im4nvHf5TU9Q8T+vqhtrxdJfhR1q5y5h4mJE2Z1nhxUXKd801JIeph4
WyJ88+pyKprKj7KaVIcJ/V35TJMVVIy6fLjo1/5hYi7uZq4mNxVFLDWL548N
E9H0bdYbeKmo5u1z8ODJYcLIr0tgFT8VvY/yyn07PUwsWwz9PL2SihbZzvP/
tyfYGpq0C1JR3UFFcpY8b/aHa65YmIr18yNeReT9PIbf33wRoaL5eYpwChk/
Octu7ysxKlLumCllSQ0TZxRl+zwkqOi5qnXLANcwIfSuyc9mDRWL4+7N7uge
Ir6L+isZU6i4ONOnF5NN7mceOvW7aVR8cf9moHYwuQ/6VPfQGVTU32Txa+7y
EHHv+anpOSYVpQ9YV0nsHCKEQnt4m6So2GD2pDxwOcnfWwdK+loqRtdR8+4V
DhKyMQsbQ2SoqBTPMmnzHiSSEh+qu8pS8b1uXVXankGijAg/qSpPxeMZzrz/
7//xwo02EpupePfBjUQ7Uh9dFcluE1uoGL7zkoQ3qZ/FlpKwL4pUrOVFWtrh
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
pSUWTq5i1aacWYT/AVn/IZo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11304#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2Hk4VN8bAPAxU6bsM/fOpCyjbFHSVylE50UkWSKiKETqW6JNsifSIilL
shRKZKlv9hYKqWQJUdZKomTJHWRL+p2e5/fXfT7PnDn3POe8533fmaV7vaz3
0Wk0GluARvv7vLHNSwI/YJmflPmmewwYmtfXXsWggcQN3cdFmQzQfbTr9gUm
DRBrzXWVWwzoWGq8jhCnQfmab2mS8Qzgjkk7KsnS4MGCsFoihAFX4moyzXRp
cIpx5FigLQPOdCiihFM0MLWsYHJpDHB36zqswafBhvQjS2Ud6eAi53Pl/oQA
aOZckivjCMCAeu6D9wN02BFfpHNhPg20/st9sraDAf1l+bfOr5hDD993RHR9
mAe/BzZcddk5i15a3d65unE+nI2+aZDePIMEvROG6t8LQoax8/pdO6eR8AKH
g2ltTLCQfRTTLzqFUn4U98m9XgBOQfehbmoCuQWC0kD9QkhcHWzUPvgTPXRy
c3OqEIL1bXpDqcI/UVPe9kihB8KQV3+BV2Y8jqRyj/j/yReB/sZQbtz5MTQ+
rbw/NV0UsuL0MvYOjqI/IyKSEdlicNegtN/MdhQ12JYV5OSIA09//MlsCx/F
M8OUSs0lwOZTC1fhMB/t0Sq3fdUgAb23rfP+E+Gj6t2nOnKbJKCzJ3uduzAf
aYSudopulgB2Hz1BRoiPmG9SD+xulQCj6Omxy0w+euAa4j/2UQJKPWZ/+9P5
iB5lkMb7gR2bpBM8RaGMvqohHxEWFEZzeSp9FBqOfh26fAsLmrfUGQlUUOgu
IZK8bisL1ml9KXr/jEJ7Yy0KN5mz4F2mmMy9pxRqi2vudbZiQfxod4NjKYUq
r38wStjJguFmtcpXJRSKv8lnCh3Etq7+r/Y+hfSzF18avMgCLadrBy/eoNCs
qmP69CUWBL222RuUTKHinJulzCgW6Ay5bz2eRKGV9+SH5WNYQFvSTjklUIj7
QM3CMYkFF5F+2KY4Cg0W6UvU57BAL5p5VyeSQnEV/8ber2PBtogfle2BFFrd
HiJZ8IYFtiNb+kcCKFRDJSSXNLLAvmUHXxB7jleTXt7Cglq18Xvr/SjkHqRa
9LaLBTkBFvW3T1JIa8Pgu4khFoSEhp3N8KJQR6HHIiTKBsn+M4M2eyl0oi4s
yVCcDRU2FwzPuVBIrDeZZ8Jig9GvOb/HzhQyIOqVrThsMF786Jy8E4Vyjqpp
ucqwoXrXFElzpFDAqh/259TYMBgY96XHlkK8u16JDeZseOYufdrClELO42dO
5lmy4UOSoPfdLRS6BdesY6zYEFG5SoWBrdBeKmRny4Y46e43jzdTSFVIyP+j
Ixv8tziJrjGi0FqPdIfhQ2xozfpmuBkoZLK6XVr4IhuiinTmz62j0IWAoamh
CDaU9zc89MKuqf7T8iaSDbrhYio9mhQyd1GKjL7Khp+auuj1WgpZRx//vTiB
DWnBZpCqQSHHcdGPy++ygbyidvboKgodeWiQYvySDV9fxd5MVaIQ3blbzKqa
Db25gzU87BhmUJBDDRvsDvu8TVHE573j0e4jb9ggtfbDsVsKFPo9ri6d+J4N
j51KJvKWUejiPzIJw1/Z8K9X1fS0LIWk2x8vmOpnw262SWM49v3T9qfog2zQ
lmk4TWI3NcTYLRphg0ZNipeGDIUkPYW4+pNsKM7efeaUFIXuZE9GxzIJOPLZ
/LCaJIXWWcfRUxYSsC56oPPVIgpVT2scyxIm4GmVv7wr9pCJp9VTcQKGM3X1
krkU0vjWK96/iACF/PAESQ6FyuXfXtqwnABJF9l+bTaOj+Tc8B4TApTue/rL
ilKI8DWyqDElYGEa0dYmQiEz24+cfDMCBpJ3UTHYZaISd0K2EWCjnrVdBDs1
6PhzOXsCBDs3984XxvHorENz2k/AfLc2RemFFErRbX5l/C8BlgKeWj0L8P2T
9IhadYiAGGMpwSzsLU03ZOc8Cdidd+OtFvZKAwG9GycJkJ85rO7CpNCofLVv
51m83rIRfst8Cq2gueg/P0dAykxUfga2W9f0gpwLBJwiW9V8sd/FrrjuF0mA
hLK+jRz2w/lRxYvjCHjh9MHJZx6F+J+VgwTiCXDaJ/LTAlv1abnR9+sEoKMF
m5Sxk06OtjxMxushbYgOBoWCvtmO2aUT8MPV4rAJdsnzH49RBgEhL3LeKWJT
KefOKN8lIKjAfoqB7WL/iDWZQ0Bqx2WPSjqFNr2WXn2tgIDlh/niJtiBd4om
A4sIaIi3NF2BXRxi8WxfCQFfV3VuFMdernPaQvMJAVknDu1oF6CQcM4Xj5ZK
AvqyhdFJbAVZ69T8KgKqV4mUOmHrXi1vvvKSgJLxz4NbsD18buiY1xBQNSrg
JocdNiDsuaKOAM8nxrki2Dd2+6UtfEOA3jfbzGkahd4Y2i142URA98XXRe+w
vxa/2JDeTECohcrrKuw5lbVeZ94R0CtiGlWIrS7Ber+xnYB+9ss117BNQoMX
ynQScN5Fhn0e23liWPdXFx7/UO22H/aVrprbJd0EyFw99sEF+66ldmtcDwFS
LbfDd2CXV2YKneglgJt+rmcrdpsmd6P1VwLik6X5+tj8u2FHV/fj+Y+45Gth
C0mPpYsN4PgfsFFajb0syqVtaJAA68GfZsuxdeiNwrXDBAx5GCotxbb23oiy
RgjwCdbNX4J9sD/32Dk+3j/TborEDnWQytg3RgAhtqpHHDv5zYV2w58EUDzF
cGHsQv0pkWWTBNj+qOpiYtcVugNtmoCkOZGv87B7ld8d/zhDgN/wbBodezbR
MLN0lgBhr1gJAWyOWH5H4hwBry2a/6FhrwqRE/OlkXDZ69H8vzYev6xvRych
ttb40l/v2f/7hOY8EnxO+L/4+/2THYfuEoIkaMTY5TGwL5t3dPKZJCw70Gkp
iJ1ZbiLeuJAE+lZm2sK/+7mmxOC+MAlUdme66N/9zFA8eUmUhENiOx3Y2NTi
2KyD4iRYEaerFmEviKR/MGGR8NnTqlsGW452VEKZIKFsuP6+Arb28U+G8zkk
fDs+ob7y735+Nff5wiWhcrbWde3f/dxZml0hSQKZZGmqh52IElhB0iQsadun
boWdn880cpQlYRPrl5ojdo3iyVM6ciQ0xhp+2o/9S3j7pwl5ErTyxneGYJPB
Fex3iiTcSnGWj8JeOapuXKBMQkRoeMoNbMc2kXteK0gwaGM+KMU+sdW/21yN
hKqd+zfVY0c+/U6sVCdBZfR8xEfsp+kv/fo1SHC/KKXBwPHPO3raxEWHhAcH
n3fbYJ9HvuIHdEnQ7tP86YFNiR5777mRhP8uL+s6i12Z7eoWYEBC1lffpY+x
3XqNT8ebkhAiGntxJb6v9flo800zEhSDTddsxV4XoiV2x4KErw437h/EZsqq
Judbk5DwYYVMLna2nejD+l0knKjz79DC+YJQEgxucSQhOChdcg92wPicUece
EsZ/xqiEYZtfpZr795JQU/vx+du/+aameYRxiATCsrHDF+erdRsTlXX8SdDf
PRI/gvNdikjMDwgkoetQxPxlgvh8OyOKNgfj/d3lYGyL3e4TaGgbSsL2q8X6
T7ED8pydjkTg92cjuUScbysUlOMzkkgoqPwnzBfnb9Ux3p57N0iItGOqPMKO
rpBULEwhwTn8Zto0ttseoYKK2yTcTtAWCxSikOD14TddOSQESeq/j8T1wEy4
UJAoJWGz5k/VVlxfHMXuKk6WkVD3VPabrBjOV6zkTZ3PSFAAE8f92BGLws7c
fk5Ci1bl0RnsGnmbuTW1JKR+OmCqIoHrhe74T5sOEsRELj7JwvXLHvWT2l0k
mET7ifzGPmDQtUbmI/78FnuRFYHP16TqaN9nEsIfuO/8hV1tEzvs/Z2E9Vs+
x9jjemh8eG3ftSkSFi28MKCJ6+uOI8vn+c+QoPrduzMW2/24tLzTLAmn5teG
j2Of9Z3nokzjwGT0Z5HixRSqOtvSVcLkQPzQqjZ9XK8Nb55oaeNy4JMixycA
13doKHy+RJMDg0pJ2kG4f0hVW3NSeT0HGIvNw+ewaZfylq/V5sDLE5wHwbjf
qDC5H2mux4GYoxuSwpRxP1aZaXfaiANXgpa9va6C5y9KHOyz5UBajMC7ATW8
/qTTRN5JPF4qoFZzPe6Pp+delJ3iwPJC+74mbEH7wFM1fhyYEpb75KlFoVek
34cvQRzwHX57LEcb5+/LxzO55zggQ0bKqOtSyDTEfUNAPAducb5dc9bH8bff
zHXzQw5c3bDtnYcZhS45poaYPubAr6cW5UvNcT60Gk8xL+VAhqdreCu2mW5y
1/ZyDkxsQOlGlng+1pCtczUHnga0qqy0xu97EmHi28aBO+kF3svscX0Ur1XL
meLALs3w7kI3XM9KtkyJaXNhtN9t2uc0heQ/X/cc0eHCF/1jWTYhOP8L9/c2
6HKhy0CKp3EG57c94U1XgAtiNSUOI6EUOi74PJttwoXi9n0yx8/h+2aru5tr
xwXTeJMPKZdxfzW+qlLGG49P9lWNwv382Gry0so8LkzSZv+pK8PxXjwcp1nA
hR0fybWj+PfC3g2vUjYWcUE323X54nIKNRr5FWx7xIUktnP/v5UUyt3V3XGi
ggveGxfUcl/heAnLVSlr4oJFiZ7RzUbcX7VuemU+yoVA3Rn3fb04nwR5073W
LIIhxbKST2J8tHPitg/z3iKo6+izow7w0VtFrR4dBUlYJamvHNzAR24qruox
dyThcF9AS73lKCrb4eCvL7sYfjTSNt9qG0Xq9gNZZNpi4Na9LuCFjKEDocat
elJLYN/MjMMvjXEU5r5gRiBmCRSybDwsJ8bRIxmXPwOkFAwPVjm1fvmJiubC
GaqXpWBjhbTiTOcEqikwHIhkSUO4ivuOsgVTqELO/eWlaGkw27xCumb7NDpd
Ypv2WUgG3hg8a1fKnUH2y7r2OETKQH2dkkCT2SyaLFaXWsGUhc7i/S5r//xG
pxjf6+KCZCEsL1k9r+0PYitouyjSePDf2iG6grAAHPfcMS7kywPDH1vFndbR
QXKdW7WSPw/C7ZrsezbQofT30WSDQB4EEVutDujTQTAycpNfCA8+djXZBJjR
ITGnKvb7BR7U3dz1pmovHSr7NTSrE3lQ61XY0BZFB7ar+MmzpTx4OTq0e9EQ
HUpUZUzTnvLAP9XEYYxPB8dRVdmych68mJ23/u0kHTJCjF+OV/HgUVpt1HUG
A3RSA7lu9TxIPTvN3yzFgL0fBosNPvKgcKNZq8ZWBjDvTF/c080DDeNWbz0r
BuR6MJ38enjw/XeP8FY7Bkz8WsbM/8qDlQNfFbxcGXBxyS67pSM8OPakYn2n
PwPUe/av0OPzYPMOj2e/QxjQkuX9x36MB95x4VvlzzNAVvtq5pVJHrTnxfr4
xDLgOS3FP3eaB80nGpdkJDLgQHWuZfUvHohnCb9uTWWAyJXH8r2/eVDfNBQq
ksmAPLvqyT9/eCD3//9D/geGJplV
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11304#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {2, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2, 8}, {-0.9711700723320592, 2.4596029304514255`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", "x", ")"}], 
       RowBox[{"g", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.788805735623539*^9, 3.7889359395105004`*^9, 
  3.788937274749616*^9, 3.788956856447195*^9, 3.789055494060299*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"0363727b-dc73-4787-bed3-e008175abb29"]
}, Open  ]],

Cell[TextData[{
 "The number of roots of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"g", "(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "4cf8d525-e062-48c0-bfd5-b655bf07f9da"],
 " can be found using the function CountRoots. Let us note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "\[LessEqual]", "2"}], TraditionalForm]],
  ExpressionUUID->"d1afef2c-ad66-48ab-b4f4-bd86a7048263"],
 " for any value of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "bad2bda7-341d-4e02-8f01-ae725bfd1a87"],
 ", while ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "<", "2"}], TraditionalForm]],
  ExpressionUUID->"2ea162e6-a966-4692-8807-f1ca45dd8c5b"],
 " only for a region around its minimum. From the plot, we can safely limit \
this region to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"2", ",", "8"}], "]"}], TraditionalForm]],ExpressionUUID->
  "e8d0d781-37f9-4cf8-afaf-b5422bee6062"],
 ". Hence, the number of roots is:"
}], "Text",
 CellChangeTimes->{{3.788805744407655*^9, 3.7888057617738295`*^9}, {
  3.7888060606027975`*^9, 3.788806083792674*^9}, {3.7889359671085005`*^9, 
  3.7889361263789186`*^9}},ExpressionUUID->"3a306ff5-4ced-4021-8a6a-\
6ba524c75158"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountRoots", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "-", 
    RowBox[{"g", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.788805763047036*^9, 3.7888058908388524`*^9}, {
  3.7888059572130084`*^9, 3.7888060492520213`*^9}, {3.78893613194296*^9, 
  3.78893613752378*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"c8bd65ce-9597-4e81-8cbd-d06cbdd2f118"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.7888058155410748`*^9, 3.788805891274719*^9}, {
   3.7888059581248455`*^9, 3.7888060438678045`*^9}, 3.7889361390227013`*^9, 
   3.789055498704277*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"240d3699-f000-40e7-8e89-b7375351041e"]
}, Open  ]],

Cell["\<\
We can now try to find the (approximate) values of these roots using the \
FindRoot function. This function requires a starting value; initially this \
will be set to 3 (since the first root is higher than this, which can be \
observed from the plot), after which we will  increase this in constant \
steps. If the root is more than 0.1 away from the initial value, we will \
discard it, since we will cover the interval in steps of this size anyways. \
We choose to proceed in this way since the FindRoot function does not always \
give the closest root to the initial value, unless these two are very close \
to each other.\
\>", "Text",
 CellChangeTimes->{
  3.7889359729055185`*^9, {3.7889361523698177`*^9, 3.788936176253722*^9}, {
   3.788936288041856*^9, 
   3.7889364886208467`*^9}},ExpressionUUID->"73f2e2e2-02fc-4f2d-8bfc-\
171ff8aacad6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x0", ",", "i", ",", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", "3"}], ";", " ", 
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"x0", "<", "8"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Clear", "[", "a", "]"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"a", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
          RowBox[{"g", "[", "x", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "x0"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "140"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "60"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"a", "-", "x0"}], "]"}], "<", "0.005"}], ",", " ", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"i", ",", "\"\<) \>\"", ",", "a"}], "]"}], ";", " ", 
        RowBox[{"i", "++"}]}], "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}], 
    ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"x0", "=", 
     RowBox[{"x0", "+", "0.01"}]}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "11"}], ",", 
      RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
  "\t", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.788806014844646*^9, 3.788806015788426*^9}, {
   3.7889359169642124`*^9, 3.788935932780283*^9}, 3.788936143033908*^9, 
   3.7889364293816624`*^9, {3.78893653704087*^9, 3.7889366354911284`*^9}, {
   3.7889366815517387`*^9, 3.788936692742421*^9}, {3.788936730999275*^9, 
   3.7889367611721053`*^9}, {3.788936797304467*^9, 3.78893689509918*^9}, {
   3.788936930296282*^9, 3.788936944462459*^9}, {3.7889370022481937`*^9, 
   3.788937027353233*^9}, {3.7889370601450863`*^9, 3.7889370671466856`*^9}, {
   3.78893709808165*^9, 3.788937121193348*^9}, {3.788937202971445*^9, 
   3.7889372460216107`*^9}, {3.7889372869542327`*^9, 
   3.7889373263589773`*^9}, {3.7889373603865023`*^9, 
   3.7889373616249228`*^9}, {3.788937392786481*^9, 3.788937421931422*^9}, {
   3.7889374527206526`*^9, 3.7889374989000344`*^9}, {3.789055484832425*^9, 
   3.789055558387719*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"5a774e74-eccc-4a3b-9a9f-fc89cc3b29da"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "1", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "3.700390722988417592347675600853386042032849540081422956549222982412456529\
265267957177574672523465162185841970940695889477580746847042741384461671064117\
6622`140."}],
  SequenceForm[
  1, ") ", 3.\
700390722988417592347675600853386042032849540081422956549222982412456529265267\
9571775746725234651621858419709406958894775807468470427413844616710641176622`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.789055559004764*^9}},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"28e6d83e-6632-4f2d-96b5-b0dc79c9cc74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "2", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "3.864212527480239500021252081227729756644910143705252046608521121422454073\
161779029936826476668234264091359406637391883562309510110275705963646798702133\
9998`140."}],
  SequenceForm[
  2, ") ", 3.\
864212527480239500021252081227729756644910143705252046608521121422454073161779\
0299368264766682342640913594066373918835623095101102757059636467987021339998`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.789055559004764*^9}},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"ebdf30eb-ac09-4bcc-9643-9a90168925b1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "3", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "4.360167327338847761790045887393224622152405695493098017108833938673601746\
209553098632614621666178424395258166949723755888657269823407974582210904492761\
297`140."}],
  SequenceForm[
  3, ") ", 4.\
360167327338847761790045887393224622152405695493098017108833938673601746209553\
098632614621666178424395258166949723755888657269823407974582210904492761297`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.7890555590359964`*^9}},
 
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"05dc18f7-8968-4db0-90ae-8901af619b46"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "4", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "4.688369967633294590605283895415308935686344611769950579203337033335442304\
802427589439792776972370393900517284238576908611552182113156577957993885272383\
5374`140."}],
  SequenceForm[
  4, ") ", 4.\
688369967633294590605283895415308935686344611769950579203337033335442304802427\
5894397927769723703939005172842385769086115521821131565779579938852723835374`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.7890555590738587`*^9}},
 
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"6096775e-5fbd-4774-8276-8cb13115c346"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "5", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "5.022557762484828024817570485879263381415046045946032223347161600974325904\
556413367067431499221122891961279182760012424357084823102506000894002031758462\
6205`140."}],
  SequenceForm[
  5, ") ", 5.\
022557762484828024817570485879263381415046045946032223347161600974325904556413\
3670674314992211228919612791827600124243570848231025060008940020317584626205`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.7890555591051245`*^9}},
 
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"cdcf00fe-a79b-42e1-8e3f-24af0fcb8190"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "6", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "5.288157488251703965844084105669702756962039037417096371048879825929494039\
360777383684353405770456843775607206504321788607656644902101708240416738950216\
3416`140."}],
  SequenceForm[
  6, ") ", 5.\
288157488251703965844084105669702756962039037417096371048879825929494039360777\
3836843534057704568437756072065043217886076566449021017082404167389502163416`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.78905555912072*^9}},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"f2b6d6d8-6717-4b7f-8be3-a7107ca21023"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "7", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "5.676460878828054445631740714431321582316791535875263992154054269412801216\
650811689194046862907763479877017200370128960899144623643679440888096493266998\
3177`140."}],
  SequenceForm[
  7, ") ", 5.\
676460878828054445631740714431321582316791535875263992154054269412801216650811\
6891940468629077634798770172003701289608991446236436794408880964932669983177`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.789055559160711*^9}},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"77206b81-1df8-4465-b3e6-cb064cbcef44"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "8", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "5.792653949370362486794020335515909176172788157606518775262445983579190820\
706877561191417026319159028810892106847340017437997978107054272129192479528450\
9067`140."}],
  SequenceForm[
  8, ") ", 5.\
792653949370362486794020335515909176172788157606518775262445983579190820706877\
5611914170263191590288108921068473400174379979781070542721291924795284509067`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.789055559160711*^9}},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"97280e08-f2f2-4c02-b495-5b060795f8ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "9", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "7.192494024861236467129656285222086357391491824591603750563551577035825589\
736910598882131973346669778843595928193089968933779037299657243082296113713645\
0452`140."}],
  SequenceForm[
  9, ") ", 7.\
192494024861236467129656285222086357391491824591603750563551577035825589736910\
5988821319733466697788435959281930899689337790372996572430822961137136450452`\
140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.7890555593654947`*^9}},
 
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"0025f88f-3acb-4aff-8310-e9fc555d87e1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "10", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   "7.209401756890078262330002575357501925524399393829594798127267313572738075\
013106705359379601882579694546058270748375799307464909560230181470915078564534\
8977`140."}],
  SequenceForm[
  10, ") ", 
   7.2094017568900782623300025753575019255243993938295947981272673135727380750\
131067053593796018825796945460582707483757993074649095602301814709150785645348\
977`140.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.78893732876869*^9, 3.788937363020587*^9, {3.7889373980679483`*^9, 
   3.7889374992749405`*^9}, {3.7890555023004847`*^9, 3.7890555593654947`*^9}},
 
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"754e71c8-f5d0-4d64-9d0c-b7b00243d3c2"]
}, Open  ]],

Cell["Question 4", "Subchapter",
 CellChangeTimes->{{3.72494407382446*^9, 3.7249440963039*^9}, 
   3.724944194386578*^9, {3.7888051100862026`*^9, 3.7888051297477255`*^9}, 
   3.788937051070798*^9},ExpressionUUID->"8977bb4a-fc2d-40f9-803d-\
df85a9efe9ba"],

Cell[TextData[{
 "We start by generating two symmetric ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8", "x8"}], TraditionalForm]],ExpressionUUID->
  "aed963cf-7b7e-4a33-809b-1e32cbe3034d"],
 " matrices with entries in (-1,1). Also define the one parameter family of \
matrices ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "960d8ca6-827a-4e73-8755-6ab1a3408344"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7889565757131214`*^9, 
  3.7889566588336945`*^9}},ExpressionUUID->"4fde6627-b1b6-459b-bc95-\
1d87710cb215"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"A", ",", "B", ",", "t", ",", "M", ",", "EigenVs"}], "]"}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmat", ":=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Minus]", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", "=", "rmat"}], ";", " ", 
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "+", 
      RowBox[{"Transpose", "[", "A", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "rmat"}], ";", " ", 
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"B", "+", 
      RowBox[{"Transpose", "[", "B", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"t", " ", "A"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], "B"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.788944082863572*^9, 3.7889441609176855`*^9}, {
  3.7889564747401705`*^9, 3.7889564808657045`*^9}, {3.7889565321248775`*^9, 
  3.788956558770714*^9}, {3.7889566617704606`*^9, 3.7889566963172293`*^9}, {
  3.789059609624157*^9, 3.7890596106440673`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"c11b82a7-ada5-41a9-b211-027fc7650ce9"],

Cell[TextData[{
 "Let us now plot the eigenvalues of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "79913ce5-6f0b-42f3-8086-25bd5b89428c"],
 ":"
}], "Text",
 CellChangeTimes->{{3.788957335650855*^9, 3.788957344338216*^9}, {
  3.788957404448734*^9, 
  3.7889574137917166`*^9}},ExpressionUUID->"bb6e8789-0dac-43be-8c4a-\
b72070d9f43f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigenVs", ":=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"M", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"EigenVs", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.789059286919593*^9, 3.789059306647403*^9}, {
  3.7890594716317635`*^9, 3.7890595216148067`*^9}, {3.789059558647811*^9, 
  3.7890595614562087`*^9}, {3.789059625735287*^9, 3.7890596358332024`*^9}, {
  3.789059728781457*^9, 3.7890597381276827`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"e46c75fd-cbb3-418d-83b7-5162f278ea03"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/2+BCFtINtFm4L8Y4wde
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
oTarfW0mlYP9D3gGP5Y=
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$23805#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Xk0Vd/7B/CUIkVSikJEKJGhScm7aEIpQyWE6kOlFBKaVEIpodCcsaTM
SSGczDOZp8udce/FRShjv/Nd6/fXXa919t3n2Xs/+9nnrKNw5oq549w5c+bU
CsyZ879fDazg/vvHJ/bEUKPUrs7gyoTiw4lJPqEi0j3k5TqDtAwt5d9jfMJ0
rf6uYpcZaKsePtPD4xO6igrltudnsG2pX0d1K5+oKj4T/+TUDHYzhytfpfKJ
uUMn/AYPzMD8QU2ijj2fULumXpgkMwOvOj+Xc/mDxPUJTZXVpdNoalrELTg9
QJjcDVmtLDIN2Z9Xlm+T6Sfmy2axzK2nkHmxeP6SLi7xyrjYOi55Eg5BWkPt
vhzCvnFp+/jwBP4+u/mQQB+x5avYzZsGE4gT65Z+Se8h6JfTn43c/4u3xlru
jYFsQlRS7tiD8j/wvXTae70Ri0gOL/rkKP0HN+d99nIfYBBti1mK6jbjOH23
TqklgU6oLeQrW34aQ0Qe++VbZxqR8r5iU8nkKHKoqouT1nYTCmpzr+nsGoWi
+G4Dy8hOgvHn/p+dQb/xZcNDZwazjThyUW+fa/UIqCXp8lu3thCiRnVFJ8RH
wN4YoU18ayQcXTY8NDo9jKU+n7ZqCNQTt59OvZR6P4SNW/kbP/yuJtqc8GK8
j4/7ewd+ZXuXEUeSll33vTIIScuU0JMrCwn5eC9PT4EBfBkvWVKulEO84dta
Jabz8KGT/YTjl0K8WmrTYWjKxSkzma+dZ8OJ4eW87jxRDrJFbjYXXguDrECB
wxlGL7YwBOTuWaXCbM2C2K+ZPdDIOTGs+SkVP7p3yoWm90D5WXIxbSIVBfZv
klySe7AoJmlL9OE0hL+ev2TThx5MH7Wi/BtMw8d1K09UhfegKy11PaH1Bf/0
5t128ehBlKtd8a7vXxE1P6DHc0sP3touTImgfoWPcWH3W60evDz49cWAUCbk
l3VcL1HvQai8yMV3Vpmw8vJMkVPuwd1fmUtnJjJh+kshZXhFD05ritrn6n1H
lyBFdc0EG4pDPyZ2FGZj1aGwLSUEG7dqDP1GB7JxXO+EvEAuGy2fq8RSpHNQ
EN0rtyeLjUeOnYoKbjkwnjW5V5PGxlDH5GEh+R/IHy8Qlo5lI79EN7bxdi5C
XIVX+PuzIRVXsPHJp1wIdEZeF/Jlw/2u0ff9zbmImDRIDPZhY93Ok9XZG/PQ
RHFMTvRiIyjNezyqMw+fQr8kKDizYf3mu/ElXQLFtGVzRI6y8dUbzescCWx2
0+qgHmJD7HiZPTWUQODqa5d+GLFRIN7qYd5HYDDDaeq+IRvLDW8eeWvyEyZm
J9/ZbmPjZtbr676TP9EQJui/U54N1Y/d+vbiBej/YyN5TZaNpoi1gnrKBRD4
vfdu5io2NK5+Dh4zK4CZiddWE0k2GOo5cec/FSCfl+BYLcKGUVx7jalVIUYL
V4Vs/8PCkH+KU4lLITRjvjmNjrLw8vz9fzvvFyLck1DJGmGhT11da31KIbhr
XPJPDLLwMOtu+DzBIpxVrEydYLOg+eaY+g3pImio7Df8w2Sh7faG0iGNIjx6
M3B1hs6CqmHTn66TRZB3sxJW6mahvEbFJiu1CFenFO9RWlhwTZv+rVFShCtF
vLsKzSxIhdUHfegoQu6drOYrjSyct7qZ/2x+McIj53So/mJBmFmr4GJTDBvx
xgqxShbSSuJymK7FKKy8PRhdzoJVgreFdUAxrF+9lNlVxkKCy1r/A+nFkOLr
9ocVs3Dg77U+BaESfPn2JSmPYGGww/jeS5kS8D4lu8Xms/A8b82qJdolWPhj
tudpHgs9vhUm07YliN9+d9PTHywEO0ay3N1LsOCIsGpMDgtbD169zXlQAp2k
h6tzs1kIEJVNbflSgg2a5duXZbGgMTR84HB5CQKd2u8f+c5CS0MprairBON1
1xe/+MaCT+ab6zt+l8C7t5POyWRB+aWrRLpwKUQiQyUOkq69sS9RRa4Uj0fv
JqV/ZcHz1Kq9kTqlUEztzVUmLbebT1luVIpDyiZHP2awULq2+Npju1J82+Hl
rkP68vxXYnM9SuHj6qVR9YWFFX0uH70DS/Fp69Pgy6TzKw128yNLEW+v/1aW
tFPyynbHr6WwrVNxaEtnQSy0341SQbY/K8+IJP3NvUDEgkr2v1p+vRtpu2PP
4ypGS3HUFzuPkF6w/aLebpEyjNtnyOqSTlm1u/nbmjKoZ5U3aZA+PrP8svqW
MlitoJ/VJD1L5Sx4b1yGY+pXanaRji/Mj1rlUIZzNb8lTpA2/RC2/em1MrzW
mdp8i/T4g/P1Qo/LIJa5SieZdKTzLmef6DKMlg8u4pLed1hi3lhmGdZflc7T
JscTfHrh8ERFGfLm+G++R7rt2hzqbFcZhEsjfreTVnj0p3reSBmsfcXG9cj5
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
a6+T797h4v+/Z2K/y9m5S325+D/PhB8p
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
NPT//18Dy74Op95j/x+pg9CN
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
kJNHgf8DbzBnHQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwtV3k01O/3J2UrKYUWS9kqSWihhYs2KUKSkgqtWpSsiaJosS8JLchaRPko
ES5m5j1jNzOyL4mY98iMKKTiO79zfn885zmvc5/n3ufe1+vce57Vzm42Z+cI
CQkNCtb/7dogx52d5WPL5Y/XvUdz0e236oPf03xcN0daqqI1F9/+p6sx/ouP
IQ+dtopiLuqttXAeHObj84ybOqHhuai/+F5HXSsfi3H8rbdmLhr3/6hJzOej
j9xSuw6XHLS5X5+z6RQfO/afxsrmV+jdeO/K+XIeapUJd/zMy8Tm5vncSqcR
DD8XKy/nloyKFW5L9RW+46qV+xYwpWLw/SXqPOluLq4UtlfwMnXH02G6o+1B
JMYFNwYmiwbDVIzfAwQObrtBXe8gnghpC3uWJ/QN4qyNov/NjHR4Zq7rzn74
DZsyPsv1k7kQdNnJZ93+ASQWP1+54kYB+Im89nYf+YqXwx4/fj76AZzuNKq1
ZPfhfPfgpE0HPsHjsm8Jz1y/YMK/7fEPixFKetcuyFXpQfusvUNrHKtAdZGx
qe2LTgxprzFuqKVCgeYD16/9bag4PtwrEUaHXtq7VVu3tqCt4n19sVM18E3r
sR5+YOMukRgHS+V6WBzwaqu2MBPZbzy29Cs1gdZWvlbGeB2qqpk1RaQz4Zz2
7dvF3XV4icUTs8hhQrKGNKueXoeFxmqBCwqYICO/0XviaR2G3R4xiEQmTE5e
rdy3uw73R1dXpXUwoaqYd4QbV4s3ZkzPSixmgb0hL2Dj1hr8IyQkwghgQcyW
AOauVTVo8+VmWV4wC2o3LFSzl6zBtU8elseHscBISbv6Tk81mpnw4lyTWKA6
e2UJK6Qa3XbHxq/+wAJexUiWRysDVbaskKwfYcGaYv/pB5UMXHPEx5DxkwWn
30lZPM9hoIfstWLqHxawUzeM0W4zUGImJbRSgg0fg67slF8rOG+r8qxGnQ1j
N/9FrJdhYN5cV/kmLTasvxHeB3/puHODZlfLJja8cHkTcqGJjkSBnynHhA2t
Dobtt0roKMSDgTEzNiyyrV8fnU5HtRNfG2cOscH8oGNARgQdM0/7zVtwlA13
d480FfvQ0XhMJXjFSTZUmX0/tNmFjisyozazndgoZDHckGdBxzzzTRsmHdho
ZM21WGdAx+/NZYor7dh46whZl6ZCR9nBo6JgxcaSY5wDSlJ0/HRp3ZCzORt/
Ow7VJEwSGJh8vCJkNxu9zn1jhNcRmOQbcKLBgI2FrgP7xIsI3CRLUR7TY+PY
1X4iKJXAMPP5XbIb2Ojm3Uf19iIwlGFh7LiajRcedFc4rSLQ0wZKhyXYmBnW
BV2SBP5rNz0oPZeNA1Gd5Xa/aMhITmnRm2GhU2J76YEaGhrpK3T6jrHw+OvP
H7d40HCscyZLrJOFB+vq30owqBjq3OurksvCR011G+8VUNHN8g91TyYLGc21
eTPPqNjdc0LqYgoL93RX545fp+LixKL4/DgWGvFo2d0rqUi+t4je6c9CnUXl
Ke/cKFg8bXDYzpKFsrZ5UcfkqxDbNe8/GmVigUZoyR6RKqz9PhUtM8xEq9/n
B3T5lbjW9lxK0jcmPnqx2kCSXol9Z4cYrzuYOMOJ6y3xqsT+NinLWioTB/39
tBVaKtB8vaWdVCITrx6KTihbh3hNJ7sj3kTgf4ImzVArwRP3PQvqYpowo/Nb
OHkvD/9wzX780W1AR2uFwk6XOAxZ+X5A2asWiyX9Pld5xoKpnO0nYDJwy1dh
pUD7fDjR+GrUVoRA1dFPv7dXFcOEoedD3VsU3J/WXm9pXwUJP9PcNb9W4B4L
GZFf7+kw+fq9v594GUaear2jU1QHdJ0t5+vFi5FuqShlJcOELyVpD6M2v8eR
1bIBrCQ22NsV2s1ZUoCeHuudIuVaIBJGCpLv52Fr1yKbc4w28KX/fGNtn43m
oWfbPFhtMFl3JY0H2Vi6reTk3S6BPfakvf+abEyJd7mUMtoGMrvmbnebyMIL
Vh/udSxrB2t5K8/k2CycpjgUWV4UYI9bi8RqM1EhJ1NBX7ID0LUsIFMrA0/7
7hwSO9gJWYbJ3RHvUlHzDOMzz64T7jxdyCmNTsVxS1vqZ6dO8Otf8qH+eiqG
qF1OTfPuhO9s4T/xuqmY2/jUAdI6YZ8b2UHJT8Hf6n8avaY7QXoXvbnuYDLG
sIo/fsvugvwzRjfZk0lIWa//iDKvB04407Uig6Px5EbbtB/SPXA/dGRO7/Zo
nNK7Xqq8ogcii/f6jfGjUGt7Ds9PuwdO2fw0O3MsCuPMlA9vPtoDFxu4YYM2
EXjurJhCRnYPCAV4bAi69RDFk1vfhBzohXnRC3gXhwNQQ6KUk272BZY4R1ip
d50HxdJLe+Y96IOFG2Dp7jNJIDQ955X7168QeFX2i5RlDkxal52kqQ+A2b+9
21VfFULn5lMr1e99AzeaSXiaZylcO7posUrXICjG2JWEiVSBc/bGJPW+QWiT
cTl1YHEVHPltqbpucBBSqT7u85SrYPvT8C06o4NwXI3pfml7FczrlTxuNHcI
fszEZ/y5VgVJ5+alHdcaAo0+uZhF3VVA9ZzeHHtrCHQkGPzJfAp8IJaXxwcO
wVmNQu/uUgq8kt+2LylkCFqZ9xcXV1Mgotj7WGrUEATOWl+37qfAsX8//fPT
h0CFEag5K0sF3j0+UVs3BJnxE9oSvlRYHjdgP1eRA4/POLov3UQDg7vKch4q
HMh6NlfklxEN7NyPs/vXcOBowYo7xeY0iLFqsqDoceCCyVAy14kGC6RKTYPM
OGBkHHSIFUEDzb8Tsz8sOEDXzrYuSqSB2bBumdNhDsjbnNDwSadBcHWWvslJ
Dlwxcoh6UEyDmeBYLSEPDjjpUPZV9tFAwbOBdPPlgOlsi5DzMA12nJHI6g3g
gEus7KrmnzTwMb29Gh9yYHjm1AsNMQLidUt6tCMF9+dEDYssIqBw1a+nL+I4
YND7yC93GSGoq6tcQDIHphoK2+zXEbCIl8EeSedA19yz5sd0CdDu/hLl+JoD
HjE0M6VtBLh+sptv+J4D/tYfe3j7CHjwOpqRW8KBkGdxvROWBGQl1gUrVHAg
Od3KpPQIAQPepkJ/azhg+aKH6u1MwJzz/mWXmgTvjUvRdr1AwCq7jzc7P3Ng
ac/jUJmrBBjtGdc/0MmBUpmUmas3CHDcrP2r5AsHXIPpuf4+BNxSvVigOcgB
JV5z+U5/ApJk0t2Shjmwcsdcl9eBBHwU7tWS/CGw5zY0UIMJaBldzvWd4IB4
Y7Xxo4cE/Oy1zSL/cODg5YQ5v8MIWNIYeeaYMAmZ/aSrdBQBeuU1q6tFSUjn
3e2tjSHA6s28XoMFJETssGnVekzA1WfGz7IXk+Db5tWl84SAsFC/Y8vkSSD/
HoloSSDg9c0Pcg8USDh14UmaQhIB1Rd/sCdXk7DzkPx34acEcOy1os+vIeHn
6wqbYAEWNTtv2apFwl80780QYDX9l/P36ZEwVcMuchZgU41uxgd9EtzEDqt8
Evg7LbssRMOQhIOvuoLzEgm4PffwrnhTEny4BZd2CuK/GA8XEjUj4eWk8p0z
8QSUfmWUeVqQ8MRCNlYjjoAOpojfNxsSrCbDE4KiCZiqMDI4Yk/Ch4UF2T4R
BMi99f1FdRTk21MyKx5KwJbkwoLNLiREiiX823SfANsIvlv6BRI2iR9Vnw4i
wN1fc8PSqyR0BBxSOBFAQJ5DSta4DwkrdXYVTAj429yqOi0aIIgn2m4fL+D3
k03WwRV3SWgeTh/tE/DP2J/3wzichO21pWKBJwg4RNPdbRtDgri4SUWLQD8t
xu/jzz8h4UB5cnuXQF/9+qU7IlJJkFzLsJkFgR7/g4jUTBLy3tifVTIgYFSb
8qUwh4TpKocd4xsJmFGvCe58T0JZ5TxxqhIBy5a2Na6tIaHV9MYVrd80eBHp
oLKzkQTR0ImnqnwaqM/v9TjUTIJjVFpZ1wAN9OYMLvfqIeGf9uelTxtpYDE6
7kIZI+GK/231Gy9pEFQnPeW4kgtDMj+udQj6gbhZrPn1VVyw9gzzTtOlQSRF
7vk9dS7oxSYa7lGjwbMSRdOcjVx4zlGul5egQVH2+rCpXVwQFUtPXcakwvd7
+1bFXubCkV807mUHKhw1vG3GKONC4XGR2YWnKND1a1C6qooLTyVuzIgdooBz
nmXrJzoXmv2lTcaNKHBZWelcPpMLJ2+qbXypRIEg4bK78d+4EP0wyvqyoF/m
0abLz0gNQ9tWFZl/grk819Jri7DjMLRW+LmN7K+EdyevqGz/Owzn3X8nHdhW
DlOSu0SKj4xASB6j/mhkIdgwd2xVTODBhQUGZxdPZILkjvmVpc95cPLf9yHx
jEyoTO84cEIweUendSjCtpmg4+Pr9DSPBxuOMfMn32XAQuWisOU0HvS4iCX8
upIO1Zf1+mXHeBCnrHt812AqGIuvi1p4kA8f+zbu5r5NhKnrUyvyrPngZ/iW
OC6dCPmd9AyLo3zYvxcbmq4kgFL+uU9hznzoXktpqNd8An+PpA9K+vLh8H+q
GxdmxEFRmrKhWCYfHpiIFvltiYSrUnx6Zg4f3urd2aE2Hg4a3uU2e9/xYb0r
/0vH2zCIM3e8EFzKh7RFTxxvaD0C9x9JsSJsPjh7e7XaqQWDpoOrUlobHwKF
ZlZ4fb0LfdRtr0x7+FD46rh6RkoQWCW0lQeSfChY8/L8JsU7ID4ne/9qPh/u
tbQv1yjyB7zk3Vzxkw/XB55niW72A6/Pe0+dnuZD8+ucIfF3PvD//0n4+469
f4O2F/wPRoSQzw==
       "]]},
     Annotation[#, "Charting`Private`Tag$23805#8"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{710., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-4.887496265912909, 4.150911250106762}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.789059296095949*^9, 3.7890593089113674`*^9}, {
   3.789059505859757*^9, 3.7890595287599716`*^9}, 3.7890595672360487`*^9, 
   3.789059639778467*^9, {3.789059734924157*^9, 3.789059739493161*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"69662087-b2c1-4ef8-85e7-643165e6baa5"]
}, Open  ]],

Cell["\<\
The plot seems rather messy, so let us Sort the eigenvalues before plotting \
them:\
\>", "Text",
 CellChangeTimes->{{3.78905931870516*^9, 
  3.7890593344964066`*^9}},ExpressionUUID->"d25819b1-331c-425d-b9c3-\
73981e3b9de4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigenVs", ":=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"M", "[", "x", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"EigenVs", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7889567337464085`*^9, 3.7889567571939907`*^9}, {
   3.7889568089958477`*^9, 3.788956827803643*^9}, {3.788956874541854*^9, 
   3.7889568787940063`*^9}, {3.7889570743636436`*^9, 3.788957078635944*^9}, {
   3.7889574860246334`*^9, 3.7889575243676453`*^9}, {3.7890596600936856`*^9, 
   3.7890596618145585`*^9}, {3.7890597780477543`*^9, 3.7890598122919264`*^9}, 
   3.7890598656868043`*^9},ExpressionUUID->"fce2d563-ee6f-486b-83b1-\
3b63d2006420"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt13s0VOsbB3DX3C+hziFSRCWFEiE95VRUKJLci1OEUEJFiCQVKnRPCqUi
dJNr77gLpY5LLiHMzJ4Zl7H3jOsRv/es9ftj1qzPWnu9s/c77/N9nr3SK8j+
uJCAgMAM/vz3vQGWchYWuEg5b/M/TYmKtKAZzYSZWS4SnLUmx64p0grfGWjz
JrjIrS1aSeGqIm3jGhsv5jAXeeua+zhdVqQZL47rbv7BRVNhJtsYkYq07UNk
4/0CLjoQZv9uIVCRZn/lS+6mI1yUQnCrjO0UaWdb4gJ8Po2hYynNtPdLFGlt
bVKcSs9R1FyZlsJOU6Cp0YKUjFVHUMA+X5UZVQXaB/8aUbleDpJbsX1dUc5i
2tFEg/GuWDb64r/DgrVmMW06JSIBAQspxU84T7+Vp2XJ9infG2Cikx+m3bM3
ydMe7TUIbr3KQB+7faScAuVosSc9z63dQ0fG/seT9a7I0iKEX50NHh1EsV5N
g5+TZGieF1tWdbwYQDJ5xxR3Ppem3a5g3Hvk9wtNpgeWZ9dI0Ur710jnafSh
NCOGZcx3SZqm/HYLh8c96FRSf6jbuATtrU6C3+BQJxL9drrBe16c1l/7ZoWR
UQf60+kvcWNFcRpD9/ZGVNSKejjG/ZtNxWiLo14abRD8jr6EN+e+tltE0zXi
6j7jNSPXd+3oboQo7dLO0W8l5+rRoyvJsoZ3RWhLHPJvOv9RhVxDPkUJlwnT
3k7WyjWsKkUZN8SqH5JCtGc9jCR2XD4qCjP9tVRViOZup/q+5+805LRMlYuc
BWklkhHtVaGpEPfqoZXXEwHa5kHB5TFOBZB9xzhtfdkC0hwvmzGtKoEGZx/R
ILd5tCer64utUxWkhldUunPn0C4bBeGJD/VwQPpth+X9f9GNIz8u6n9shlyp
BNFc31lUb6smc0DhOzR/WSW0duMMGl25JOqfB61w/FTM+roV0yg0ZJ3njaUd
4F/pnl6sNYV+/JS3927ohMyAoP2zaybR0fNbCTHrHngU+0Bl/4EJVL3O+Fq1
aB98Eg49phfBR9oS5axsq1/Q1jfplfGZh9TK/XeJJgyAddsHfp8+Dykpz84G
Jg1A6ae0kXMbeEg6LKGwM2UANqRVJSvp8tCc3rNleekDcOrEjrYDq3moO6uP
tH83ACGr/c70qvHQnet2j5/0DcCL7MMxllI8JOtqPGW2eRDqCCeeF0EhgVmh
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
//dvKE1vkXlE56P/AZTCo3Q=
       "]]},
     Annotation[#, "Charting`Private`Tag$24489#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3hM0vCicXPrCU4j//16FiO5JDdG9QvwfvR70lQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$24489#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$24489#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtVnk01ev3NmRoQpImQ2WoKwkpRfVI3dIkpJKSayhF5SZj4kZIJXMSlWRO
USIZXznOh0rkkrljds7niMM1a/A9v7V+f7xrr2fttfd+3/08a+93ta2z2Vkh
AQGBt/zzf1YDstzZWR4Z0L/2Iz2MTZynlYKnZ3jE8bNRtPg9Nnn1Rkt1dJxH
No1mqp+/wyba6w7b9g/wyPCb9afXBrKJ7qKA1uomHlk8+l9eyjU2MegZ+fgw
m0dq3rw8+uwsm5jd+py5yZpHJu8raMbrs4lHbcAlh9IhcujZ5g132f2koWE+
973NIFH66mi1XaufyJc5y+jKfSezl6Xch4P6SJ5ThYjkNy55pKNS09vRS/4K
0Rpu8adJMLtIPkytl0xFegcTcIhYSn72er8ekiTBWh7b1U/kOFrL7D90k0cH
tFzqb/eR9Z1O/rky3cT/oo3nH/t7iWp498Eepy7iLfzcw2Wwm9SMPf7tldtJ
bG7UKjemd5HBh4GXWeKd5H5JX+wjx04StNDEzrWMRQo71i14sYZFMtbuGvYw
/UaUpAwMzZ+0kfdczbTJ6TaSoxbs2N3TTILes5dbBrSSDubrVVu2NBK203Xv
TTItpE/9vjZ5W09UiLNEfFETWeSbsUVDsI6UbVd5dXNPI1HfwlNPGa0mQS1T
Bnv6GsjNPYNfCjwriXFE1qZsh3qyxDwr/OTSckJa1G7dGa4jORNMySrlQnL6
lltOdeQXktLWd48OyCI/uEYjP7RqiJWpXG6bXTQJWpnXq+j+iRTM8/5a7hYF
Q1nzItRVkc3dggp+Ftk4XZsxbC5MEaXhomm98gJM7HC7rXWdQfYntXw2tihH
7FiSi1p3GfnzsLTweF4lJp/n+XiLl5Aw66YbmvnVqNTc7PBZvIBUGssvNJGu
Q2dh0u1wnTwyuHqJ779x9bA4nntcaHEOcXNdbxMm24gwDOYk3MoiTe1SZueq
muFVOfbS1CKdHLh7ttn132ZMVl9KGkI6Kd5WeOZmO98fdcbCZ206eRpj5/R0
uBnSu+foOU+kkfMmbwNal7XAdKmJW0JUGplhnMo3vsDHrtelxD6lErnMVDnd
ea0gjiW+qeop5C+v7WyxQ21I25HwLfR1IlGzr/o6dLwNN+IlOMURiWTU2Lzi
q00bvHsWv/18JZEEKV9MTPJow/d6wR8xWonkRW38KSS1YZ8z3crIfkqmVX7U
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

       "]]},
     Annotation[#, "Charting`Private`Tag$24489#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$24489#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlmnk0le/XxilJCiUqY0RShCaZ6mouiiRlTKlQoqSQCkWmBgmpFJISmTMk
4WQeor7CMRPOOTznGDOE0Hv/1vsP67Oe57nHva997bWO7NkrRjbzuLi4tpM/
//uvghXsf/+GaLtjOqOVrs3iypRcwNT0EG0df8ewm9Ms0jI2KYyOD9EM1uzc
UeI4i82K+mdZnCGappxsheWFWWxfdq+lunGI9q3kbNyjU7PY1TNS9SJ1iDZv
2OTe4MFZGPnXJG45PURTctlYlCQ5C7cf9xztCgZp7lNq6yTKZlBfv5hdaD1A
O3znsYQC/wykvl4R2S7ZT1sglcMwMv+LrEslC4Ta2bQXeiXmscnTOPNw03Cz
N0U7XbeseWJkCpMhtwJo6KNtyxS8dWvPFGIFO8Sed7FoXZfTQ377TOKV3ibn
ukAmTUBU+oR/xR94O1jfWK/LoCWHFSfYiP3Brfkf3JwHumlNSxhyGy0mYH3n
hzw9voumtGhIwThhHE/zmc9f2f+ipbytVC2dHkNup+KSpDUdNFmleS5bdoxB
bumuPcZRrbTuPz5/tB+O4uOGAPvuniba0Us6+52qf6OzNF1GXZ1OE9D9UWyy
9DeYyk8307LraDaOGwJ0rUewzDNBXYW7lubx5O/zVW+Hoaw+pPxutJrWZItn
E31D8Nk38N/nG+W0o0nL3b2vDELUOCXYbGURTSbOzdWVewAfJ0qFKuRzaS+H
LE0T0zl418p8RN1Lob1YZtGy14CNU8ckM1vPhdFGRDgd+QIUPvPfaihyCYUU
d+GZs9292NbNLX3XNBXHVvO+ycxiQSXXZEQtIRVfOrSlg9NZUAhJLvk1lYrC
0y+THJNZWByTtO21fhrCIhYIqb5jYcbQtO3fYBrer11p8i2Mhfa01PW0TR/x
T2e+h+N1FqKdrEp2fMpE9AI/lus2Fl5ZLkp52pkJT72ijlebWHh+KPPZwMIs
yCxvcS/dyEKwDP+lSNMsmLq5pkgrsHDnv6xls1NZMPhPNmVkBQvWagKn83Q+
oZ2nTXH1FBNyw1+mtIo+Q/xI6LZSGhO3a/beGxv4jJM6JjLceUzQP3wTTBHL
ReHrXundOUzct2mVk72aC725w3dr0pgYbpnWXyjzBQUThXxib5goKNV8U+eR
h8dOfCt8fZlYFVuo/CghD9ytUe4LvZlwvqP76UBDHp5O70kM8mRirbZZ9Wfl
fNS32SQnujHxMO3GRHRrPhKCP8bL2jNh/vKTnoMmDSW/lnPxGzKReQMNa21o
2Hp1U0vnESYET5af7gymIVDCxeGLLhOFSxuvG/XRMJhh+9dnLxMie28dfXX4
Kw4fM4u03M7ErZwId+/pr/gZyuOrLcOE4vuOnaeXFqL/j4WoixQT9U/X8Ogo
FIJ7dN+dLHEmVK59CBo/Vohjh93UD4sy0b0xN/ZCQiEKOPE21fxM6MY21xiY
FmGsSPyxxh8Ghn1TbEsdi6AWk207NsbA8ws+/7R9ihDmSluX85uBvo0bN61P
KQJ7tWOBySADATl3wubzFOOcXFXqFJMBtZcnNt4UK4bKugN7//Qw0OSxoWxY
pRj3Xw5cm+1iQHFv/Z92s2LIXDXlk+9goKJmnUVOajGu/ZW720ZnwCltZlSl
tBhXijl3ZBsYWBVa+/BdSzHyvHIartQxcMH0VkHIghKERXG1KP7HAF/Pd1lH
ixJYLK2rFKxiIK00NrfHqQRFVR6DrysYMI2/cdzcrwTmL55L7ihnIN5xje/B
9BKsGtLsDy1h4OCkS5/swlJ8zP6YlE9jYLBF7+5zyVJwEpKvvilgIDx/tbjQ
5lIs+jLHepLPAMu78vCMZSniNO6oPvnCQJBNFMPZuRS8R/kUY3IZUD90zYPy
L8WWpACJvM8M+AlIpdI/lmKDWoXG8hwGVIZHDupXlCLQttnn6CcG6D/LfhW3
l2Lih/uSZ9kMeGa9dNcaLcWN3tYuKosBhedOwul8ZeCPChY+RPj7zf2J66TL
8GDsTlJ6JgOup8T3RW0pg1xqb54CYeldQ20iumU4onDY8H0GA2VrSlweWJUh
W8vNeQvhywteCM67XgZPJzeVbx8ZWNHn+P5GYBkS1J8EXSZcULVn11BUGeJO
73wlRdg2eWWzTWYZLH+sO9OUzoBgcP/Vtkry/jmZ7ijC2c6F/Mc7yfgSMuuv
ErY6ER5bOVYGQ29oHyXMq3FJZxd/OSZOZ0hpEk4R39WQvbocG3Mq6lUIn5wV
ubxxWzlMV3SdUyM810nxvtUrx4mNV2p2EI4rKogWP1MOu5pRYRPCBu9CNZ64
lCNiy9+ttwlP+F+oXfigHIJZ4luSCUfZ77D3fF2OsYrBxWzC+/WF549nlWP9
NbH8zWQ/QdaLRqYqy5HP5bv1LuEmF67OufZy8JU9HW0mLHv/T/X83+Uw9xac
0CHnZR81mMvHWwHtgN/qHwhnfGTGC4hXIGXcN02WnPdMWVu4sEoFNqgaWMYS
DhqqcpY8WQHjpHblUnJfjfOLzsjaVyBJYG6XDblfmVWfDRQ8K9CnwWcrRO4/
Y9f7DWpxFRh1DP18l8THjHHUqm25FXi8O7FWl8TPgYtPebW+V0BCrrNGgsRX
0xOf7r0TFagxVdvZTuJPNu7mf4f4KzGvyyG8Oo+sN/dqgb50JcT28r8sJfE6
0306wuRAJc5YhdnXk/iW3apjdCm8EnJ6e3TPkfi3P7Rll9OHSvgccVaNKmUg
03KDiktBJXbqS2/rLiPz+67i92JVYrvURgPfSvI+fawwRL0KhzcV2237QdbP
5qQ+06tCeqDEXDbJx5m57shXVlWYl9rMu/snOY91te5xflVYvMlt2WWSzxk3
kjfl0qvwzWyB3fo28r64bUyX6zcoCWuICXHIfameesy6/w039yRhyQD5fq+x
ByfqGyIFH+5dOkTW77DHbLzsG67ua7mhPErWly+9bNHKahjLUIkf/zLw+HTj
HbVP1RBNX5XXIcCEX78OWNXVMLDcF+O0lAlP9zezL7ur4afVEs23nInLoY43
FwrWID1g0zm9VUwYlM+/3nG+BqHeS84skyP6rKpm91D4O3rlHycEazIRNBeg
3+f4AwtWZCjdvMhEuYGUgKFwLY4b6Zz8+p3otUrXCmfJWnTP7EjLrmXijMA7
mTCFWkgImKkk1TMx/U15a5NWLZy5uPaHtTChrKtjceZcLfRNZKJOspgI3muR
4JRZC6FFq/48mSX1Q+PF/icnfyLJe6mS4QYW4laeOppx5iciHxwIn0fq5eiE
jFmD/U9I6+h4pKuy8DAr3kHM6ycMrE+c4yH1lrY5JzTm/U8css9cfBssyG9s
7Eqf/Anvmk2aUcdZcFryklM3rw4hR1svC5xkIZ9jNT6+pA6L7O+8dTNl4eQH
Fp+WbB3GXRsTdU6xELBuQrVItw4DJWp2frYsDMiKev6MqEOAk9sU9w0WNG7F
XC18Wwe+C2Fl/DdZ8K7faJOWUofqfUPbBG6zsML/wJGgojrM2RSGzXmxsLPf
TVyPXYejIlqewf5k/P08gppjdfC+6xt4LpCFn1HB3IpzdWjj47ZTfcCC7bGE
vgXC9bhdFquSHsTC4+yW7ELNeowbcHjNn7LQImT3IW1vPZY6Z+cOh5P9XhyN
jNavh6cP7yWv5yzkSCzx9bCuR8LpoyfuvWTh150dxzUD63Gw4aPF+hgWNrRU
HlAMrcd9SvXf7TcsXN9yUmtlZD1W3h0sK49lgY91WXY8rR5/XRRM9sSxsOnw
66G0pnoIR6cFVHxg4fZb5Z7o7npMnzSy/JnIQtlsDj2ovx6RC8I9fiaxYJ5W
m+/A1YB/yceQlcLC20VW6Rb8DdgcuTvxWSoLg2fZb/VEGuCYV/n3Sho5P9H5
DxUVG6AZodXD/ZGF6suPvVZubsBq/18HvhBeUSFxjVenATkV0Yr2GSyckY23
Hd/fAAVXkyuCmSx8uLnVnHG0AZnGMvPiCY/VfdWvM2vAmK1hhTrxezs36u8u
OteAk36eCbmEA/yat6Y7NuD7Ar9HW7JZqOu0UXzt1oBCy/uWMYSlNX9LPL7b
AKHm6bn5n1i4EOIp5PmgAfST4acsCH/k8M93fNoAqdnL1u8Jz+x7NmER3YCa
2YHRXsIHouTYegkNaDRpnJPMIX7vT2q7ZgZ5P0Lf4QDhFkOdWsX8BrDeNSic
Jyz/oaJkZXkDVK6Yi7kSvjz/RA5vbQPCPqup3iacY9mVON7SgFP/iRv/7/m8
bMdoBqMB8zWOXP/f90eEpkPqBhvQZeJ4+3/jh1/w8yuabICGeLTZ/+b/VSh8
M30eHSZ3PaeYZH0bJKIdXy+ho1RVUS+WsMt1JevHK+hI7tbWMia8gn8o76Qs
HfNRaDFMziMn+uMqaWU6os7VFHoQNt/mep2pTkdvobHpDDnPmSrN/5J20+EY
I7LEgXDUmVml60foiC95VlVN7gMTX/21TeioYGl5SxP2lj2EKgc6lHP9I8LI
/cp/WvzyiRsdid83tOUQP1565MeEqTcd/+z6mmpIfPDdOJnS+4wOj7pLPypJ
PH0QEOdPfUPH5JRJehrx64dj221ck+nwtUqXDiDxF/T9vNSCYjqm63Rd+Ui8
qp1XdK+uocOWpWOYHs9C7RSnPrSJjitWi57qvWdBZO21h2sG6XiQq6tr8JaF
7Fz1PmqSrP/07rQckh8mhtN70+c34vq0xNXlJH8ibt39C7FGTFhcnH4RyYLO
sv0mC+UbwWtvWFRK8q09ji/ju0ojfnbO6+l6wYLMz8f2p/Y1IsQrWoND8jdO
Mar55pVG1C3OSdvziIVDBdbb9txsRMKRyYyR+yxQx9c+WeTbiOJs6R1PAlhQ
9ko69DyiEWuUGYve+JD4a8j9lFXaiHlHFTsWu7NgfMlzucd/hKl8812uLIxz
7bmyr7URm6/sKrO5RvRKuVKhbrgRQ+pzKT6OLBR4Nz4dlmjCzjXxdAFrkk+r
Xo58UmiCne5U3Teif9wpVvpem5pwm3HE6pY5C/uamTyCB5uw6e9/rqlET6tU
x64pOTcB2ko2l/ez0Ni21Mi2ogntCbwPrEg/o/fApun6zya4aQacD1jDQp5m
rpVPWxNqaE7y76VZeB1+7tLr4SaoFM3kFZN+54Jh9r2WVc2Y3P5i7W1eFqaL
LT4ZXGzG9tUGStwMJiQT4yS387dA6OVkj/RzUp/M/r7ZL9ICr70+WuKhTHDx
Ga43lm7Bz7n8cYEgJhjnp7Zd3dyCEM8Pwp0+TCRLHzmaaN6CNZ842kpXmNgZ
MnJ3dWIL8u/xtPjtI/XLXad34ZFW+IdSwftJfd5wvqJh8GQrulSXFIgSvz9q
YFzSYN0KO54l83qIn/eTd4iJdWtF2jL/066k/if9eGmB2FacGBMLeUT8jGvu
Oj2FlFZQfZ6ux4mfwrsMDYHPrThgK1sjnszAz5vfRFu/k/m+frRKf83A1Nq/
P1ynW3Ew6SkJYAaKlvoXnFrQhppdrQ5LvRl4+Fc4ed/SNqj47TogdJv4q9oN
94UV2mDxbk0OnBhgf8m+MaXWht93aBY37In/iNtj90u7DdcHH1+pPk/8w23z
fSnH2pBpH/ux3YyBpXaszU8t21DlaCqZYMxA8zFn2dt2bQixafuedJSBNzpz
Quec25B14/yzUT0GHNbdn9P1aEPqeZvpwAPE/wuvGFALIN8vPbfWcw8D/2Zi
WleGtsGOfTGqcyfpd3o3Vs1FtqHyoVRYgTYDIT8/5zDj2+AaOPNlgyYDlvn7
31dntGFBvuq3TdsZWBtf+zSjoA00A0ZZ+zbSn4ScuhdR2YaeM9PhWwjneFDO
d+vb8GD+nP5mwt4XXKwvdLbBfEuDbR3hw8e5DY+y24AKsV+LyXgiOx/tVB9v
g/Ojd3U1Ggx0KIptlOJqR14G7wp+sp745e8keBa3wzbndWD6Dgauzqnxc0Tb
UXTw1fzsXQxoUXmTtTLtCFQKquDfxwBP/aHeHKV2ZInw5r49SPqTgvqGaPV2
/LPQPnbzMAPPEs6U+O1uh0kt5eFDzm+D140YY5N29Py2CF9hysDYRZ5g7bPt
yBUqEg23ZCDfONhzjWM7VosHz26xZsBwQ7zFsHc7HN+1bC0g9+fa0Cj6MKUd
vZHPzn7zZKBYafv94gUdoI+KxUUkkP5D1Th2RKgDf1K0GspTGJjcfDVvtXgH
BB2ua82SeFPWShy8pdKBeuW4h16kvws7tPr4VpMOVFQWT7SS/tLWZqHku/gO
fGHdPP/jH+kvoxuT/Q53wt8mYe+kBRMKi/L63h76haYf00p9JH+l8i7tXxDQ
BVrK3XHJpl6IiE1PX37UhYwgHrnJzl4scQ1Iawrpgvbs+Uv03l7MqL6TSIrs
wtLPelKv/vSiJbZjxCijC3J8gfF6K/sQ/uBY1OuOLjg9+3BM0aQPghbb/2hv
64Zp4CG6Y1MfeHNKk95pdcPi9rmMR7/6MCtifFZoVzdW1gwdSenrQ/93p5pu
vW6oXNimMTLZh6o9H2IDz3Rj5HYSbopR8N8gZdj4oBtSkveHXc0pcE3PS3Du
7kaK09rPsS0UzvQ0j3r1dkMJQmsnuyh8rU7b+ai/GxufKXocoCjcibaqfz/R
jSVRgdd+/KHwb1/uvzb+HsxqZor5i7Ax9/jqyYNbevCsd2HNmiNsWLkfijHW
6AGzOuN9pxEbBWdX91vv6MH7i2/3B5mx4bmt5u7tgz1wvhY/k2/LxmyLYnK6
RQ+Wf6k7YXSHjZm1v+ZL3uvBsfuSyaGpbFgKfTJYH9iDi//GPZZksZE3+eiF
elAPKut+2VzMZeP2N23VY897MO3FevethI22TOGbVpE9MMp3XvWjkg2dKKrk
0psepNi4NH/8zsZfp2fmfkk9cFntmbyyiQ1z88vvQtN7cHaRMe+zNjZy9+4f
fp3dgy36O3RGf7Fxc8Wo75evZH5GoQ4oNlr+Vf5XUdqDVVpR7zcOsEl+vJag
V/Ug7NrQ5olhNqa/GKQP1/fgo4Zg5PJJMv67tTOzzT3oy/CJtftLxg+aObC4
swfLfmVJhM2x4W79oW0t1YMdPRPBLjwcNOndXbdlsAcnGTSLDQs50Nhq6rxr
lOzniMLWT4s4mOTl5bOY7YHWq+DnZoIcmA63GV2Yx8BBvz9RV5ZykNOcEemy
kIGVMx5xVsIcrCq+3+e9hAFd2Q3S60Q4uJFkvSV4GcnrFhX/SlEy31MNz8gV
DCjNfrp2YCWZz0uo8oMEA3fmXvhGreLg+QXW8hwZBk695Dj8FOPgz7F8q9K1
DAgsD2Z1i3Pg3ZzavlOJ6O6t5aI9EhwIWr+xzFEjfdvTT9FfJDmI6Atr3aTO
wPtEx0hHKQ4UnPzNE4nuxIRAZZrwxz/uzfK7GfjKpe5+VpqDHV4OplFEV3eK
m394T7iC93TjyiMMDK1uHK4ibBx07OSTYwyEDsKjhvAv0X0N/CZkvbRprzTC
lyLVje8RXTH1ql/nQnhCfn3dLNEVLpG815KEvZMkjNzsGNi34p1wPJlfcKtg
7bAD+f5n8OtVhF984TK0d2ZgvPmL3RWyfvm9o9973Mh4PIOeyWR/aVVM/VMe
DPi7s8fryP51jJqq6aQuZSnN1veQ8ylvrjpsSOrWMdFYyQ5yfh19qbp7Qxl4
+0eR9nQFB/ZObyrynjOQHCj325ic//ifsIPqUQxI6lbsmEfuZ8nCm/vXE13z
H66+tmEZOf8gh5I3RNd0+ITH4oQ4kFtxeq9kJgN/7wt9FiH3r7V2324h0udr
cIuxyvg5uLhXcMd4PQO7XKO4n8/nYKyKK+9yC3keZyKazs3BHaNRrb5OBtbx
V1t9/cfGc+smjVY2A3SviOBiEp9lXm+2FnIRH6GooHJxlI01eerKj5SZ+PtB
Msu/i43Wracl1t5j4on29jd8X9iwndom5BvIRO/hHwUvc9gYzl8yn0l8x7L7
27s2ZrPBczCX/fYFE9r35NOPprOhYiaaK5/KRGThs9CH79m44/HNVJ70xRFb
d/7mCmNDoWx7uJwaC/rl1W1mjmyk3Re870P62qxzRwIm7Um+HWV69GixEL+0
O+j5BTaONoXYxBLf1ZafSm87x8YN9sBWOQsWZKPFz7qZs/FN8G3dGj8WHKRf
rJw5yIaTydJla9pY2D6bbe0qz8bZeNWItV3Ep28/wLq+ho0TUwZy61ksCD/g
t3SRIfO9fLRNbZiFkP609bcl2VjQyW++k6cXzoFPU2KI/kXYLog1V+6FyWcp
5aML2Chxmd4aersXY6f2qR3so5BdJlYQfrcXus1WMYEsCgkrNQ9G+PWi8dsZ
s+8MCkGf3cxignuxIiLynRXRX7PZMY/Ut72wbg7qiiD6PHhvqOxbdS/0FnGd
8amhIBbGMOWR6sOrzcvSpbMoaPisXnF9TR+uztJnH2VQOOlsXtezrg/eux5t
5PpIIcTwP/3izX1wkhrVGkihsEQgb4/3oT58jNZWY8dTmPMNVea63geNOpV7
TpEUJF2+U1fc++Czf9EjwVcUtM8vet/p2Qf1pMD7qREUbuzxkqUF9iEpUcJu
+hmFkTn7FZ7RfeBOzinICKHAcNvDNVPVh97rf59nBVCYZ+eRf+m/Ptx4Y2bg
409B5mTOzdaGPnz48pzH2I/Cqa0q47mkrnGVKLjO+VCgD4ux3Sf68Nc7xMPN
i0LlxZG6P7IUPj0ZCZ52pdBnqvzEbh2FLM2csEkXCryH7AwalSm8zN8bM3Wd
wh6F9ors7RQ4aqvpPNco5HVX5LvoUyi/djoHVyikWLx+P3qDQtcdevTBCxS2
NspN83qSdftcWnPPjsIXo/dHxMk65hn/0C+2pVChmzKy6xGF20mPonVtKPRs
z9MOiqGAuE2bXc9SsM9AUEwchfhzL+bKrSkMqxT/ykykoJqReF2S8NzaKt9W
ck8W50Wtak5TWCXS9EOxikJd5JV1R09RiHpssUbnB/lOK3lPtiWFtYs7rx+t
p9Cpz1koQ3jzPJaYaweFcJHLwX9J/dYfHj1X/JvCTMnBFz9NKdRfcsumk7o8
75Ihz1HC5r3TfOwZCnzlm8W+m1C40MGdsnQhG8EiBrvqT1LwrhaaPCVB8nrl
7F2uE+S9Q6F6V0mcGxrOaYYYU3hcvCLy3lo21knvfKlA+FWu1J5EVTYu/eM3
MzlOQU49JqxgKxuibyyzRo0ofEiX763VZOPLnEtuCOFP8UoPJ/ey0V/jWtB0
jMJO+dSOxbpspMeI5nsRLonevGm1ARtfJ9nn1hP+Ga5J32/KRr5BeMI9Qwr9
9w7KhDoQnXCVW2pxlMI1rm/OcVfZ2Hcn6/BKwtO3DEo/u7JR+0NIhW5AYeG1
E/a/iG8YUtRlWRAOGmzKG/Vl45Bz7pc1hEXsLYUWPmDD1W/V9n4SB2usz2Vu
fEp8hUeqtD/h+DYW7+4INibmLt83Jaxqam9mHE3qfpDiS2XC2XUDiXZv2Xg5
9NJwPmGdo1fnbiaw0eTl/6HtCIXiqjHDoBQ2lDXj43MI6x24ERuTwcZI5me9
Z4T/K/w7nkl00UTFNfgGYZMdXocq8onO+Ya7WxJuG2cJFRWxcWHXRa+9hM+m
GDR+KWcj5GKlwEbCvbbZUVnVZL1wkhcj7LBa2ja1lg2xStHihYR/N/puTKCz
wWpyoiYPU3ALHhh708oGt+D2Z/2EZw6dyHtFfIxMo2R1N2Fv7nyfcCYbl683
+LcS5suVPxzMJs+nhavohB85PxS+P8TGGSO/kHrCwkpjzT5jbDxB56//8fMe
ixiPKTbuW1VnNhKWflV8wY34mBzFvwLthGONldSukrqzfWJlP4OwokDoH3s+
Dkb+1RgMEU4pnS44L8DBoHX5thnCWz3P+v3PpyyWSn69mOzns3qVvinxIfZi
6x5LEd45tEnUiNRhY8U2rs2ES96/aDssy8EJXufxQ4R1z3C/3a/AgeqpRw5n
CX9fdfESlDhYUVZr40m4OVBjevM2DmbZVu35hK32vC5U1uKg7hll3kWYMb0w
UAEc7NaRNVtI7nfwUuNKcV0OTo0L0c0JX5dH53IDDp6WcBkHEJ5qi4sTOM6B
I4/wsRzCPAau27hPcdB/cK5sNYm3+7wdM9PWHAQJLIYJYSHa/pIxWw7Cv73c
+oSwuJro8T4nDsJ43oQvIfEc3XdbvNuFgw2+u+cZEJaPYXS13uTg95LP1BPC
qsKZTj/ucaDZ4b5BluRHZpWERmUgB+mJTG8Hwlo+Pv+Kgjj49ODyiVzC+8aM
grKfcxB1S9juFMkvc/pIYmQSB69TBNQKSX7+CjK79iydg2ahuiMyJJ9tDhZq
PckmvsVU5Nddwk45wZX3vnJQe3f9hSMk//0iVHsv1XMwIH1wZI7oRbqV4xqt
GQ56TBnuzWYkXrOGpV5z9+P4YzPdS0SfRJZcF+Nd2A/lB1Hj/wi7fr659Oey
fig6D3VtInqmJRIwd3FdP3y6miY+WVEoqnzT8sKoH/n+PW5HzpN8l1Gg/zPp
R9wl36LFRG/l3RJqbU71Y69nd0cNYT/5tIpNF/rRP9YbaE70+rBXfnalRz/W
Md+EPbUneri1KWQqvh8jwpL0J1cp+D6wCDqd0o+niR96PJwpqHd3BJZm9GPp
sclsB1Ifnj9m3nlSQJ7rZyUakXpyiv378vr6fjie+/YJ7hRY0QKHzf71g2X0
IT7yLoVJ/r3zP58YwPXIDdrnwkh+DAqGFZkPIIrbmBb8lIJSbYt89ekByMUW
hH8NJ/H2zPlA58UB1Pc+0ln3guiF3JvABZ4DWNXrbrg0iuiVDvdSo7gBBP51
+GtI6vHayzRJzsQAeFhTZv4FJP6PPUge+zuAH3d8mbM0CqZbTXbOcQ2iafB4
smshibfpwdPLFg/CRbdk8HIJqSN+0rHbVw9CZssm+ZukzuRFe6y/d3AQt1NM
P07TKRjVaqtLPR9ETlfqqugRCvzaiwvzIgcR8ro85PEohcK3LYctYweRx2r8
5D1OQe2Gu/XLlEG4H4iec5qiILj600Ox0kFcnk+dceRmo9Jhc4/o70HIin4M
YCxjYxff+mDBI0N4XdXfXkLqxOTVSfGUY0PI2bMwlm87G6mt5e/0TYYgLJ84
bEDqhnSq7ZeHZ4egmqkh27OD9H8n3rL43YewR43/83ri1z7Frt6xMG4I1/cb
/adC/NxlgaHyuMQhdDUWv4ywJDrqVmB0IH0It2ROd/CdZiNM79QF37wh2FOf
S/qJH3QeiQidXzeE38NP/tQSP7nBwl46tmkIPF3dp445sdFVopmwp2MIWbWJ
m+ucSR183lRwlxrC/rX6ch1ubPDNi9eVHRrC+uNTOnY32aBdcqv/OjaEJ2Kl
X3/fJnWl4cDpM9NDEHKJSL7jRerW//++Bgccz81b5s3G/wEMdEJ7
       "]]},
     Annotation[#, "Charting`Private`Tag$24489#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmHk01N//x8kS8kkLiVQqJLSIZKmeEylZCgmhhfZQoaLsSlSylKRFZGmh
FBUlTBvti3XGOmNmiJr3e4gsk/K733N+f815nDP3vu59rc/7nuNzyHn3OAkJ
CS9JCYn//S7CtB9jYyKmywHee2MnecahkXnxI2IR83qrc97ABnnGw0eGOv2/
Rcx983ViH9vLM5bqOvh0/RQx7zUPOxnbyDOWTz7V/IklYr74tlfTGPIMBr/v
w5UHImauy7IU44XyDOe4zwVG20VM3nveO1N5eUbw11P+eytp5ofu5683vJRj
1NdP+PHSm2Ju79e8cVNbjjHzxSHl5RpCpnyujnp66njGE983MkptP5hrteKi
n8qOZ+xIMOxtiulhtlbWPFjqL8sYvhAaz0Q3U0H2bJptuwwjZ2K7WnpHF/N0
k1Ug20qGcd3WMLDuTCfTi9ehVnBPmhHj5x2yYL2AGU1NMJuqKc0IlcoPDqR4
zDGjB/Xq8VIM76ivWo13OphHjoxlPRaPY1yq6Ey/foDL9NLSSU44PI5RxtFV
vDe3nel7J7J5UYskY94khqXLjRamvGGIroujJKNYL/4Aj89mpl4tL9pVJsHg
VBVpmpg0Mm9UNm/4OF+C0WlwaSmzpI55PzVK3hRjmBxx12SRZA3TUH49NTT9
HwxMRAZ5/Z+YjPf1hrvH/8XJNdS3ZyFvmcJrddemcf9AxaUweYvqK2ZXs8zp
lUwxigerlN5plTGH42bsLSgeQV5L5/meU4XMLfvjeduTh7HVSeNxy85UJlVo
b6IeM4RnCqENr45exFSe/sO644NYxpOcFe3+ABZpHNGI52/M630+Yv7qGa5Y
5hQ4OA9gfU7T5w3ur8DdMEXJ3bgf1g5TpH4/eYvxwX9U9s7+haTtrKglpZ/w
3xfTrrZ5fXi7YeZ/jlNq4KZk5po9txfKizqmBWrU4JD59ZdTZ/dix395mqk6
NagJf64YN6MX4o8GxmzzGiQPKHgEKffCYP0Kzx07a1C9cEvYTtleJFt53j38
uAYf60P+bWgQwcP0inWKay1kNC4ocPeLcEt168ZHO2qhnPNFbfNOEfoHNbc0
HKiF6NGBsq9eIiQ8ueOnFlmLGvX8wYaNIjCXPr1483YtbDkqbromImgtZHUU
DdfCjHXW6reUCNQclYjaq3W4kAAZZi4N09CbAS9z6/C0uXLOgkwaMfULdz8s
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
HtU=
       "]]},
     Annotation[#, "Charting`Private`Tag$24489#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
VnpuH2NRnq/h81lxHP9/X4MNmCBp4Y3jv74YyCw=
       "]]},
     Annotation[#, "Charting`Private`Tag$24489#8"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{588., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-4.887496265912909, 4.150911250106762}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.788956763307135*^9, 3.788956881979127*^9, 3.7889570157599955`*^9, 
   3.788957081119725*^9, {3.788957506745217*^9, 3.7889575257420845`*^9}, 
   3.7890556057096863`*^9, 3.7890590260809484`*^9, 3.7890591825076103`*^9, 
   3.789059663804634*^9, 3.7890597798080673`*^9, 3.789059814011894*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"2a676f1b-8bb6-4fd4-a9c8-19e529d32666"]
}, Open  ]],

Cell["\<\
It does indeed seem like some of the curves do cross each other. Zooming in \
we do see that they do not actually cross. We can also plot the curves \
separately and see that the slope changes drastically at some points.\
\>", "Text",
 CellChangeTimes->{{3.788957797298953*^9, 3.788957804424406*^9}, {
  3.7889578459235787`*^9, 3.788958015117483*^9}, {3.7890557709062862`*^9, 
  3.7890557731825523`*^9}, {3.7890591012424555`*^9, 3.789059119857489*^9}, {
  3.7890593544476285`*^9, 3.7890593687424526`*^9}, {3.789059833420541*^9, 
  3.7890598344243317`*^9}},ExpressionUUID->"92ed0c2d-be8f-45dd-afdb-\
ca71a625abb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"M", "[", "x", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"M", "[", "x", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.788956940099075*^9, 3.7889569716130047`*^9}, {
  3.7889571097763767`*^9, 3.7889571383577766`*^9}, {3.7889571731527424`*^9, 
  3.7889571737722597`*^9}, {3.789055734708808*^9, 3.789055735263524*^9}, {
  3.789059074679511*^9, 3.7890590914445047`*^9}, {3.7890591934711227`*^9, 
  3.7890591957133217`*^9}, {3.789059230583248*^9, 3.7890592424558864`*^9}, {
  3.789059401653194*^9, 3.789059410092986*^9}, {3.7890598464039326`*^9, 
  3.7890598479657593`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"35206cfc-78f6-40e1-9f4d-05def28ddde3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$24830#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$24830#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 1}, {-0.056522114402662346`, 1.8406177754460062`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"Sort", "[", 
           RowBox[{"Eigenvalues", "[", 
             RowBox[{"M", "(", "x", ")"}], "]"}], "]"}], 
         "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
       RowBox[{
         RowBox[{"Sort", "[", 
           RowBox[{"Eigenvalues", "[", 
             RowBox[{"M", "(", "x", ")"}], "]"}], "]"}], 
         "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.788956957427677*^9, 3.7889569721044364`*^9}, 
   3.7889571394197397`*^9, 3.788957174681826*^9, {3.7890557242327385`*^9, 
   3.7890557357271605`*^9}, {3.7890590871228075`*^9, 3.7890590920710707`*^9}, 
   3.7890591977204742`*^9, 3.789059243675947*^9, 3.789059410825864*^9, 
   3.7890598521882453`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"4ec278a1-03a4-4d9b-ae22-4c62e113a918"]
}, Open  ]],

Cell["\<\
Alternatively, we can use Solve to find the possible intersections, but in \
this case there are none:\
\>", "Text",
 CellChangeTimes->{{3.7890557658690357`*^9, 3.78905578396631*^9}, {
  3.789059126115947*^9, 
  3.789059148155923*^9}},ExpressionUUID->"91af39a9-5bde-465b-81e7-\
e10db0eea6ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"M", "[", "x", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "5", "]"}], "]"}], "==", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"M", "[", "x", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "6", "]"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7890560883253174`*^9, 3.789056101317951*^9}, {
  3.78905898859474*^9, 3.7890590162470365`*^9}, {3.7890590467592673`*^9, 
  3.7890590693632917`*^9}, {3.7890591529926147`*^9, 3.7890591535723886`*^9}, {
  3.789059875331337*^9, 3.7890598774381857`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"4ead8ff9-ba9d-430a-a950-d4ab1f93f14e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7890561043591795`*^9, 3.7890589978914332`*^9, 
  3.7890590595513463`*^9, 3.7890591562196555`*^9, 3.7890598788431997`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"128fa19a-0ef5-40c4-80f9-1b51db52af84"]
}, Open  ]],

Cell["Without the sorting, two curves would look like:", "Text",
 CellChangeTimes->{{3.7890594395281467`*^9, 3.789059447717762*^9}, {
  3.7890598920451403`*^9, 3.7890598968773556`*^9}, {3.7890600167738094`*^9, 
  3.7890600410317926`*^9}},ExpressionUUID->"a9e59471-41a3-40cd-ae0b-\
a964902ee47b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"M", "[", "x", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"M", "[", "x", "]"}], "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.789059392984664*^9, 3.7890593948521023`*^9}, {
  3.78905989978983*^9, 3.789059902176053*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"7c636234-3879-49e0-bdf4-57d27889a659"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2Xk0Vd/7B/CUIkVSikJEKJGhScm7aEIpQyWE6kOlFBKaVEIpodCcsaTM
SSGczDOZp8udce/FRShjv/Nd6/fXXa919t3n2Xs/+9nnrKNw5oq549w5c+bU
CsyZ879fDazg/vvHJ/bEUKPUrs7gyoTiw4lJPqEi0j3k5TqDtAwt5d9jfMJ0
rf6uYpcZaKsePtPD4xO6igrltudnsG2pX0d1K5+oKj4T/+TUDHYzhytfpfKJ
uUMn/AYPzMD8QU2ijj2fULumXpgkMwOvOj+Xc/mDxPUJTZXVpdNoalrELTg9
QJjcDVmtLDIN2Z9Xlm+T6Sfmy2axzK2nkHmxeP6SLi7xyrjYOi55Eg5BWkPt
vhzCvnFp+/jwBP4+u/mQQB+x5avYzZsGE4gT65Z+Se8h6JfTn43c/4u3xlru
jYFsQlRS7tiD8j/wvXTae70Ri0gOL/rkKP0HN+d99nIfYBBti1mK6jbjOH23
TqklgU6oLeQrW34aQ0Qe++VbZxqR8r5iU8nkKHKoqouT1nYTCmpzr+nsGoWi
+G4Dy8hOgvHn/p+dQb/xZcNDZwazjThyUW+fa/UIqCXp8lu3thCiRnVFJ8RH
wN4YoU18ayQcXTY8NDo9jKU+n7ZqCNQTt59OvZR6P4SNW/kbP/yuJtqc8GK8
j4/7ewd+ZXuXEUeSll33vTIIScuU0JMrCwn5eC9PT4EBfBkvWVKulEO84dta
Jabz8KGT/YTjl0K8WmrTYWjKxSkzma+dZ8OJ4eW87jxRDrJFbjYXXguDrECB
wxlGL7YwBOTuWaXCbM2C2K+ZPdDIOTGs+SkVP7p3yoWm90D5WXIxbSIVBfZv
klySe7AoJmlL9OE0hL+ev2TThx5MH7Wi/BtMw8d1K09UhfegKy11PaH1Bf/0
5t128ehBlKtd8a7vXxE1P6DHc0sP3touTImgfoWPcWH3W60evDz49cWAUCbk
l3VcL1HvQai8yMV3Vpmw8vJMkVPuwd1fmUtnJjJh+kshZXhFD05ritrn6n1H
lyBFdc0EG4pDPyZ2FGZj1aGwLSUEG7dqDP1GB7JxXO+EvEAuGy2fq8RSpHNQ
EN0rtyeLjUeOnYoKbjkwnjW5V5PGxlDH5GEh+R/IHy8Qlo5lI79EN7bxdi5C
XIVX+PuzIRVXsPHJp1wIdEZeF/Jlw/2u0ff9zbmImDRIDPZhY93Ok9XZG/PQ
RHFMTvRiIyjNezyqMw+fQr8kKDizYf3mu/ElXQLFtGVzRI6y8dUbzescCWx2
0+qgHmJD7HiZPTWUQODqa5d+GLFRIN7qYd5HYDDDaeq+IRvLDW8eeWvyEyZm
J9/ZbmPjZtbr676TP9EQJui/U54N1Y/d+vbiBej/YyN5TZaNpoi1gnrKBRD4
vfdu5io2NK5+Dh4zK4CZiddWE0k2GOo5cec/FSCfl+BYLcKGUVx7jalVIUYL
V4Vs/8PCkH+KU4lLITRjvjmNjrLw8vz9fzvvFyLck1DJGmGhT11da31KIbhr
XPJPDLLwMOtu+DzBIpxVrEydYLOg+eaY+g3pImio7Df8w2Sh7faG0iGNIjx6
M3B1hs6CqmHTn66TRZB3sxJW6mahvEbFJiu1CFenFO9RWlhwTZv+rVFShCtF
vLsKzSxIhdUHfegoQu6drOYrjSyct7qZ/2x+McIj53So/mJBmFmr4GJTDBvx
xgqxShbSSuJymK7FKKy8PRhdzoJVgreFdUAxrF+9lNlVxkKCy1r/A+nFkOLr
9ocVs3Dg77U+BaESfPn2JSmPYGGww/jeS5kS8D4lu8Xms/A8b82qJdolWPhj
tudpHgs9vhUm07YliN9+d9PTHywEO0ay3N1LsOCIsGpMDgtbD169zXlQAp2k
h6tzs1kIEJVNbflSgg2a5duXZbGgMTR84HB5CQKd2u8f+c5CS0MprairBON1
1xe/+MaCT+ab6zt+l8C7t5POyWRB+aWrRLpwKUQiQyUOkq69sS9RRa4Uj0fv
JqV/ZcHz1Kq9kTqlUEztzVUmLbebT1luVIpDyiZHP2awULq2+Npju1J82+Hl
rkP68vxXYnM9SuHj6qVR9YWFFX0uH70DS/Fp69Pgy6TzKw128yNLEW+v/1aW
tFPyynbHr6WwrVNxaEtnQSy0341SQbY/K8+IJP3NvUDEgkr2v1p+vRtpu2PP
4ypGS3HUFzuPkF6w/aLebpEyjNtnyOqSTlm1u/nbmjKoZ5U3aZA+PrP8svqW
MlitoJ/VJD1L5Sx4b1yGY+pXanaRji/Mj1rlUIZzNb8lTpA2/RC2/em1MrzW
mdp8i/T4g/P1Qo/LIJa5SieZdKTzLmef6DKMlg8u4pLed1hi3lhmGdZflc7T
JscTfHrh8ERFGfLm+G++R7rt2hzqbFcZhEsjfreTVnj0p3reSBmsfcXG9cj5
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
a6+T797h4v+/Z2K/y9m5S325+D/PhB8p
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25238#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NPT//18Dy74Op95j/x+pg9CN
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25238#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 1}, {-1.815480515127946, 1.8406177754460062`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"Eigenvalues", "[", 
           RowBox[{"M", "(", "x", ")"}], "]"}], "\[LeftDoubleBracket]", "5", 
         "\[RightDoubleBracket]"}], 
       RowBox[{
         RowBox[{"Eigenvalues", "[", 
           RowBox[{"M", "(", "x", ")"}], "]"}], "\[LeftDoubleBracket]", "6", 
         "\[RightDoubleBracket]"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7890593957975907`*^9, 3.7890599035010695`*^9, 
  3.789060087881731*^9},ExpressionUUID->"0f42a166-5158-44f5-946b-\
2301ff5a05cc"]
}, Open  ]],

Cell["Possible intersections would be given by:", "Text",
 CellChangeTimes->{{3.7890600479670076`*^9, 3.789060054838009*^9}, {
  3.78906021440409*^9, 
  3.789060214821043*^9}},ExpressionUUID->"664f7125-403c-49ad-98b8-\
5359c2bafbdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"M", "[", "x", "]"}], "]"}], "[", 
      RowBox[{"[", "5", "]"}], "]"}], "==", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"M", "[", "x", "]"}], "]"}], "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], ",", "x"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.789059687808036*^9, 3.7890596973742595`*^9}, {
  3.7890599298695607`*^9, 3.7890599622021794`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"80a5d341-8136-4a22-8837-dafacdf9861b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.789059963119544*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"72083107-a40f-4098-8337-5d80de90c4f1"]
}, Open  ]],

Cell["\<\
This again leads to no solutions, despite the fact that the curves \
\[OpenCurlyQuote]seem\[CloseCurlyQuote] to intersect. This is because the \
functions have discontinuities at the points where their values drastically \
change, such as:\
\>", "Text",
 CellChangeTimes->{{3.7890602199513187`*^9, 3.7890602359816236`*^9}, {
  3.7890603104698505`*^9, 
  3.7890603618697557`*^9}},ExpressionUUID->"a4f0c57c-9c51-4c9a-be9e-\
4af47a826ffc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"M", "[", "0.23598", "]"}], "]"}], "[", 
  RowBox[{"[", "5", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"M", "[", "0.23599", "]"}], "]"}], "[", 
  RowBox[{"[", "5", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7890597016888514`*^9, 3.789059716192011*^9}, {
  3.789060101052183*^9, 3.7890602036991596`*^9}, {3.789060455116686*^9, 
  3.789060500319693*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"3a31f89d-7a1f-434c-9e68-491390ca4e35"],

Cell[BoxData["0.6638312673583054`"], "Output",
 CellChangeTimes->{{3.7890597098686495`*^9, 3.78905971674561*^9}, {
  3.7890601103357763`*^9, 3.7890602041621714`*^9}, {3.7890604800035195`*^9, 
  3.7890605007358017`*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"80e3c693-5c29-4ec2-a655-60182d0d2fd9"],

Cell[BoxData[
 RowBox[{"-", "0.663836215242208`"}]], "Output",
 CellChangeTimes->{{3.7890597098686495`*^9, 3.78905971674561*^9}, {
  3.7890601103357763`*^9, 3.7890602041621714`*^9}, {3.7890604800035195`*^9, 
  3.789060500751464*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"96076904-d5fd-4289-bde3-ccaac75c538d"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.788956715325512*^9, 3.788956716240566*^9}, 
   3.7890593853349857`*^9},ExpressionUUID->"c9a29ade-a231-4361-93a3-\
c94b71411825"],

Cell["Question 5", "Subchapter",
 CellChangeTimes->{{3.72494407382446*^9, 3.7249440963039*^9}, 
   3.724944194386578*^9, {3.7888051100862026`*^9, 
   3.7888051320418477`*^9}},ExpressionUUID->"3a3083b8-fd94-4596-80cd-\
438c508f611d"],

Cell["\<\
We start by creating a function that solves the equation for integers and \
returns the unique ways of decomposing a given integer in a sum of two cubes:\
\
\>", "Text",
 CellChangeTimes->{{3.788937608206232*^9, 3.788937610561966*^9}, {
  3.7889378056290197`*^9, 3.788937829696207*^9}, {3.7889380112298946`*^9, 
  3.7889380481279287`*^9}, {3.7889393064952908`*^9, 3.788939308743246*^9}, {
  3.7889556841274886`*^9, 
  3.7889557110359154`*^9}},ExpressionUUID->"b3d1c91f-bbf1-4f2e-906b-\
21b7ac92d680"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"n", ",", "x", ",", "y", ",", "a", ",", "l", ",", "Ram"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ram", "[", "a_", "]"}], ":=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "\[Equal]", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", 
        RowBox[{"y", "^", "3"}]}]}], " ", "&&", " ", 
      RowBox[{"x", "\[GreaterEqual]", "y"}], " ", "&&", " ", 
      RowBox[{"y", ">", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", " ", "Integers"}], "]"}]}], ";", 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "not", " ", "great"}], ",", " ", 
    RowBox[{
    "but", " ", "can", " ", "probably", " ", "check", " ", "up", " ", "to", 
     " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "/", "2"}], ")"}], 
      RowBox[{"1", "/", "3"}]]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.788937601909317*^9, 3.7889376260994205`*^9}, {
   3.7889376597404356`*^9, 3.788937708686392*^9}, {3.7889377616286726`*^9, 
   3.7889378022540436`*^9}, {3.788937853787788*^9, 3.7889379813149157`*^9}, {
   3.788938055262514*^9, 3.7889380890651608`*^9}, {3.7889381233704305`*^9, 
   3.7889381359916697`*^9}, {3.7889382219328146`*^9, 3.788938242615511*^9}, {
   3.788938351816684*^9, 3.788938358496828*^9}, {3.788938392929702*^9, 
   3.7889383980679026`*^9}, {3.788938440068287*^9, 3.788938463095643*^9}, {
   3.78893849507626*^9, 3.7889384964186387`*^9}, {3.7889385397542734`*^9, 
   3.788938554060986*^9}, 3.7889385899699683`*^9, {3.7889391894174547`*^9, 
   3.7889392295388346`*^9}, {3.788939263571032*^9, 3.788939271524806*^9}, {
   3.7889556666144447`*^9, 3.7889556710074873`*^9}, {3.788956130701005*^9, 
   3.7889561364655447`*^9}, {3.7905129072354245`*^9, 
   3.790512962216878*^9}},ExpressionUUID->"f5b4e22f-b01e-4826-bb54-\
972c33cf2538"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ram", "[", "4104", "]"}]], "Input",
 CellChangeTimes->{{3.788938058052089*^9, 3.7889380738747807`*^9}, {
  3.788938408891983*^9, 3.788938411561842*^9}, {3.7889384728539543`*^9, 
  3.7889385139894276`*^9}, {3.788938597316325*^9, 3.788938605608154*^9}, {
  3.788939238413105*^9, 3.7889392422189665`*^9}, {3.7889393226311455`*^9, 
  3.7889393576843805`*^9}, {3.788955600038531*^9, 3.788955627798888*^9}, {
  3.7889560671598406`*^9, 3.7889560680971007`*^9}, {3.7889563843343477`*^9, 
  3.788956386113401*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"9a176369-e54f-40e8-90cd-d7dd48531314"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "15"}], ",", 
     RowBox[{"y", "\[Rule]", "9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "16"}], ",", 
     RowBox[{"y", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.788938490088565*^9, 3.7889385143475065`*^9}, 
   3.788938558158066*^9, {3.788938598295741*^9, 3.7889386060799265`*^9}, 
   3.7889392430996356`*^9, 3.788939275548007*^9, {3.7889393262274933`*^9, 
   3.788939351965734*^9}, 3.7889393896523037`*^9, {3.7889556020638337`*^9, 
   3.788955630596137*^9}, 3.788955676023963*^9, 3.7889560686904573`*^9, 
   3.7889561418731956`*^9, 3.7889563917854414`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"73d94fbb-b941-4a2a-95c5-9b9ff1b4ed79"]
}, Open  ]],

Cell["\<\
We are now interested in finding the smallest integer that can be written as \
two different sums of cubes. A (probably inefficient) way of doing this is to \
apply the Ram[] function for every integer from 2 as:\
\>", "Text",
 CellChangeTimes->{{3.7889393722535677`*^9, 3.7889393853605213`*^9}, {
  3.788939541456019*^9, 3.7889395533821316`*^9}, {3.788955496226392*^9, 
  3.7889556072375765`*^9}, {3.788955723462886*^9, 3.788955764876791*^9}, {
  3.7889558117795196`*^9, 3.788955855585815*^9}, {3.7889561660079684`*^9, 
  3.7889562032122188`*^9}},ExpressionUUID->"cc21d8ef-c798-41d3-978e-\
9d99f8b2caf7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{"True", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Ram", "[", "n", "]"}], "]"}], ">", "1"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Could", " ", "put"}], " ", "\[Equal]", "2"}], ",", " ", 
       RowBox[{
        RowBox[{
        "but", " ", "let", " ", "us", " ", "just", " ", "look", " ", "for"}], 
        " ", ">", 
        RowBox[{"1", " ", "instead"}]}]}], "*)"}], "\[IndentingNewLine]", 
     "\t\t\t", 
     RowBox[{
      RowBox[{"Print", "[", "n", "]"}], ";", " ", 
      RowBox[{"Break", "[", "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"n", "++"}]}], "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7889558641902266`*^9, 3.788955877254545*^9}, {
  3.788955920168586*^9, 3.7889559551607695`*^9}, {3.7889559961300187`*^9, 
  3.788956053109996*^9}, {3.788956397673437*^9, 
  3.7889564486143227`*^9}},ExpressionUUID->"1d32ce91-bf01-40d8-9af5-\
274c5fd4f686"],

Cell[BoxData["1729"], "Print",
 CellChangeTimes->{3.788956059758847*^9, 3.7889561626445074`*^9, 
  3.788956275707657*^9, 3.7889564178629246`*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"5c254f4e-3de8-4c57-915e-a441b2e7e251"]
}, Open  ]],

Cell["\<\
The next integer that satisfies this property can be computed in a similar \
way (and we see that it is 4104):\
\>", "Text",
 CellChangeTimes->{{3.78893970497097*^9, 3.788939711036783*^9}, {
  3.788956263348221*^9, 3.788956278271887*^9}, {3.788956322440493*^9, 
  3.7889563292691813`*^9}},ExpressionUUID->"2c7f3444-c1bc-4fe2-867f-\
6dec36adbab3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "++"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{"True", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Ram", "[", "n", "]"}], "]"}], ">", "1"}], ",", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{
      RowBox[{"Print", "[", "n", "]"}], ";", " ", 
      RowBox[{"Break", "[", "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"n", "++"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7889386477880793`*^9, {3.7889387775505533`*^9, 3.7889388727373066`*^9}, {
   3.7889389830269265`*^9, 3.7889389866232777`*^9}, {3.7889562259106245`*^9, 
   3.7889562470126677`*^9}, 3.788956283491419*^9, {3.7889564096431365`*^9, 
   3.7889564142372055`*^9}, 
   3.7889564566759095`*^9},ExpressionUUID->"11d71918-7c58-4f69-abd9-\
7f0d2023cc37"],

Cell[BoxData["4104"], "Print",
 CellChangeTimes->{3.7889563154356313`*^9, 3.7889564512236977`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"f59fdac7-3d05-4cbc-9a37-0c3ed76027e2"]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 257, 4, 62, "Chapter",ExpressionUUID->"d90cc9ee-2f1b-4f3e-b72d-3d49e4e77ba1"],
Cell[818, 26, 154, 3, 30, "Subtitle",ExpressionUUID->"80ed7abd-b84b-44b2-89b0-a64ceebab980"],
Cell[975, 31, 232, 4, 57, "Subchapter",ExpressionUUID->"40e5c9cf-a495-40a0-bd7c-10810f35b49e"],
Cell[1210, 37, 525, 15, 28, "Text",ExpressionUUID->"0c16dd5a-fc17-4628-8a31-ed15c5588720"],
Cell[1738, 54, 2064, 58, 223, "Input",ExpressionUUID->"f8bb5ad2-64e2-401d-b015-508030ca213c"],
Cell[3805, 114, 227, 4, 30, "Text",ExpressionUUID->"7a30d63d-8c81-4b31-bbdb-5a4c4575894d"],
Cell[CellGroupData[{
Cell[4057, 122, 364, 8, 35, "Input",ExpressionUUID->"29a7eb3b-2eed-4e48-8fb2-d11092f8f269"],
Cell[4424, 132, 291, 4, 35, "Output",ExpressionUUID->"1679d11c-5443-4d73-8d3a-537a08bd1b64"]
}, Open  ]],
Cell[4730, 139, 225, 4, 30, "Text",ExpressionUUID->"0241c94f-502d-4bd4-8c40-a209766cc662"],
Cell[4958, 145, 630, 18, 56, "Input",ExpressionUUID->"575c93d3-e862-4ca5-983b-24f8418aeff5"],
Cell[5591, 165, 243, 4, 30, "Text",ExpressionUUID->"61973a87-8d60-4b25-a8aa-8482bca83e69"],
Cell[CellGroupData[{
Cell[5859, 173, 546, 16, 50, "Input",ExpressionUUID->"02ec073e-55cc-4020-a6c6-8c1e257a500e"],
Cell[6408, 191, 223, 3, 37, "Output",ExpressionUUID->"6b47fe62-f8bd-4385-9c8f-86c910cefe69"]
}, Open  ]],
Cell[6646, 197, 230, 4, 57, "Subchapter",ExpressionUUID->"b5485d21-4daa-4df3-9790-5b41e817d50f"],
Cell[6879, 203, 596, 16, 28, "Text",ExpressionUUID->"db7b42af-d592-4b34-b8b0-fc407850f1c4"],
Cell[7478, 221, 1424, 42, 117, "Input",ExpressionUUID->"6b98743d-aab9-4def-9cda-a33720c68a6f"],
Cell[8905, 265, 776, 22, 30, "Text",ExpressionUUID->"73255d74-af56-4078-832c-8cfd64fc0ccf"],
Cell[CellGroupData[{
Cell[9706, 291, 545, 12, 35, "Input",ExpressionUUID->"7ae2637e-96f8-4b2b-b525-0e457b5e0a1a"],
Cell[10254, 305, 414, 9, 60, "Output",ExpressionUUID->"2120181c-439d-4292-932b-aeaa9f3ddac3"]
}, Open  ]],
Cell[10683, 317, 299, 7, 30, "Text",ExpressionUUID->"5fa9f44a-ffa4-4898-9ee1-b8be6fc6ef09"],
Cell[CellGroupData[{
Cell[11007, 328, 537, 15, 56, "Input",ExpressionUUID->"f3610f5b-e090-4fc9-9d8d-f5165b1a537c"],
Cell[11547, 345, 16482, 289, 319, "Output",ExpressionUUID->"191c41bb-c2a2-46ca-b1f1-e856348c3147"]
}, Open  ]],
Cell[28044, 637, 1131, 27, 51, "Text",ExpressionUUID->"f3a1dea6-0f8c-403f-b76a-d24621cbac83"],
Cell[CellGroupData[{
Cell[29200, 668, 810, 22, 60, "Input",ExpressionUUID->"6958fc3c-1b97-433d-ac6b-84b19bc0dec2"],
Cell[30013, 692, 3265, 71, 215, "Output",ExpressionUUID->"4494df17-fc1b-44d9-8578-1aa6bf1a35bc"]
}, Open  ]],
Cell[33293, 766, 1571, 37, 51, "Text",ExpressionUUID->"11dfe93a-9e19-4751-81e7-85c62e674abe"],
Cell[CellGroupData[{
Cell[34889, 807, 1000, 25, 65, "Input",ExpressionUUID->"fbd14bd2-d82e-46c9-9057-e1cab4451458"],
Cell[35892, 834, 1203, 33, 68, "Output",ExpressionUUID->"16a1539c-27f3-410a-bde2-cf2968b64c7c"]
}, Open  ]],
Cell[37110, 870, 1041, 30, 30, "Text",ExpressionUUID->"2fdec39e-67f8-45ff-8f4a-83c04982a832"],
Cell[CellGroupData[{
Cell[38176, 904, 1216, 29, 71, "Input",ExpressionUUID->"805d2221-030c-450a-8b30-dabf4fe7598c"],
Cell[39395, 935, 435, 7, 35, "Output",ExpressionUUID->"2ff024f8-9835-4276-9f16-a84bf87c0f96"]
}, Open  ]],
Cell[39845, 945, 287, 7, 30, "Text",ExpressionUUID->"21cb248a-ad4c-40d5-a9a1-d9ddc05549e4"],
Cell[CellGroupData[{
Cell[40157, 956, 1018, 27, 71, "Input",ExpressionUUID->"b98b1792-7c91-43bb-8244-371bfe9b72bc"],
Cell[41178, 985, 419, 6, 35, "Output",ExpressionUUID->"0c3c669b-fd21-4ae6-82dc-0f79f2d2b9d6"]
}, Open  ]],
Cell[41612, 994, 232, 4, 57, "Subchapter",ExpressionUUID->"135fae1a-2d53-4b1a-bf7f-5ac4a216d1a8"],
Cell[41847, 1000, 271, 6, 28, "Text",ExpressionUUID->"b102386e-ffe1-4072-93b2-5c6230eae515"],
Cell[CellGroupData[{
Cell[42143, 1010, 1096, 32, 116, "Input",ExpressionUUID->"51e7c05f-8f20-4eff-ac43-62024fd2ee3b"],
Cell[43242, 1044, 51762, 908, 215, "Output",ExpressionUUID->"0363727b-dc73-4787-bed3-e008175abb29"]
}, Open  ]],
Cell[95019, 1955, 1311, 36, 51, "Text",ExpressionUUID->"3a306ff5-4ced-4021-8a6a-6ba524c75158"],
Cell[CellGroupData[{
Cell[96355, 1995, 476, 11, 35, "Input",ExpressionUUID->"c8bd65ce-9597-4e81-8cbd-d06cbdd2f118"],
Cell[96834, 2008, 280, 4, 35, "Output",ExpressionUUID->"240d3699-f000-40e7-8e89-b7375351041e"]
}, Open  ]],
Cell[97129, 2015, 857, 15, 72, "Text",ExpressionUUID->"73f2e2e2-02fc-4f2d-8bfc-171ff8aacad6"],
Cell[CellGroupData[{
Cell[98011, 2034, 2642, 57, 234, "Input",ExpressionUUID->"5a774e74-eccc-4a3b-9a9f-fc89cc3b29da"],
Cell[100656, 2093, 782, 18, 21, "Print",ExpressionUUID->"28e6d83e-6632-4f2d-96b5-b0dc79c9cc74"],
Cell[101441, 2113, 782, 18, 21, "Print",ExpressionUUID->"ebdf30eb-ac09-4bcc-9643-9a90168925b1"],
Cell[102226, 2133, 784, 19, 21, "Print",ExpressionUUID->"05dc18f7-8968-4db0-90ae-8901af619b46"],
Cell[103013, 2154, 786, 19, 21, "Print",ExpressionUUID->"6096775e-5fbd-4774-8276-8cb13115c346"],
Cell[103802, 2175, 786, 19, 21, "Print",ExpressionUUID->"cdcf00fe-a79b-42e1-8e3f-24af0fcb8190"],
Cell[104591, 2196, 781, 18, 21, "Print",ExpressionUUID->"f2b6d6d8-6717-4b7f-8be3-a7107ca21023"],
Cell[105375, 2216, 782, 18, 21, "Print",ExpressionUUID->"77206b81-1df8-4465-b3e6-cb064cbcef44"],
Cell[106160, 2236, 782, 18, 21, "Print",ExpressionUUID->"97280e08-f2f2-4c02-b495-5b060795f8ff"],
Cell[106945, 2256, 786, 19, 21, "Print",ExpressionUUID->"0025f88f-3acb-4aff-8310-e9fc555d87e1"],
Cell[107734, 2277, 790, 19, 21, "Print",ExpressionUUID->"754e71c8-f5d0-4d64-9d0c-b7b00243d3c2"]
}, Open  ]],
Cell[108539, 2299, 254, 4, 57, "Subchapter",ExpressionUUID->"8977bb4a-fc2d-40f9-803d-df85a9efe9ba"],
Cell[108796, 2305, 559, 16, 28, "Text",ExpressionUUID->"4fde6627-b1b6-459b-bc95-1d87710cb215"],
Cell[109358, 2323, 1460, 43, 126, "Input",ExpressionUUID->"c11b82a7-ada5-41a9-b211-027fc7650ce9"],
Cell[110821, 2368, 386, 11, 30, "Text",ExpressionUUID->"bb6e8789-0dac-43be-8c4a-b72070d9f43f"],
Cell[CellGroupData[{
Cell[111232, 2383, 720, 16, 54, "Input",ExpressionUUID->"e46c75fd-cbb3-418d-83b7-5162f278ea03"],
Cell[111955, 2401, 66031, 1119, 408, "Output",ExpressionUUID->"69662087-b2c1-4ef8-85e7-643165e6baa5"]
}, Open  ]],
Cell[178001, 3523, 234, 6, 30, "Text",ExpressionUUID->"d25819b1-331c-425d-b9c3-73981e3b9de4"],
Cell[CellGroupData[{
Cell[178260, 3533, 814, 18, 54, "Input",ExpressionUUID->"fce2d563-ee6f-486b-83b1-3b63d2006420"],
Cell[179077, 3553, 54394, 927, 349, "Output",ExpressionUUID->"2a676f1b-8bb6-4fd4-a9c8-19e529d32666"]
}, Open  ]],
Cell[233486, 4483, 623, 10, 30, "Text",ExpressionUUID->"92ed0c2d-be8f-45dd-afdb-ca71a625abb4"],
Cell[CellGroupData[{
Cell[234134, 4497, 1177, 28, 35, "Input",ExpressionUUID->"35206cfc-78f6-40e1-9f4d-05def28ddde3"],
Cell[235314, 4527, 33017, 603, 223, "Output",ExpressionUUID->"4ec278a1-03a4-4d9b-ae22-4c62e113a918"]
}, Open  ]],
Cell[268346, 5133, 302, 7, 30, "Text",ExpressionUUID->"91af39a9-5bde-465b-81e7-e10db0eea6ae"],
Cell[CellGroupData[{
Cell[268673, 5144, 791, 19, 35, "Input",ExpressionUUID->"4ead8ff9-ba9d-430a-a950-d4ab1f93f14e"],
Cell[269467, 5165, 294, 6, 35, "Output",ExpressionUUID->"128fa19a-0ef5-40c4-80f9-1b51db52af84"]
}, Open  ]],
Cell[269776, 5174, 295, 4, 30, "Text",ExpressionUUID->"a9e59471-41a3-40cd-ae0b-a964902ee47b"],
Cell[CellGroupData[{
Cell[270096, 5182, 745, 21, 35, "Input",ExpressionUUID->"7c636234-3879-49e0-bdf4-57d27889a659"],
Cell[270844, 5205, 33828, 617, 231, "Output",ExpressionUUID->"0f42a166-5158-44f5-946b-2301ff5a05cc"]
}, Open  ]],
Cell[304687, 5825, 233, 4, 30, "Text",ExpressionUUID->"664f7125-403c-49ad-98b8-5359c2bafbdf"],
Cell[CellGroupData[{
Cell[304945, 5833, 617, 17, 54, "Input",ExpressionUUID->"80a5d341-8136-4a22-8837-dafacdf9861b"],
Cell[305565, 5852, 193, 5, 35, "Output",ExpressionUUID->"72083107-a40f-4098-8337-5d80de90c4f1"]
}, Open  ]],
Cell[305773, 5860, 446, 9, 30, "Text",ExpressionUUID->"a4f0c57c-9c51-4c9a-be9e-4af47a826ffc"],
Cell[CellGroupData[{
Cell[306244, 5873, 554, 13, 54, "Input",ExpressionUUID->"3a31f89d-7a1f-434c-9e68-491390ca4e35"],
Cell[306801, 5888, 302, 5, 35, "Output",ExpressionUUID->"80e3c693-5c29-4ec2-a655-60182d0d2fd9"],
Cell[307106, 5895, 316, 6, 35, "Output",ExpressionUUID->"96076904-d5fd-4289-bde3-ccaac75c538d"]
}, Open  ]],
Cell[307437, 5904, 167, 3, 30, "Text",ExpressionUUID->"c9a29ade-a231-4361-93a3-c94b71411825"],
Cell[307607, 5909, 232, 4, 57, "Subchapter",ExpressionUUID->"3a3083b8-fd94-4596-80cd-438c508f611d"],
Cell[307842, 5915, 510, 10, 28, "Text",ExpressionUUID->"b3d1c91f-bbf1-4f2e-906b-21b7ac92d680"],
Cell[308355, 5927, 1927, 43, 54, "Input",ExpressionUUID->"f5b4e22f-b01e-4826-bb54-972c33cf2538"],
Cell[CellGroupData[{
Cell[310307, 5974, 612, 10, 35, "Input",ExpressionUUID->"9a176369-e54f-40e8-90cd-d7dd48531314"],
Cell[310922, 5986, 802, 18, 35, "Output",ExpressionUUID->"73d94fbb-b941-4a2a-95c5-9b9ff1b4ed79"]
}, Open  ]],
Cell[311739, 6007, 615, 10, 30, "Text",ExpressionUUID->"cc21d8ef-c798-41d3-978e-9d99f8b2caf7"],
Cell[CellGroupData[{
Cell[312379, 6021, 1152, 28, 126, "Input",ExpressionUUID->"1d32ce91-bf01-40d8-9af5-274c5fd4f686"],
Cell[313534, 6051, 251, 5, 21, "Print",ExpressionUUID->"5c254f4e-3de8-4c57-915e-a441b2e7e251"]
}, Open  ]],
Cell[313800, 6059, 356, 7, 30, "Text",ExpressionUUID->"2c7f3444-c1bc-4fe2-867f-6dec36adbab3"],
Cell[CellGroupData[{
Cell[314181, 6070, 900, 21, 108, "Input",ExpressionUUID->"11d71918-7c58-4f69-abd9-7f0d2023cc37"],
Cell[315084, 6093, 204, 4, 21, "Print",ExpressionUUID->"f59fdac7-3d05-4cbc-9a37-0c3ed76027e2"]
}, Open  ]]
}
]
*)

