(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    227172,       4251]
NotebookOptionsPosition[    224587,       4208]
NotebookOutlinePosition[    225115,       4227]
CellTagsIndexPosition[    225072,       4224]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Problem Set 3", "Chapter",
 CellChangeTimes->{{3.724943992364118*^9, 3.724944007146431*^9}, {
  3.7888051135399356`*^9, 3.788805118738055*^9}, {3.788961296928027*^9, 
  3.7889613149359474`*^9}, {3.791037512773011*^9, 
  3.7910375128807287`*^9}},ExpressionUUID->"d90cc9ee-2f1b-4f3e-b72d-\
3d49e4e77ba1"],

Cell[" Horia Magureanu", "Subtitle",
 CellChangeTimes->{
  3.788961330838393*^9, {3.8943372897284813`*^9, 
   3.8943372938094006`*^9}},ExpressionUUID->"80ed7abd-b84b-44b2-89b0-\
a64ceebab980"],

Cell[TextData[StyleBox["Problem 1", "Subtitle"]], "Section",
 CellChangeTimes->{{3.72494407382446*^9, 3.7249440963039*^9}, 
   3.724944194386578*^9, {3.7888051100862026`*^9, 3.7888051114451284`*^9}, {
   3.7910375163942957`*^9, 3.7910375169817247`*^9}, {3.79103859097311*^9, 
   3.7910385977217894`*^9}, {3.7923418238284283`*^9, 
   3.792341826771244*^9}},ExpressionUUID->"40e5c9cf-a495-40a0-bd7c-\
10810f35b49e"],

Cell["\<\
We first define a function hex[] that creates a hexagon in the (y,z) plane \
with radius r and coordinate x. Then, Face2Hex creates the surface that has \
as edges the two hexagons:\
\>", "Text",
 CellChangeTimes->{{3.7889355267330356`*^9, 3.788935583543066*^9}, {
  3.789745688497979*^9, 3.78974568879154*^9}, {3.7897464137604094`*^9, 
  3.7897464314392443`*^9}, {3.789746503927161*^9, 3.7897465481235905`*^9}, {
  3.7902550235347986`*^9, 3.7902550270171843`*^9}, {3.7910375250182343`*^9, 
  3.791037525190806*^9}, {3.7910381895965595`*^9, 3.791038212378439*^9}, {
  3.7923418305806684`*^9, 3.792341831425666*^9}, {3.792572088568693*^9, 
  3.79257218580122*^9}},ExpressionUUID->"0c16dd5a-fc17-4628-8a31-\
ed15c5588720"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"hex", ",", " ", "Face2Hex"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hex", "[", 
     RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "gives", " ", "points", " ", "of", " ", "a", " ", "hexagon", " ", 
    "centred", " ", "at", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "0", ",", "0"}], ")"}], " ", "with", " ", "radius", 
    " ", "r"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Face2Hex", "[", 
    RowBox[{"hex1_", ",", " ", "hex2_"}], "]"}], ":=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hex1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"hex1", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hex2", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hex2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "constructs", " ", "the", " ", "faces", " ", "between", " ", 
    "two", " ", "hexagons"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7923457641771355`*^9, 3.792345811944325*^9}, {
  3.79234586672379*^9, 3.792345870078816*^9}, {3.7923465068116517`*^9, 
  3.792346586587247*^9}, {3.7923466216962976`*^9, 3.792346784738189*^9}, {
  3.7923468477473116`*^9, 3.7923468502057633`*^9}, {3.792346988634435*^9, 
  3.792347081398291*^9}, {3.792347459804082*^9, 3.792347483802884*^9}, {
  3.7923475483751187`*^9, 3.792347581990219*^9}, {3.792347812389353*^9, 
  3.7923478605684743`*^9}, {3.792347944470002*^9, 3.7923479491634808`*^9}, {
  3.792348106267502*^9, 3.7923481205842056`*^9}, {3.792348390126173*^9, 
  3.792348413944459*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ff1bc6b9-bfbe-4714-b168-988c5766f764"],

Cell["\<\
We then draw six such hexagons and use Face2Hex for consecutive pairs two \
create the first ring.
Let us also define some rotation matrices. We can try to create the second \
ring using rotation matrices, as shown below:\
\>", "Text",
 CellChangeTimes->{{3.7925722063385925`*^9, 3.792572237799497*^9}, {
  3.7925722839734173`*^9, 
  3.792572313774187*^9}},ExpressionUUID->"f5d0e29d-7168-4632-ab8f-\
74cf715d4c7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Rot", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rot1", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"065a9d15-c153-448f-bd48-c97918527503"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "0.5", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", "Blue", "]"}], ",", 
      RowBox[{"Opacity", "[", ".2", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "4"], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "4"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "4"], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "4"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", "LightPink", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}], "+", "1"}], ",",
             "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Rot1", "[", 
            FractionBox[
             RowBox[{"2", "\[Pi]"}], "6"], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}], "+", "1"}], 
             ",", "0"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Polygon", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rot1", "[", 
           RowBox[{"-", 
            FractionBox["\[Pi]", "6"]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}], "+", "1"}], ",",
             "0"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}], "]"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Polygon", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rot1", "[", 
           RowBox[{"-", 
            FractionBox["\[Pi]", 
             RowBox[{"2", "*", "6"}]]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}]}], ",", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Sin", "[", 
               FractionBox[
                RowBox[{"2", "\[Pi]", " ", "k"}], "6"], "]"}]}], "+", 
             FractionBox["3", "2"]}], ",", 
            FractionBox[
             RowBox[{"-", "2"}], "5"]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}], "]"}], "*)"}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.792347188099862*^9, 3.7923472046107264`*^9}, {
   3.792347243607376*^9, 3.7923472459671016`*^9}, {3.792347347424699*^9, 
   3.79234736939589*^9}, {3.792347411725658*^9, 3.7923474185633664`*^9}, {
   3.79234752357446*^9, 3.792347536450018*^9}, {3.7923477184721055`*^9, 
   3.7923477215518675`*^9}, {3.7923478753957767`*^9, 
   3.7923479126172085`*^9}, {3.792347994427397*^9, 3.792347996279441*^9}, {
   3.7923480378076353`*^9, 3.7923480869790645`*^9}, {3.7923481334398165`*^9, 
   3.792348260314391*^9}, {3.7923483233368034`*^9, 3.792348328375326*^9}, {
   3.7923488364688272`*^9, 3.79234883973507*^9}, {3.792348883397099*^9, 
   3.7923489637654552`*^9}, {3.7923490395753303`*^9, 
   3.7923492305564504`*^9}, {3.792424744334057*^9, 3.7924248813376026`*^9}, {
   3.7924250014712105`*^9, 3.792425025479987*^9}, {3.7924250571114*^9, 
   3.79242513073044*^9}, {3.7924251738111987`*^9, 3.792425176369387*^9}, {
   3.7924252536506624`*^9, 3.7924253301619587`*^9}, {3.792425369635398*^9, 
   3.7924253756413317`*^9}, {3.7924254348309975`*^9, 
   3.7924254659427767`*^9}, {3.792425508366288*^9, 3.792425596353921*^9}, 
   3.7925722544495945`*^9, {3.792572388626692*^9, 
   3.792572388779522*^9}},ExpressionUUID->"56883acd-e019-476e-8615-\
1dd35cb1a9ac"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.2], EdgeForm[{RGBColor[0, 0, 0], AbsoluteThickness[0.5]}], 
    FaceForm[RGBColor[
    0, 0, 1]], {
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[1, 2], 0}, {
        Rational[1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, 1, 0}}, {{
        0.25, 0.5, 0}, {0.25, 0.25, 0.4330127018922193}, {
        1, 0.5, 0.8660254037844386}, {1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0.25, 0.25, 
        0.4330127018922193}, {0.25, -0.25, 0.4330127018922193}, {
        1, -0.5, 0.8660254037844386}, {1, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[1, 4], Rational[-1, 2], 0}, {1, -1, 
        0}, {1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
        0.25, -0.25, 0.4330127018922193}, {0.25, -0.5, 0}, {1, -1, 0}, {
        1, -0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[-1, 2], 0}, {
        Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, -1, 0}}, {{
        0.25, -0.5, 0}, {0.25, -0.25, -0.4330127018922193}, {
        1, -0.5, -0.8660254037844386}, {1, -1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{
        0.25, -0.25, -0.4330127018922193}, {0.25, 
        0.25, -0.4330127018922193}, {1, 0.5, -0.8660254037844386}, {
        1, -0.5, -0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[1, 4], Rational[1, 2], 0}, {1, 1, 0}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{0.25, 
        0.25, -0.4330127018922193}, {0.25, 0.5, 0}, {1, 1, 0}, {
        1, 0.5, -0.8660254037844386}}]]}, {
     Polygon3DBox[
      NCache[{{1, 1, 0}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 2], 0}}, {{1, 1, 0}, {
        1, 0.5, 0.8660254037844386}, {0.5, 0.75, 1.299038105676658}, {
        0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, 0.8660254037844386}, {1, -0.5, 0.8660254037844386}, {
        0.5, -0.75, 1.299038105676658}, {0.5, 0.75, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, -1, 
        0}, {Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, -0.5, 0.8660254037844386}, {1, -1, 0}, {0.5, -1.5, 0}, {0.5, -0.75,
         1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, -1, 0}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 2], 0}}, {{1, -1, 0}, {
        1, -0.5, -0.8660254037844386}, {0.5, -0.75, -1.299038105676658}, {
        0.5, -1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{1, -0.5, -0.8660254037844386}, {
        1, 0.5, -0.8660254037844386}, {0.5, 0.75, -1.299038105676658}, {
        0.5, -0.75, -1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, 1, 
        0}, {Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, -0.8660254037844386}, {1, 1, 0}, {0.5, 1.5, 0}, {0.5, 
        0.75, -1.299038105676658}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 2], 0}}, {{0.5, 1.5, 0}, {0.5, 0.75, 
        1.299038105676658}, {-0.5, 0.75, 
        1.299038105676658}, {-0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
       0.5, 0.75, 1.299038105676658}, {0.5, -0.75, 
       1.299038105676658}, {-0.5, -0.75, 1.299038105676658}, {-0.5, 0.75, 
       1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}}, {{0.5, -0.75, 1.299038105676658}, {
        0.5, -1.5, 0}, {-0.5, -1.5, 0}, {-0.5, -0.75, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 2], 0}}, {{0.5, -1.5, 0}, {
        0.5, -0.75, -1.299038105676658}, {-0.5, -0.75, -1.299038105676658}, \
{-0.5, -1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{0.5, -0.75, -1.299038105676658}, {0.5, 
       0.75, -1.299038105676658}, {-0.5, 
       0.75, -1.299038105676658}, {-0.5, -0.75, -1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {Rational[1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{0.5, 0.75, -1.299038105676658}, {
        0.5, 1.5, 0}, {-0.5, 1.5, 0}, {-0.5, 0.75, -1.299038105676658}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, 1, 0}}, {{-0.5, 1.5, 0}, {-0.5, 0.75, 
        1.299038105676658}, {-1, 0.5, 0.8660254037844386}, {-1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, 0.75, 1.299038105676658}, {-0.5, -0.75, 
        1.299038105676658}, {-1, -0.5, 0.8660254037844386}, {-1, 0.5, 
         0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {Rational[-1, 2], Rational[-3, 2], 0}, {-1, -1, 
        0}, {-1, Rational[-1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, -0.75, 
        1.299038105676658}, {-0.5, -1.5, 0}, {-1, -1, 
        0}, {-1, -0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-1, -1, 
        0}}, {{-0.5, -1.5, 
         0}, {-0.5, -0.75, -1.299038105676658}, {-1, -0.5, \
-0.8660254037844386}, {-1, -1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}}, {{-0.5, -0.75, -1.299038105676658}, {-0.5, 
        0.75, -1.299038105676658}, {-1, 
         0.5, -0.8660254037844386}, {-1, -0.5, -0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {Rational[-1, 2], Rational[3, 2], 0}, {-1, 1, 
        0}, {-1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{-0.5, 
        0.75, -1.299038105676658}, {-0.5, 1.5, 0}, {-1, 1, 
        0}, {-1, 0.5, -0.8660254037844386}}]]}, {
     Polygon3DBox[
      NCache[{{-1, 1, 
        0}, {-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 2], 0}}, {{-1, 1, 
        0}, {-1, 0.5, 0.8660254037844386}, {-0.25, 0.25, 
        0.4330127018922193}, {-0.25, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, 
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, 0.8660254037844386}, {-1, -0.5, 
         0.8660254037844386}, {-0.25, -0.25, 0.4330127018922193}, {-0.25, 
        0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, -1,
         0}, {Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, -0.5, 0.8660254037844386}, {-1, -1, 
        0}, {-0.25, -0.5, 0}, {-0.25, -0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, -1, 
        0}, {-1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 2], 0}}, {{-1, -1, 
        0}, {-1, -0.5, -0.8660254037844386}, {-0.25, -0.25, \
-0.4330127018922193}, {-0.25, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-1, 
         Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1, -0.5, -0.8660254037844386}, {-1, 
         0.5, -0.8660254037844386}, {-0.25, 
        0.25, -0.4330127018922193}, {-0.25, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-1, 1, 
        0}, {Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, -0.8660254037844386}, {-1, 1, 
        0}, {-0.25, 0.5, 0}, {-0.25, 0.25, -0.4330127018922193}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 2], 0}}, {{-0.25, 0.5, 0}, {-0.25, 0.25, 
        0.4330127018922193}, {0.25, 0.25, 0.4330127018922193}, {
        0.25, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.25, 0.25, 
       0.4330127018922193}, {-0.25, -0.25, 0.4330127018922193}, {0.25, -0.25, 
       0.4330127018922193}, {0.25, 0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[1, 4], Rational[-1, 2], 0}, {
        Rational[1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.25, -0.25, 
        0.4330127018922193}, {-0.25, -0.5, 0}, {0.25, -0.5, 0}, {0.25, -0.25, 
        0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 2], 0}}, {{-0.25, -0.5, 
         0}, {-0.25, -0.25, -0.4330127018922193}, {
        0.25, -0.25, -0.4330127018922193}, {0.25, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.25, -0.25, -0.4330127018922193}, {-0.25, 
       0.25, -0.4330127018922193}, {0.25, 0.25, -0.4330127018922193}, {
       0.25, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[1, 4], Rational[1, 2], 0}, {
        Rational[1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.25, 
        0.25, -0.4330127018922193}, {-0.25, 0.5, 0}, {0.25, 0.5, 0}, {0.25, 
        0.25, -0.4330127018922193}}]]}}, 
   {EdgeForm[{RGBColor[0, 0, 0], AbsoluteThickness[2]}], FaceForm[RGBColor[
    1, 0.925, 0.925]], 
    Polygon3DBox[
     NCache[{{1, 1, 0}, {
       Rational[1, 2], 1 + Rational[1, 2] 3^Rational[1, 2], 0}, {
       Rational[1, 2], 
        Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2]), (Rational[1, 2] 
         3^Rational[1, 2]) (1 + Rational[1, 2] 3^Rational[1, 2])}, {
       1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{1, 1, 0}, {
       0.5, 1.8660254037844386`, 0}, {0.5, 0.9330127018922193, 
       1.6160254037844386`}, {1, 0.5, 0.8660254037844386}}]], 
    Polygon3DBox[
     NCache[{{Rational[1, 2], 1 + Rational[1, 2] 3^Rational[1, 2], 0}, {
       Rational[-1, 2], 1 + Rational[1, 2] 3^Rational[1, 2], 0}, {
       Rational[-1, 2], 
        Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2]), (Rational[1, 2] 
         3^Rational[1, 2]) (1 + Rational[1, 2] 3^Rational[1, 2])}, {
       Rational[1, 2], 
        Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2]), (Rational[1, 2] 
         3^Rational[1, 2]) (1 + Rational[1, 2] 3^Rational[1, 2])}}, {{
       0.5, 1.8660254037844386`, 0}, {-0.5, 1.8660254037844386`, 0}, {-0.5, 
       0.9330127018922193, 1.6160254037844386`}, {0.5, 0.9330127018922193, 
       1.6160254037844386`}}]], 
    Polygon3DBox[
     NCache[{{Rational[-1, 2], 1 + Rational[1, 2] 3^Rational[1, 2], 0}, {-1, 
       1, 0}, {-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[-1, 2], 
        Rational[1, 2] (1 + Rational[1, 2] 3^Rational[1, 2]), (Rational[1, 2] 
         3^Rational[1, 2]) (1 + Rational[1, 2] 3^Rational[1, 2])}}, {{-0.5, 
        1.8660254037844386`, 0}, {-1, 1, 
       0}, {-1, 0.5, 0.8660254037844386}, {-0.5, 0.9330127018922193, 
       1.6160254037844386`}}]], 
    Polygon3DBox[
     NCache[{{-1, 1, 0}, {
       Rational[-1, 2], 1 + Rational[-1, 2] 3^Rational[1, 2], 0}, {
       Rational[-1, 2], 
        Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), (
         Rational[1, 2] 3^Rational[1, 2]) (1 + 
         Rational[-1, 2] 3^Rational[1, 2])}, {-1, Rational[1, 2], 
        Rational[1, 2] 3^Rational[1, 2]}}, {{-1, 1, 
       0}, {-0.5, 0.1339745962155614, 0}, {-0.5, 0.0669872981077807, 
       0.11602540378443868`}, {-1, 0.5, 0.8660254037844386}}]], 
    Polygon3DBox[
     NCache[{{Rational[-1, 2], 1 + Rational[-1, 2] 3^Rational[1, 2], 0}, {
       Rational[1, 2], 1 + Rational[-1, 2] 3^Rational[1, 2], 0}, {
       Rational[1, 2], 
        Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), (
         Rational[1, 2] 3^Rational[1, 2]) (1 + 
         Rational[-1, 2] 3^Rational[1, 2])}, {
       Rational[-1, 2], 
        Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), (
         Rational[1, 2] 3^Rational[1, 2]) (1 + 
         Rational[-1, 2] 3^Rational[1, 2])}}, {{-0.5, 0.1339745962155614, 
        0}, {0.5, 0.1339745962155614, 0}, {0.5, 0.0669872981077807, 
       0.11602540378443868`}, {-0.5, 0.0669872981077807, 
       0.11602540378443868`}}]], 
    Polygon3DBox[
     NCache[{{Rational[1, 2], 1 + Rational[-1, 2] 3^Rational[1, 2], 0}, {1, 1,
        0}, {1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[1, 2], 
        Rational[1, 2] (1 + Rational[-1, 2] 3^Rational[1, 2]), (
         Rational[1, 2] 3^Rational[1, 2]) (1 + 
         Rational[-1, 2] 3^Rational[1, 2])}}, {{0.5, 0.1339745962155614, 0}, {
       1, 1, 0}, {1, 0.5, 0.8660254037844386}, {0.5, 0.0669872981077807, 
       0.11602540378443868`}}]]}},
  ImageSize->{415.78412243769037`, 420.618600387605},
  ImageSizeRaw->Automatic,
  ViewPoint->{-3.0890947587818967`, 0.4067241558484658, -1.3198746274989805`},
  
  ViewVertical->{-0.7271328227266878, 
   0.4781765397292202, -0.4925698478044599}]], "Output",
 CellChangeTimes->{
  3.792347913224619*^9, 3.792348092519289*^9, 3.792348137231671*^9, 
   3.7923482629693203`*^9, {3.792348324061864*^9, 3.792348328794237*^9}, {
   3.7923490736851044`*^9, 3.7923491016149397`*^9}, {3.792349146161296*^9, 
   3.792349231071987*^9}, 3.7924199849155855`*^9, {3.7924247465042815`*^9, 
   3.7924247921661353`*^9}, {3.7924248625997267`*^9, 
   3.7924248817105727`*^9}, {3.7924250025154495`*^9, 3.792425025839059*^9}, {
   3.79242506449266*^9, 3.792425097141327*^9}, 3.792425131828539*^9, 
   3.792425176897974*^9, {3.7924252718789034`*^9, 3.7924253305010834`*^9}, {
   3.7924253699655147`*^9, 3.792425376184846*^9}, {3.792425440436005*^9, 
   3.7924254663656464`*^9}, 3.792425517362224*^9, {3.792425568175306*^9, 
   3.792425597152753*^9}, {3.7925722629633017`*^9, 3.792572274480693*^9}, 
   3.792572318231522*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"a1ad8f31-8693-45c6-ad1b-5c67c62af159"]
}, Open  ]],

Cell[TextData[{
 "However, this will keep a gap between the two rings. If we want the two \
rings to be in contact with each other, we need to make sure that the joints \
of the second ring are in contact with sides of the blue ring.\n\nWe encode \
in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["HexJoints", "j"], TraditionalForm]],ExpressionUUID->
  "dedba633-9fbb-4377-ad30-0acb5d212d70"],
 " the hexagons that correspond to the joints of the blue ring."
}], "Text",
 CellChangeTimes->{{3.7925723279993725`*^9, 3.7925723453708143`*^9}, {
  3.7925724239985957`*^9, 
  3.7925725120772963`*^9}},ExpressionUUID->"c14211af-75bc-476c-b5f6-\
47dd13f367b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "HexJoints", "]"}], ";", 
  RowBox[{"Clear", "[", "HexJoints", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["HexJoints", "j"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "4"], ",", 
          FractionBox["1", "2"]}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "4"], ",", 
          FractionBox["1", "2"]}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "4"], ",", 
          FractionBox["1", "2"]}], "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.792426163507778*^9, 3.792426354154791*^9}, {
  3.792426399059638*^9, 3.7924264274297476`*^9}, {3.7924265516045775`*^9, 
  3.7924265602813673`*^9}, {3.79242661147243*^9, 3.792426619232704*^9}, {
  3.7924267077419405`*^9, 3.7924267316988225`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bcf0ee86-055a-4a94-b90d-76a7f5429812"],

Cell["\<\
We can find three planes in which we would like to have the six joints of the \
second ring as follows:\
\>", "Text",
 CellChangeTimes->{{3.7924284243605595`*^9, 3.7924284261777296`*^9}, {
  3.7924291621060777`*^9, 3.7924292057723026`*^9}, {3.7924305850962915`*^9, 
  3.792430585482256*^9}},ExpressionUUID->"7eaa3407-966a-4ace-8030-\
3fe1f82a91b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plane1", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["HexJoints", "1"], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["HexJoints", "1"], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          SubscriptBox["HexJoints", "2"], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "\[Cross]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["HexJoints", "1"], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          SubscriptBox["HexJoints", "1"], "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ")"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plane2", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["HexJoints", "1"], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["HexJoints", "1"], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{
           SubscriptBox["HexJoints", "2"], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "\[Cross]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["HexJoints", "1"], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{
           SubscriptBox["HexJoints", "1"], "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}], ")"}]}], "]"}], 
    FractionBox[
     RowBox[{"-", "32"}], "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plane3", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["HexJoints", "1"], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "-", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["HexJoints", "1"], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "-", 
          RowBox[{
           SubscriptBox["HexJoints", "2"], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "\[Cross]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["HexJoints", "1"], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "-", 
          RowBox[{
           SubscriptBox["HexJoints", "1"], "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], ")"}]}], ")"}]}], "]"}], 
    FractionBox[
     RowBox[{"-", "32"}], "3"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.792426906622898*^9, 3.7924269291915584`*^9}, {
  3.7924270087018676`*^9, 3.7924270110844927`*^9}, {3.792427238935955*^9, 
  3.7924272803780975`*^9}, {3.792427345346337*^9, 3.7924273659641876`*^9}, {
  3.79242785720673*^9, 3.7924278592233105`*^9}, {3.7924284166133194`*^9, 
  3.7924284343887653`*^9}, {3.7924287338606777`*^9, 3.792428805554889*^9}, {
  3.792428944629861*^9, 3.792428963551215*^9}, {3.7924291114905076`*^9, 
  3.792429111732826*^9}, {3.7924293276941557`*^9, 3.7924293437441936`*^9}, {
  3.7924305720422077`*^9, 3.7924305723234577`*^9}, {3.792572566035021*^9, 
  3.7925725772069583`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1823f3f1-d564-42ee-8ee3-05eca448e6c0"],

Cell["\<\
Thus, we can simply pick some extra points in these planes to form new \
hexagons. Two points are already given by points of the blue ring, while  the \
other ones can be simply chosen using symmetry arguments, as shown below:\
\>", "Text",
 CellChangeTimes->{{3.792572595266222*^9, 
  3.7925726557670217`*^9}},ExpressionUUID->"354d3a55-fb7a-4024-8432-\
3af56ff413bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "0.5", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", "Blue", "]"}], ",", 
      RowBox[{"Opacity", "[", ".2", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "4"], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "4"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "4"], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "4"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"InfinitePlane", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["HexJoints", "1"], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         SubscriptBox["HexJoints", "2"], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["3", "2"], ",", 
          FractionBox["1", "4"], ",", 
          RowBox[{"3", 
           FractionBox[
            SqrtBox["3"], "4"]}]}], "}"}]}], "}"}], "]"}], "}"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7925734919419546`*^9, 3.7925735051669436`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b870ecb3-21c8-4461-8988-d0b6cc99cd08"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.2], EdgeForm[{RGBColor[0, 0, 0], AbsoluteThickness[0.5]}], 
    FaceForm[RGBColor[
    0, 0, 1]], {
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[1, 2], 0}, {
        Rational[1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, 1, 0}}, {{
        0.25, 0.5, 0}, {0.25, 0.25, 0.4330127018922193}, {
        1, 0.5, 0.8660254037844386}, {1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0.25, 0.25, 
        0.4330127018922193}, {0.25, -0.25, 0.4330127018922193}, {
        1, -0.5, 0.8660254037844386}, {1, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[1, 4], Rational[-1, 2], 0}, {1, -1, 
        0}, {1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
        0.25, -0.25, 0.4330127018922193}, {0.25, -0.5, 0}, {1, -1, 0}, {
        1, -0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[-1, 2], 0}, {
        Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, -1, 0}}, {{
        0.25, -0.5, 0}, {0.25, -0.25, -0.4330127018922193}, {
        1, -0.5, -0.8660254037844386}, {1, -1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{
        0.25, -0.25, -0.4330127018922193}, {0.25, 
        0.25, -0.4330127018922193}, {1, 0.5, -0.8660254037844386}, {
        1, -0.5, -0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[1, 4], Rational[1, 2], 0}, {1, 1, 0}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{0.25, 
        0.25, -0.4330127018922193}, {0.25, 0.5, 0}, {1, 1, 0}, {
        1, 0.5, -0.8660254037844386}}]]}, {
     Polygon3DBox[
      NCache[{{1, 1, 0}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 2], 0}}, {{1, 1, 0}, {
        1, 0.5, 0.8660254037844386}, {0.5, 0.75, 1.299038105676658}, {
        0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, 0.8660254037844386}, {1, -0.5, 0.8660254037844386}, {
        0.5, -0.75, 1.299038105676658}, {0.5, 0.75, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, -1, 
        0}, {Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, -0.5, 0.8660254037844386}, {1, -1, 0}, {0.5, -1.5, 0}, {0.5, -0.75,
         1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, -1, 0}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 2], 0}}, {{1, -1, 0}, {
        1, -0.5, -0.8660254037844386}, {0.5, -0.75, -1.299038105676658}, {
        0.5, -1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{1, -0.5, -0.8660254037844386}, {
        1, 0.5, -0.8660254037844386}, {0.5, 0.75, -1.299038105676658}, {
        0.5, -0.75, -1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, 1, 
        0}, {Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, -0.8660254037844386}, {1, 1, 0}, {0.5, 1.5, 0}, {0.5, 
        0.75, -1.299038105676658}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 2], 0}}, {{0.5, 1.5, 0}, {0.5, 0.75, 
        1.299038105676658}, {-0.5, 0.75, 
        1.299038105676658}, {-0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
       0.5, 0.75, 1.299038105676658}, {0.5, -0.75, 
       1.299038105676658}, {-0.5, -0.75, 1.299038105676658}, {-0.5, 0.75, 
       1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}}, {{0.5, -0.75, 1.299038105676658}, {
        0.5, -1.5, 0}, {-0.5, -1.5, 0}, {-0.5, -0.75, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 2], 0}}, {{0.5, -1.5, 0}, {
        0.5, -0.75, -1.299038105676658}, {-0.5, -0.75, -1.299038105676658}, \
{-0.5, -1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{0.5, -0.75, -1.299038105676658}, {0.5, 
       0.75, -1.299038105676658}, {-0.5, 
       0.75, -1.299038105676658}, {-0.5, -0.75, -1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {Rational[1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{0.5, 0.75, -1.299038105676658}, {
        0.5, 1.5, 0}, {-0.5, 1.5, 0}, {-0.5, 0.75, -1.299038105676658}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, 1, 0}}, {{-0.5, 1.5, 0}, {-0.5, 0.75, 
        1.299038105676658}, {-1, 0.5, 0.8660254037844386}, {-1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, 0.75, 1.299038105676658}, {-0.5, -0.75, 
        1.299038105676658}, {-1, -0.5, 0.8660254037844386}, {-1, 0.5, 
         0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {Rational[-1, 2], Rational[-3, 2], 0}, {-1, -1, 
        0}, {-1, Rational[-1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, -0.75, 
        1.299038105676658}, {-0.5, -1.5, 0}, {-1, -1, 
        0}, {-1, -0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-1, -1, 
        0}}, {{-0.5, -1.5, 
         0}, {-0.5, -0.75, -1.299038105676658}, {-1, -0.5, \
-0.8660254037844386}, {-1, -1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}}, {{-0.5, -0.75, -1.299038105676658}, {-0.5, 
        0.75, -1.299038105676658}, {-1, 
         0.5, -0.8660254037844386}, {-1, -0.5, -0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {Rational[-1, 2], Rational[3, 2], 0}, {-1, 1, 
        0}, {-1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{-0.5, 
        0.75, -1.299038105676658}, {-0.5, 1.5, 0}, {-1, 1, 
        0}, {-1, 0.5, -0.8660254037844386}}]]}, {
     Polygon3DBox[
      NCache[{{-1, 1, 
        0}, {-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 2], 0}}, {{-1, 1, 
        0}, {-1, 0.5, 0.8660254037844386}, {-0.25, 0.25, 
        0.4330127018922193}, {-0.25, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, 
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, 0.8660254037844386}, {-1, -0.5, 
         0.8660254037844386}, {-0.25, -0.25, 0.4330127018922193}, {-0.25, 
        0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, -1,
         0}, {Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, -0.5, 0.8660254037844386}, {-1, -1, 
        0}, {-0.25, -0.5, 0}, {-0.25, -0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, -1, 
        0}, {-1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 2], 0}}, {{-1, -1, 
        0}, {-1, -0.5, -0.8660254037844386}, {-0.25, -0.25, \
-0.4330127018922193}, {-0.25, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-1, 
         Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1, -0.5, -0.8660254037844386}, {-1, 
         0.5, -0.8660254037844386}, {-0.25, 
        0.25, -0.4330127018922193}, {-0.25, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-1, 1, 
        0}, {Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, -0.8660254037844386}, {-1, 1, 
        0}, {-0.25, 0.5, 0}, {-0.25, 0.25, -0.4330127018922193}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 2], 0}}, {{-0.25, 0.5, 0}, {-0.25, 0.25, 
        0.4330127018922193}, {0.25, 0.25, 0.4330127018922193}, {
        0.25, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.25, 0.25, 
       0.4330127018922193}, {-0.25, -0.25, 0.4330127018922193}, {0.25, -0.25, 
       0.4330127018922193}, {0.25, 0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[1, 4], Rational[-1, 2], 0}, {
        Rational[1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.25, -0.25, 
        0.4330127018922193}, {-0.25, -0.5, 0}, {0.25, -0.5, 0}, {0.25, -0.25, 
        0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 2], 0}}, {{-0.25, -0.5, 
         0}, {-0.25, -0.25, -0.4330127018922193}, {
        0.25, -0.25, -0.4330127018922193}, {0.25, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.25, -0.25, -0.4330127018922193}, {-0.25, 
       0.25, -0.4330127018922193}, {0.25, 0.25, -0.4330127018922193}, {
       0.25, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[1, 4], Rational[1, 2], 0}, {
        Rational[1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.25, 
        0.25, -0.4330127018922193}, {-0.25, 0.5, 0}, {0.25, 0.5, 0}, {0.25, 
        0.25, -0.4330127018922193}}]]}}, 
   TagBox[
    ConicHullRegion3DBox[
     NCache[{{1, 1, 0}, {
       1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
       Rational[3, 2], Rational[1, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{1,
        1, 0}, {1, 0.5, 0.8660254037844386}, {1.5, 0.25, 1.299038105676658}}]],
    "InfinitePlane"]},
  ImageSize->{362.44595410469674`, 354.42516285654807`},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.8314395693933054`, -0.425465787783216, 1.8033105191008743`},
  ViewVertical->{0.09591659554012463, -0.02841848359974654, 
   0.9949836161916854}]], "Output",
 CellChangeTimes->{
  3.7925726667682486`*^9, {3.792573500014722*^9, 3.7925735060541077`*^9}},
 CellLabel->"Out[12]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvQmQZld1Jvj419z3pXKrytr3NWtXScrKUmkDbaUFhK5KKkoS2neQkIRI
hNNsLYSwsFosbTV4GTCJl8ZiCYwA00O0MeGxYyLHbsf0aMKhHmyNpz3tYDzj
6Iice849995z3j3v5V8I486I91fln///lu875zvLve++K848euft95159K6z
Z6YvefjMg3fedfaR6YsfeNi+VX1LllUustvh6axm/7+cZfxlAl6yet/p06d/
7YMf/ODvPPnkk/Dvcx/96EezyoOf+cxnKrM/+tGPsuqev/mbv4EPwca+vga/
TntpwLf+y1133fXqe9/73j996KGH/rf77rsPfm8s33HHHVkV/gtvwZ+yChyq
gsdpwHFu/a3f+i04FBxoemRkBA4UjzPAj1OFb8GO3G/uFT4P34PvZ5Wr/+AP
/gBP330YLglOKqvAsStwInU4J/wfvpdV00vPqrAbf1JZRZ5STZwSfDucUr+D
Az4P34QN9gSXiJDiIerwlTxS2ZuC6v8Rp+T3jb+tjjx7lGAXcFrZmweqzoHy
p+Rg+gk7J9zBzgiOPxMFHH8i5wJOlYOTVZA0tIvM/+AZ/aVAydsr/nYEXzs0
lPz5cZR+biD9uPiULsHX7iK45p9//nl+Sv8MeH3H/X88+hnsFnaTXY+s4lfq
GlgZHqiCF1OFw8Op4Km9ScB+v/iczpbrQaMIrXMHKwrCr4vTgb+F03kwQEQA
p/i4iw/uWoln04D/wpuwcYRWBOhFcUbwGdghfD17+k0BVOcAwUfwKlvA6KPi
jOB44Yw+3gJGZXLZzc+JwwTeUaSYDqenxFnB58JZvfSmcOrQcPLnxc8pB9P9
4oTgAmB3CMFv/svBdEacFXwnnNXXymFSwopzMtgBnlYtSEFW18BaIQ+5Vj01
uKTse28SsJ8xDF8szgguI5zRn/78wDr3tOWwOC84BOwMv/K/4nu/+Ixluzgl
+G44pb/F9/4FMpYpcU5wTeGc/t8IU0nu8vOHqU+ckjcI+Lg75Qb+4Reft1TY
eVXcBeJJ+R+Wu/8LZTD/1f0zhq81nyh49PD81gaVyJplyGU/3zzmP4szg7f9
mWFshHd3l6vFzzuV+QtxRj5nEGd0rAVF/flmMz8SJ+XTBtjwBOHdy98UTD9L
QvOHK5/U21tAqkwpGkXBugys3xXnBR9Mzuv2NwXWz5DVfEGck09oYMM8Gd59
+E1i9bMlNp8WJ+YTB3Fi8+VgnVNu0yyDLNPSmw+LE/R5BGyoFvDus28SuXOP
R0+Ik/JJhDipz/78UDunJOfewlMLgfRL+LdfaJ5zizgrv0txVq+cM2BvMnhf
I87JX5I4px9EpH5Rqc5F/KyqsBOfELpE4s/xD7/QLOegO6VVDiifPgTTgndf
w7+96fQGPouHnFEPCWccDvl3wevTjMVDhnmy3BfvS6C/wbv/VR7HZ0bymz4X
0L7pa2Z4Hy5UftPHRt8a5t8EGLwBATzym36/vtmL3/y/8W91fyXwGdgDsiq/
Drj7U8p/HQ6G+NsfwB0bt/Lr/nzhX4QU3v17/FvTY4V2Y3/8mQL92b5kN/B1
OGJ+N+Jr9seDjJFA7oajhMbHduNRzOjHZ5JoAHI3PPqE3fwX/FuVQ+p76rBr
dBH42St25S/KnxnfFYeX7wqT6HRX8FFgC3aFZg7v/l/uawJq13EP6WXBruCj
/kL5rnw2hHDTrsRAAu1qFF/r/MghK+T7E1dUU46h7w9o8VRm0Ztjjw4JqMv3
lP15muEjngyxP8FCXZKMtiH35w8FH4H9Ie+4v/9ToaLp3uNekO0R+/OOD18L
dsT3J7BqRkyDwcn9eW/x+8N2Ct+f4KOpmIrcnz88/OIt0O3vDYk9umNbxDQM
qcj9eb0p3J/go01ioOyPm6Y3a7e/v1X4aHfvedARU7m/kD/Yn/A1vj+fmeN3
aX/CXuT+gk8U7U/w0eHeC/YNP7vF/nzq7vcXmxt/o/DRGY8R7CXdH/zJw5Ts
T/CB+8McRV6lZ5J7Lx/Xkix0xT0HK5Fn5T9auD8fd5AF2p+wEtofRgyXnvmr
44rAdymIoF2K2CN3yXeT7PL/cF/3doaZard7T9iK3KX/k0+5tV0KOroluMid
3CU/A7573OV/VrjpVSxml7pL+BpXQ75LTw/mXrTLoObpLj3M8EvRLgU9tMuQ
06S75DrDwwPu8nWFXdc7RCMK+Mpd+ouCX7iC4EBRZT6jPt7tkagQM/uUA6Y7
95fCEX6/++Ys7X0JfLC57ADNXOUNW1abD58LP6zvL0l2A+9VbmPidNDDXbDm
5/KUPBc3vG9gLKa6kGVHFrNsCrasAq81/HPdvtaW2Rfg96yyDKGnyv+WNQOA
bihX2hCdsUjaJIBcaHkQpJMm8PrsqW3OuuGka3iuDUCUnyD8Dh+EbzThSrbi
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
cRYqsbbvxKmoSu9HkIUbNvgFKfPmgv8DK8RQ3g==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"a8a83189-3a28-4573-bd1f-4181db769a0d"]
}, Open  ]],

Cell[TextData[{
 "We can then simply form hexagons in these planes. We already have 2 of \
them, which coincide with the hexagons of the blue ring. For the other 4 we \
choose (note that hex5 and hex6 are simply found from hex3 and hex4 by \
choosing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Rule]", " ", 
    RowBox[{"-", "x"}]}], TraditionalForm]],ExpressionUUID->
  "b14f1bdd-78d9-478b-a0f2-f0d18dc90960"],
 "."
}], "Text",
 CellChangeTimes->{{3.7924292293043528`*^9, 3.792429268056695*^9}, {
  3.7925729614136543`*^9, 
  3.792573003387781*^9}},ExpressionUUID->"63fd64d0-bf90-4aba-8dd0-\
43ff83a89311"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"hex3", ",", "hex4", ",", "hex5", ",", "hex6"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hex3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "2"], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       FractionBox["1", "4"], ",", 
       RowBox[{"3", 
        FractionBox[
         SqrtBox["3"], "4"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       FractionBox["1", "2"], ",", 
       FractionBox[
        SqrtBox["3"], "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "2"], ",", "1.2", ",", 
       RowBox[{
        RowBox[{"-", "0.2"}], 
        SqrtBox["3"]}]}], "}"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hex4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "2"], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", 
       FractionBox["6", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "2"], ",", "2", ",", 
       FractionBox["5", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       FractionBox["8", "3"], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["9", "4"], ",", 
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"4", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hex5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "2"], "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       FractionBox["7", "6"], ",", 
       FractionBox["6", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], ",", "2", ",", 
       FractionBox["5", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"-", "3"}], "2"], ",", 
       FractionBox["8", "3"], ",", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       FractionBox["9", "4"], ",", 
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"4", " ", 
         SqrtBox["3"]}]]}], "}"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hex6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "2"], "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], ",", 
       FractionBox["1", "4"], ",", 
       RowBox[{"3", 
        FractionBox[
         SqrtBox["3"], "4"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox[
        SqrtBox["3"], "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], ",", "1.2", ",", 
       RowBox[{
        RowBox[{"-", "0.2"}], 
        SqrtBox["3"]}]}], "}"}], ",", 
     RowBox[{
      SubscriptBox["HexJoints", "1"], "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7924292741842937`*^9, 3.7924293227842617`*^9}, 
   3.792429510569962*^9, {3.7924295416926765`*^9, 3.79242960765825*^9}, {
   3.7924296424631157`*^9, 3.792429667767425*^9}, 3.7924298635457144`*^9, {
   3.7924299000261593`*^9, 3.792429926234022*^9}, {3.7924299745577555`*^9, 
   3.792430028996163*^9}, {3.7924300612957497`*^9, 3.7924300707653985`*^9}, {
   3.79243010402246*^9, 3.792430141249851*^9}, 3.7924301725072703`*^9, {
   3.7924303948684173`*^9, 3.7924304315792165`*^9}, {3.7924316574830256`*^9, 
   3.7924316584324827`*^9}, {3.7924319489897814`*^9, 3.792431950255397*^9}, {
   3.7924321672589417`*^9, 3.79243223392059*^9}, {3.7924323020403976`*^9, 
   3.792432366767256*^9}, {3.792432434412301*^9, 3.792432451527485*^9}, {
   3.79243249708465*^9, 3.7924325148451414`*^9}, 3.7924325663862677`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"9e301d18-7486-4a2d-8196-0281b775bfa6"],

Cell["Thus, we obtain:", "Text",
 CellChangeTimes->{{3.792573024382041*^9, 
  3.7925730274849815`*^9}},ExpressionUUID->"6d458d29-377a-4df4-b4c1-\
447552b3fbc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", "Blue", "]"}], ",", 
      RowBox[{"Opacity", "[", ".3", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["2", "5"], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{"1", ",", "1"}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["3", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "2"], ",", 
          FractionBox["3", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], "4"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "5"]}], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["2", "5"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", "Pink", "]"}], ",", 
      RowBox[{"Opacity", "[", ".4", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "5"]}], ",", 
          FractionBox["1", "2"]}], "]"}], ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["2", "5"], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}], ",", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{
        RowBox[{"hex", "[", 
         RowBox[{
          FractionBox["2", "5"], ",", 
          FractionBox["1", "2"]}], "]"}], ",", "hex3"}], "]"}], ",", " ", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{"hex3", ",", "hex4"}], "]"}], ",", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{"hex4", ",", "hex5"}], "]"}], ",", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{"hex5", ",", "hex6"}], "]"}], ",", 
      RowBox[{"Face2Hex", "[", 
       RowBox[{"hex6", ",", 
        RowBox[{"hex", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "5"]}], ",", 
          FractionBox["1", "2"]}], "]"}]}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.792429952047969*^9, 3.792429960711794*^9}, {
  3.7924316674404154`*^9, 3.792431673484251*^9}, {3.7924324635523524`*^9, 
  3.7924324687135115`*^9}, {3.7924325211183667`*^9, 3.7924325388628883`*^9}, {
  3.7924326067881594`*^9, 3.7924326186235*^9}, {3.792432708412346*^9, 
  3.792432770000532*^9}, {3.792432855880827*^9, 3.7924328656108*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c81be662-4445-4c5b-841a-fa2ee7907fd0"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.3], EdgeForm[{RGBColor[0, 0, 0], AbsoluteThickness[1]}], 
    FaceForm[RGBColor[
    0, 0, 1]], {
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[1, 2], 0}, {
        Rational[2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, 1, 0}}, {{
        0.4, 0.5, 0}, {0.4, 0.25, 0.4330127018922193}, {
        1, 0.5, 0.8660254037844386}, {1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0.4, 0.25, 
        0.4330127018922193}, {0.4, -0.25, 0.4330127018922193}, {
        1, -0.5, 0.8660254037844386}, {1, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[2, 5], Rational[-1, 2], 0}, {1, -1, 
        0}, {1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
        0.4, -0.25, 0.4330127018922193}, {0.4, -0.5, 0}, {1, -1, 0}, {
        1, -0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[-1, 2], 0}, {
        Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, -1, 0}}, {{
        0.4, -0.5, 0}, {0.4, -0.25, -0.4330127018922193}, {
        1, -0.5, -0.8660254037844386}, {1, -1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{
        0.4, -0.25, -0.4330127018922193}, {0.4, 0.25, -0.4330127018922193}, {
        1, 0.5, -0.8660254037844386}, {1, -0.5, -0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[2, 5], Rational[1, 2], 0}, {1, 1, 0}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{0.4, 
        0.25, -0.4330127018922193}, {0.4, 0.5, 0}, {1, 1, 0}, {
        1, 0.5, -0.8660254037844386}}]]}, {
     Polygon3DBox[
      NCache[{{1, 1, 0}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 2], 0}}, {{1, 1, 0}, {
        1, 0.5, 0.8660254037844386}, {0.5, 0.75, 1.299038105676658}, {
        0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, 0.8660254037844386}, {1, -0.5, 0.8660254037844386}, {
        0.5, -0.75, 1.299038105676658}, {0.5, 0.75, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, -1, 
        0}, {Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, -0.5, 0.8660254037844386}, {1, -1, 0}, {0.5, -1.5, 0}, {0.5, -0.75,
         1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, -1, 0}, {
        1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 2], 0}}, {{1, -1, 0}, {
        1, -0.5, -0.8660254037844386}, {0.5, -0.75, -1.299038105676658}, {
        0.5, -1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{1, -0.5, -0.8660254037844386}, {
        1, 0.5, -0.8660254037844386}, {0.5, 0.75, -1.299038105676658}, {
        0.5, -0.75, -1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, 1, 
        0}, {Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, -0.8660254037844386}, {1, 1, 0}, {0.5, 1.5, 0}, {0.5, 
        0.75, -1.299038105676658}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 2], 0}}, {{0.5, 1.5, 0}, {0.5, 0.75, 
        1.299038105676658}, {-0.5, 0.75, 
        1.299038105676658}, {-0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
       0.5, 0.75, 1.299038105676658}, {0.5, -0.75, 
       1.299038105676658}, {-0.5, -0.75, 1.299038105676658}, {-0.5, 0.75, 
       1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}}, {{0.5, -0.75, 1.299038105676658}, {
        0.5, -1.5, 0}, {-0.5, -1.5, 0}, {-0.5, -0.75, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 2], 0}, {
        Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 2], 0}}, {{0.5, -1.5, 0}, {
        0.5, -0.75, -1.299038105676658}, {-0.5, -0.75, -1.299038105676658}, \
{-0.5, -1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{0.5, -0.75, -1.299038105676658}, {0.5, 
       0.75, -1.299038105676658}, {-0.5, 
       0.75, -1.299038105676658}, {-0.5, -0.75, -1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {Rational[1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}}, {{0.5, 0.75, -1.299038105676658}, {
        0.5, 1.5, 0}, {-0.5, 1.5, 0}, {-0.5, 0.75, -1.299038105676658}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, 1, 0}}, {{-0.5, 1.5, 0}, {-0.5, 0.75, 
        1.299038105676658}, {-1, 0.5, 0.8660254037844386}, {-1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, 0.75, 1.299038105676658}, {-0.5, -0.75, 
        1.299038105676658}, {-1, -0.5, 0.8660254037844386}, {-1, 0.5, 
         0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {Rational[-1, 2], Rational[-3, 2], 0}, {-1, -1, 
        0}, {-1, Rational[-1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, -0.75, 
        1.299038105676658}, {-0.5, -1.5, 0}, {-1, -1, 
        0}, {-1, -0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 2], 0}, {
        Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-1, -1, 
        0}}, {{-0.5, -1.5, 
         0}, {-0.5, -0.75, -1.299038105676658}, {-1, -0.5, \
-0.8660254037844386}, {-1, -1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[-3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}, {-1, Rational[-1, 2], Rational[-1, 2] 
         3^Rational[1, 2]}}, {{-0.5, -0.75, -1.299038105676658}, {-0.5, 
        0.75, -1.299038105676658}, {-1, 
         0.5, -0.8660254037844386}, {-1, -0.5, -0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[-3, 4] 
         3^Rational[1, 2]}, {Rational[-1, 2], Rational[3, 2], 0}, {-1, 1, 
        0}, {-1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{-0.5, 
        0.75, -1.299038105676658}, {-0.5, 1.5, 0}, {-1, 1, 
        0}, {-1, 0.5, -0.8660254037844386}}]]}, {
     Polygon3DBox[
      NCache[{{-1, 1, 
        0}, {-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 2], 0}}, {{-1, 1, 
        0}, {-1, 0.5, 0.8660254037844386}, {-0.25, 0.25, 
        0.4330127018922193}, {-0.25, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, 
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, 0.8660254037844386}, {-1, -0.5, 
         0.8660254037844386}, {-0.25, -0.25, 0.4330127018922193}, {-0.25, 
        0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, -1,
         0}, {Rational[-1, 4], Rational[-1, 2], 0}, {
        Rational[-1, 4], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, -0.5, 0.8660254037844386}, {-1, -1, 
        0}, {-0.25, -0.5, 0}, {-0.25, -0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, -1, 
        0}, {-1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 2], 0}}, {{-1, -1, 
        0}, {-1, -0.5, -0.8660254037844386}, {-0.25, -0.25, \
-0.4330127018922193}, {-0.25, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-1, 
         Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-1, 4], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1, -0.5, -0.8660254037844386}, {-1, 
         0.5, -0.8660254037844386}, {-0.25, 
        0.25, -0.4330127018922193}, {-0.25, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {-1, 1, 
        0}, {Rational[-1, 4], Rational[1, 2], 0}, {
        Rational[-1, 4], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, -0.8660254037844386}, {-1, 1, 
        0}, {-0.25, 0.5, 0}, {-0.25, 0.25, -0.4330127018922193}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[1, 2], 0}, {
        Rational[-2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 2], 0}}, {{-0.4, 0.5, 0}, {-0.4, 0.25, 
        0.4330127018922193}, {0.4, 0.25, 0.4330127018922193}, {
        0.4, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.4, 0.25, 0.4330127018922193}, {-0.4, -0.25, 
       0.4330127018922193}, {0.4, -0.25, 0.4330127018922193}, {0.4, 0.25, 
       0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[-2, 5], Rational[-1, 2], 0}, {
        Rational[2, 5], Rational[-1, 2], 0}, {
        Rational[2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.4, -0.25, 
        0.4330127018922193}, {-0.4, -0.5, 0}, {0.4, -0.5, 0}, {0.4, -0.25, 
        0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[-1, 2], 0}, {
        Rational[-2, 5], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 2], 0}}, {{-0.4, -0.5, 
         0}, {-0.4, -0.25, -0.4330127018922193}, {
        0.4, -0.25, -0.4330127018922193}, {0.4, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.4, -0.25, -0.4330127018922193}, {-0.4, 
       0.25, -0.4330127018922193}, {0.4, 0.25, -0.4330127018922193}, {
       0.4, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[-2, 5], Rational[1, 2], 0}, {
        Rational[2, 5], Rational[1, 2], 0}, {
        Rational[2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.4, 
        0.25, -0.4330127018922193}, {-0.4, 0.5, 0}, {0.4, 0.5, 0}, {0.4, 
        0.25, -0.4330127018922193}}]]}}, 
   {Opacity[0.4], EdgeForm[{RGBColor[0, 0, 0], AbsoluteThickness[1]}], 
    FaceForm[RGBColor[
    1, 0.5, 0.5]], {
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[1, 2], 0}, {
        Rational[-2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 2], 0}}, {{-0.4, 0.5, 0}, {-0.4, 0.25, 
        0.4330127018922193}, {0.4, 0.25, 0.4330127018922193}, {
        0.4, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.4, 0.25, 0.4330127018922193}, {-0.4, -0.25, 
       0.4330127018922193}, {0.4, -0.25, 0.4330127018922193}, {0.4, 0.25, 
       0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[-2, 5], Rational[-1, 2], 0}, {
        Rational[2, 5], Rational[-1, 2], 0}, {
        Rational[2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-0.4, -0.25, 
        0.4330127018922193}, {-0.4, -0.5, 0}, {0.4, -0.5, 0}, {0.4, -0.25, 
        0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[-1, 2], 0}, {
        Rational[-2, 5], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 2], 0}}, {{-0.4, -0.5, 
         0}, {-0.4, -0.25, -0.4330127018922193}, {
        0.4, -0.25, -0.4330127018922193}, {0.4, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.4, -0.25, -0.4330127018922193}, {-0.4, 
       0.25, -0.4330127018922193}, {0.4, 0.25, -0.4330127018922193}, {
       0.4, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[-2, 5], Rational[1, 2], 0}, {
        Rational[2, 5], Rational[1, 2], 0}, {
        Rational[2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-0.4, 
        0.25, -0.4330127018922193}, {-0.4, 0.5, 0}, {0.4, 0.5, 0}, {0.4, 
        0.25, -0.4330127018922193}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[1, 2], 0}, {
        Rational[2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {1, 1, 0}}, {{
        0.4, 0.5, 0}, {0.4, 0.25, 0.4330127018922193}, {
        1, 0.5, 0.8660254037844386}, {1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], Rational[1, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0.4, 0.25, 
        0.4330127018922193}, {0.4, -0.25, 0.4330127018922193}, {1.5, 0.25, 
        1.299038105676658}, {1, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}, {Rational[2, 5], Rational[-1, 2], 0}, {
        2, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[3, 2], Rational[1, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        0.4, -0.25, 0.4330127018922193}, {0.4, -0.5, 0}, {
        2, 0.5, 0.8660254037844386}, {1.5, 0.25, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[-1, 2], 0}, {
        Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        2, 1, 0}, {2, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{
        0.4, -0.5, 0}, {0.4, -0.25, -0.4330127018922193}, {2, 1, 0}, {
        2, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 1.2, -0.34641016151377546`}, {2, 1, 0}}, {{
        0.4, -0.25, -0.4330127018922193}, {0.4, 0.25, -0.4330127018922193}, {
        1.5, 1.2, -0.34641016151377546`}, {2, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {Rational[2, 5], Rational[1, 2], 0}, {1, 1, 0}, {
        Rational[3, 2], 1.2, -0.34641016151377546`}}, {{0.4, 
        0.25, -0.4330127018922193}, {0.4, 0.5, 0}, {1, 1, 0}, {1.5, 
        1.2, -0.34641016151377546`}}]]}, {
     Polygon3DBox[
      NCache[{{1, 1, 0}, {
        1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 2], 0}}, {{1, 1, 0}, {
        1, 0.5, 0.8660254037844386}, {0.5, 0.75, 1.299038105676658}, {
        0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[3, 2], Rational[1, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        1, Rational[7, 6], 3^Rational[1, 2]}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        1, 0.5, 0.8660254037844386}, {1.5, 0.25, 1.299038105676658}, {
        1, 1.1666666666666667`, 1.7320508075688772`}, {0.5, 0.75, 
        1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[3, 2], Rational[1, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        2, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}, {
        1, Rational[7, 6], 3^Rational[1, 2]}}, {{1.5, 0.25, 
        1.299038105676658}, {2, 0.5, 0.8660254037844386}, {
        1.5, 2, 1.4433756729740645`}, {
        1, 1.1666666666666667`, 1.7320508075688772`}}]], 
     Polygon3DBox[
      NCache[{{2, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {2, 1, 
        0}, {Rational[3, 2], Rational[8, 3], Rational[1, 2] 
         3^Rational[-1, 2]}, {
        Rational[3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}}, {{
        2, 0.5, 0.8660254037844386}, {2, 1, 0}, {1.5, 2.6666666666666665`, 
        0.2886751345948129}, {1.5, 2, 1.4433756729740645`}}]], 
     Polygon3DBox[
      NCache[{{2, 1, 0}, {Rational[3, 2], 1.2, -0.34641016151377546`}, {
        1, Rational[9, 4], Rational[-1, 4] 3^Rational[-1, 2]}, {
        Rational[3, 2], Rational[8, 3], Rational[1, 2] 3^Rational[-1, 2]}}, {{
        2, 1, 0}, {1.5, 1.2, -0.34641016151377546`}, {
        1, 2.25, -0.14433756729740646`}, {1.5, 2.6666666666666665`, 
        0.2886751345948129}}]], 
     Polygon3DBox[
      NCache[{{Rational[3, 2], 1.2, -0.34641016151377546`}, {1, 1, 0}, {
        Rational[1, 2], Rational[3, 2], 0}, {
        1, Rational[9, 4], Rational[-1, 4] 3^Rational[-1, 2]}}, {{1.5, 
        1.2, -0.34641016151377546`}, {1, 1, 0}, {0.5, 1.5, 0}, {
        1, 2.25, -0.14433756729740646`}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 2], 0}, {
        Rational[1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 2], 0}}, {{0.5, 1.5, 0}, {0.5, 0.75, 
        1.299038105676658}, {-0.5, 0.75, 
        1.299038105676658}, {-0.5, 1.5, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {
        1, Rational[7, 6], 3^Rational[1, 2]}, {-1, Rational[7, 6], 3^
         Rational[1, 2]}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 3^Rational[1, 2]}}, {{
        0.5, 0.75, 1.299038105676658}, {
        1, 1.1666666666666667`, 1.7320508075688772`}, {-1, 
         1.1666666666666667`, 1.7320508075688772`}, {-0.5, 0.75, 
        1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[7, 6], 3^Rational[1, 2]}, {
        Rational[3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}, {
        Rational[-3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}, {-1, Rational[
         7, 6], 3^Rational[1, 2]}}, {{
        1, 1.1666666666666667`, 1.7320508075688772`}, {
        1.5, 2, 1.4433756729740645`}, {-1.5, 2, 1.4433756729740645`}, {-1, 
         1.1666666666666667`, 1.7320508075688772`}}]], 
     Polygon3DBox[
      NCache[{{Rational[3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}, {
        Rational[3, 2], Rational[8, 3], Rational[1, 2] 3^Rational[-1, 2]}, {
        Rational[-3, 2], Rational[8, 3], Rational[1, 2] 3^Rational[-1, 2]}, {
        Rational[-3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}}, {{
        1.5, 2, 1.4433756729740645`}, {1.5, 2.6666666666666665`, 
        0.2886751345948129}, {-1.5, 2.6666666666666665`, 
        0.2886751345948129}, {-1.5, 2, 1.4433756729740645`}}]], 
     Polygon3DBox[
      NCache[{{Rational[3, 2], Rational[8, 3], Rational[1, 2] 
         3^Rational[-1, 2]}, {
        1, Rational[9, 4], Rational[-1, 4] 3^Rational[-1, 2]}, {-1, Rational[
         9, 4], Rational[-1, 4] 3^Rational[-1, 2]}, {
        Rational[-3, 2], Rational[8, 3], Rational[1, 2] 
         3^Rational[-1, 2]}}, {{1.5, 2.6666666666666665`, 
        0.2886751345948129}, {
        1, 2.25, -0.14433756729740646`}, {-1, 
         2.25, -0.14433756729740646`}, {-1.5, 2.6666666666666665`, 
        0.2886751345948129}}]], 
     Polygon3DBox[
      NCache[{{1, Rational[9, 4], Rational[-1, 4] 3^Rational[-1, 2]}, {
        Rational[1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 2], 0}, {-1, Rational[9, 4], 
         Rational[-1, 4] 3^Rational[-1, 2]}}, {{
        1, 2.25, -0.14433756729740646`}, {
        0.5, 1.5, 0}, {-0.5, 1.5, 0}, {-1, 2.25, -0.14433756729740646`}}]]}, {
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 2], 0}, {
        Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {-1, 1, 0}}, {{-0.5, 1.5, 0}, {-0.5, 0.75, 
        1.299038105676658}, {-1, 0.5, 0.8660254037844386}, {-1, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{Rational[-1, 2], Rational[3, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[7, 6], 3^Rational[1, 2]}, {
        Rational[-3, 2], Rational[1, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-1, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}}, {{-0.5, 0.75, 
        1.299038105676658}, {-1, 1.1666666666666667`, 
         1.7320508075688772`}, {-1.5, 0.25, 
        1.299038105676658}, {-1, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[7, 6], 3^Rational[1, 2]}, {
        Rational[-3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}, {-2, Rational[
         1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-3, 2], Rational[1, 4], Rational[3, 4] 
         3^Rational[1, 2]}}, {{-1, 1.1666666666666667`, 
         1.7320508075688772`}, {-1.5, 2, 1.4433756729740645`}, {-2, 0.5, 
         0.8660254037844386}, {-1.5, 0.25, 1.299038105676658}}]], 
     Polygon3DBox[
      NCache[{{Rational[-3, 2], 2, Rational[5, 2] 3^Rational[-1, 2]}, {
        Rational[-3, 2], Rational[8, 3], Rational[1, 2] 
         3^Rational[-1, 2]}, {-2, 1, 
        0}, {-2, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{-1.5, 2,
          1.4433756729740645`}, {-1.5, 2.6666666666666665`, 
        0.2886751345948129}, {-2, 1, 0}, {-2, 0.5, 0.8660254037844386}}]], 
     Polygon3DBox[
      NCache[{{Rational[-3, 2], Rational[8, 3], Rational[1, 2] 
         3^Rational[-1, 2]}, {-1, Rational[9, 4], Rational[-1, 4] 
         3^Rational[-1, 2]}, {
        Rational[-3, 2], 1.2, -0.34641016151377546`}, {-2, 1, 0}}, {{-1.5, 
        2.6666666666666665`, 
        0.2886751345948129}, {-1, 2.25, -0.14433756729740646`}, {-1.5, 
        1.2, -0.34641016151377546`}, {-2, 1, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[9, 4], Rational[-1, 4] 3^Rational[-1, 2]}, {
        Rational[-1, 2], Rational[3, 2], 0}, {-1, 1, 0}, {
        Rational[-3, 2], 1.2, -0.34641016151377546`}}, {{-1, 
         2.25, -0.14433756729740646`}, {-0.5, 1.5, 0}, {-1, 1, 0}, {-1.5, 
        1.2, -0.34641016151377546`}}]]}, {
     Polygon3DBox[
      NCache[{{-1, 1, 
        0}, {-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[1, 2], 0}}, {{-1, 1, 
        0}, {-1, 0.5, 0.8660254037844386}, {-0.4, 0.25, 
        0.4330127018922193}, {-0.4, 0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-1, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
        Rational[-3, 2], Rational[1, 4], Rational[3, 4] 3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[-1, 4], Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1, 0.5, 0.8660254037844386}, {-1.5, 0.25, 
        1.299038105676658}, {-0.4, -0.25, 0.4330127018922193}, {-0.4, 0.25, 
        0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-3, 2], Rational[1, 4], Rational[3, 4] 
         3^Rational[1, 2]}, {-2, Rational[1, 2], Rational[1, 2] 
         3^Rational[1, 2]}, {Rational[-2, 5], Rational[-1, 2], 0}, {
        Rational[-2, 5], Rational[-1, 4], Rational[1, 4] 
         3^Rational[1, 2]}}, {{-1.5, 0.25, 
        1.299038105676658}, {-2, 0.5, 0.8660254037844386}, {-0.4, -0.5, 
         0}, {-0.4, -0.25, 0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{-2, Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-2, 1, 
        0}, {Rational[-2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[-1, 2], 0}}, {{-2, 0.5, 
         0.8660254037844386}, {-2, 1, 
        0}, {-0.4, -0.25, -0.4330127018922193}, {-0.4, -0.5, 0}}]], 
     Polygon3DBox[
      NCache[{{-2, 1, 0}, {Rational[-3, 2], 1.2, -0.34641016151377546`}, {
        Rational[-2, 5], Rational[1, 4], Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[-2, 5], Rational[-1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-2, 1, 0}, {-1.5, 
        1.2, -0.34641016151377546`}, {-0.4, 
        0.25, -0.4330127018922193}, {-0.4, -0.25, -0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{Rational[-3, 2], 1.2, -0.34641016151377546`}, {-1, 1, 0}, {
        Rational[-2, 5], Rational[1, 2], 0}, {
        Rational[-2, 5], Rational[1, 4], Rational[-1, 4] 
         3^Rational[1, 2]}}, {{-1.5, 1.2, -0.34641016151377546`}, {-1, 1, 
        0}, {-0.4, 0.5, 0}, {-0.4, 0.25, -0.4330127018922193}}]]}}},
  ImageSize->{518.0658560337863, 532.0775212407391},
  ImageSizeRaw->Automatic,
  ViewPoint->{3.275002537744055, -0.7205573975759154, 0.45294085107067195`},
  ViewVertical->{0.29943257614019453`, -0.4512320946686189, 
   0.840672188838799}]], "Output",
 CellChangeTimes->{
  3.792430434823569*^9, 3.7924316747448473`*^9, 3.792431953965481*^9, {
   3.7924321813791375`*^9, 3.7924322365525494`*^9}, 3.7924323298590508`*^9, 
   3.792432368994296*^9, 3.79243246964203*^9, {3.792432540637147*^9, 
   3.792432570976179*^9}, {3.792432608377941*^9, 3.7924326191491284`*^9}, {
   3.792432733987931*^9, 3.792432770812394*^9}, {3.7924328571663656`*^9, 
   3.7924328660586085`*^9}, 3.7925730163786125`*^9},
 CellLabel->"Out[22]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXmYXUdx8H24+5193/d90azaV492a18sybYsW4vl3ZbkBRuMbSRsbIzB
CwaDjQGBDNgshoDZRLCHsMcgmJAEJ58jvXESMcRvRm8yeVGU8H7366rq7tN9
Tp0zdwbneb4/Xj3PvbpzZm7f21W/rqquru6zaf8d119zy/47brh6f9Pa2/Yf
uf6Gq29vWnP4NnEp+jbHiS4Vjx1NTky8zjhOyNOI4/zfq//36v+/r87Cn6OD
v/vd74quuuoq97fF3r/swZ9jR5555pnMtddeC4/HHn74YfxdifePu/DnJDT7
y1tvvVW94dwNN9wA/2/9xje+EfAxHfhzDnyZTx07dgz+GlqAd8DrfZ///Ofh
Y6ElaB3fU+RtpB1/zjO/K7wRLkKj8GZ8n/gQaPyVO++8E17jewu9jbVSx+HT
ztxyyy2q4xGSHL5PXDr6xBNPOBFXmvAZ8GcO32gz/hz3dhPe6USpFfjGcL2p
oqJCXYMeQcuuAAu8LTfZeoK/hpbi1AD0AD6Q/oiufeVd73oXXEcAsI18b6MN
vAwS1MDIq6++CpfgfyfuykV/GN9oHS8D7G+SWjG15chPg77DNeghNZTnbbmW
l0HKVhk2IK+B+hRT1Eaut9FqXgY51ICCEn+iRmPwQcAW9ErzleNttzJEDDmM
MOU1+L0Nma/lCl4MJC6bL+ptVP2py1fa22gZLwbiEPmCLjuuXrRoXL5S3kbJ
gMThq/hkIFvG0a4Gcr4rF/g7IDig5WJeBmQybL7kBwHFcA1HNLaR9DZKwzkG
UjJlUOx+K81XkStYaBSHCLaR8DZKfYpDP5UMQJIoA5IPUqpVJj8N+q4Ao4bi
3pbzbBnAVwYZlLkq0yZBNuqHy9co0RaDhkwZlFMDFlyl9jUXrpi30ZRfBtA/
bIVojkJf4QPxJ9kF0yNQQ1Fvy6TDmJIgtALfp9Ltr4aLuhBjvUPE226cFwMZ
C5sv2QHlHVy+fI1GXTFA96FRaAnFIFtWkKGGquiaH7K3eVumj4qh5zbEUMto
TX6Q3zuY7dk9hy7V09ssqozvDN/P9Qmylf8T0l/ZnvIxCI/8uioowIH2/xrt
/cHfS/jbRkYp5IRs+/9/jKb+k5qCj1C9hNdNthbwG9S73JhW/w9Ga//hdlTF
RbqjFBLYjoT8rj0czfbO00d6Q4gW99tpPTS5jGg5/pfR1P92O6rCNHjdxpDR
7JKh7fp/Gk1N+nsJ3xz/rt3FA36HPzW7X1dbc7O9f+N7SaGi7RhaXVp0jHDB
aOp/ub00I8Muhow2V2B6UP2H0dQENeXtZTdDRrtLhmmuzxut/U+SGRsQUuht
W/8OhgyzvTftjiq/N8sVvx6dnbaKkYzfG039zu2oaeL6GDJk5y17/L+Npn7L
9xLf20/vhaGj7Xu3KzjTFP+70eRZvqMDthoQjl4XGG2Azab+ke/okN0p/GkW
A8ek0dQbIR0dsr8aqk523jK2/2a09/d8L2czOuh3m9fG1mzqDN/LuS4ZOoCT
QrTs7L8aTf1dSC9le8puowI8kkQ8/pfR3ut8L+fT26zROeSSYRrbc0Zrf0t/
At/A7OgCW/zYqdk2GagSs6nXqKNmXKI7utDuFKpujouHHlITRnu/sTuqIrLF
rg706JzLkPEvRlN/RU15Y9ElDBnz3J5rO2s29Wt/L3X0tdT9atpuz3dVrI3t
/zTa+wu7lyrYWEZvs2IuKUTlhnE8vWk09StqyhtmjTBkLOTJ+GejtVP+jmo3
PMLgsdj9xhoPs71f0Ed6g8sVNgXYvEcvSMbvjKZe9XcUml3FkCFVosDD5seN
pn7m9tIXVa2yvwaOxGWu4Exj+1ujyZ/Sn3gDqzXUmmIUf7qIrlnG1mzqx3xH
19riRziWu3LUcJw1mvqh21FfVHWxLST8aYX9dXFI/ZPR3g/4Xq5zv5o2rCvt
a0iG2dT3qSlvVLXBFr+pEsvY/qPR1Cv+XsLH4Xs3unho473a7jmq+B+M9l6m
r+aNNja5etMKWOOSYQ6pN4zW/tTtqBlYbaHWrAG61iYDZWY2dZLvKKppi40H
Cmmdi4ceUn9vtPdtao8NrbbZQkJhrmfw+B9Ge9/iu3qJqwM9RNe7Xxeuo8U1
m/oGNeX1xTsYPKSKLWN7xmjq6yG93Ol+NW28pZ6tic9po72v2b1UvngXvc0y
3pt5PP7OaO2rfEcvY/DY4n6CxsNs6kW+oyiky2w80Ohss4WJeLxutPdlvqO7
6W2W8d7O0PL/GE19ke/lHoaM7a7MlC+G139rtPZCSEf3uDRo+y2psSyu2d7z
fEevcnWgjfdOt/Pa4v6N0dTn+I7utcWPcFxK16zR9JrR1HPUSzb1t8+WN/50
KYOH2d4Jvpf73a+mjffldM2yuL8xmvo0NeUNra62gcJvutv+pqiPvzaa+hT1
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
mXeLs7Ily3Taa0Wgvnwr6ZSgpDs4zchEjmZXJNGJ2kqZ2gJTqEKRM0NDn4NQ
JMVoakGIpqisKSYs4PVg/1SwHyNlQfShldUdoqxEkLJoVpAYe27nnUJLV3o1
VheqMWsPSzGTIVnKeLQVzDSbDmxj7kPoONWujfTtKQtfGzjOJ7mOe2Zr3ai4
hFIcztCEwiAQgSAkh1HYogCFzSteK91UwjR9oBcYVvA6wiiuPURxqcBRhjM5
9GRCd+Jj4TnO6dCp5pVIoWX85Fcuv2L8vpFV6leozBImZ7KYcXgrmak33Y3a
nhnQ/QTUpvH/ZsPZgxqFE2HWTFZW3qYikzxGk0vwOflSXXrf5EjZUGZ7ba8w
hq1Wpj9G6lEa1MX08LtW+bvL6vozxrcfX1Xe5OSA6iKgtWJS2Pjy6jatsFiI
wiqZpCRNt2OorQ+sXZfZPTAXfhcZv3bOYrWxU7g00BHqqZBJnixkXN9qZpIg
NWgtj9O6Ad3Jzb/NzLCjajRmaUdHPdO6XlKesJsvKwVCZMItHiymxQNhG98r
Bt0qeAjb2C+HWObSus7xI+0LSEMhOmx0dThZk8q3dJhHww+UOLmtutEcfpY2
EyHa5Da1lMvlVKXNo8tXKo2iQk/8zS23iaH5BXfEgg3FWLTQzrGArYXX3HH5
Ibq1Fs6lbstmamrjXlPrHaKmvTWGaFwY2F8IQ/tlMUS/qAwwuz+GLG5KTN92
KlWLiUCttLDV43sbhiZvap0LGyUGcaPEAm1dw4ZvbYjqC1zVj1/T0h+o+lSI
6osDF/mSlupvX7xMqX/s/pXrnDjpH1779F9gJ21wLjKfUf4aRvl05qy9/E4L
SE4pKdi7ZS1gJSIgwRYwfSRtJ8U4fv21wcGToG0Y3yI+GtdalwNcvF6jNI+W
Q1hnGOBK82JaMV/41iqleQc2WawXKryzcyUQAADAAxBQNfus6itDVF+Upepz
QlRfEFhEEbdULx7njy1fpTfniyEPykcAEvgcMzEA71vA5H/mMqZ9rc4d0M3a
7QX8XtJ7sd+gAxZvuUEXcdWfg+LFVPPrz7e3/0UkMEluM7DAb+Rfv6Rmjjtb
gZG+HiGIzRCF0hAUSqZGYXxdxxzhKIJRyLVRgKjZoZq1tBeFiWc3bZk4RsEY
OALAwclxvQFcswK1fCaPxN3V52JmxkSne/sKBWhN0il0vYFvV13o6jJ6g5kE
bGAfxKwWMhJfFAHb92NZIiJrP0znIOKALg6R5AwRKQxBpCwYEUgBa0QKeETE
1d1OillgKQ5G5PT3rrjy/HVzFipMhLXxIaIdRi6TvJrNOAwOEWk4rKSj5KPA
7zCAlT/aYYDNkOEBOAgMBKXdEBPoNxxu8xBHxVzXeSgqMGwwnUf+DHHIDcGh
gsFBTgAUCghCoR8HeCAOcQaHIt55AA5OBIBwohYSxSExhFz4gXyYzosNMUis
Y5CgOyzY1Qzd9Cu6sa5vP+A0fUnIXN3jSyB0hBAymSUSlMpMvrC09AbTlygk
hGo7cXPJTJBIhiBRlSUSxQFIHFu5Xh2EBq81EoVTIhE7+8lNW/WkX1iHMn9I
ARrPYdJtA4wbWc8kbw4RENZskYoj5L0x+J2E/z2TfvAhYCqUD0lnicZsvw8J
CjOK8TnhJUS8ni2uLQmbakZDIKm2Mz0AilPCQFKKz0mE5Mb5S91owACjIASM
KA9GJYHhDTBSTFZvQOdhNzDpH4mDVXkhcUiTyr37XsIX8UenFWaCzpW7ABa4
DU6c/odogunzFsYkEyCoyEb3CZ/uV5Y1gb7VBhWhblA2Ktyj9tfv6buIVXsZ
2YbXP7DugNKPVnd+iLpjjGuoCQkok0zmr49xDRuZ6aVUvVW/QdU2dE9w/ybF
LFzD8ezSuFL/4A5UDAluIi9L/Q/6XYMvWqjJeuDj4b8K56JYzKln0rglOv9O
Qzo6fseSLZP7hpfRTJCeYbKgD2tLh+g5zui5PiQqTDD5wV4mw7uJ0TPdskpP
JzHD20G/ir8lFl+Fh5zFV0kFlUOCUa6CRPgfg0RukxSn9n7K5JsZBmX6Hc72
14YjEOEz+ZMr4H72uBqNCAQNfhcLT3a/kAGEEgbx00cWbzh9z4pLMneObNSz
y6lBsew/RANNIeFijE85cnfj3hyIi2+eSSVd8q5E/IbIt9IzmAkIsBKFUyNy
HFbv+1xETMsAM0wWkQY+gJycW1wja/ASanVHcfD6u7sWTG6vqucQqQxGxMpF
5QUikgJETr137VUvf3LnbfA4d+8qC5dkCC0JPlpo5TNTMWaq2a2jhS3MhiC6
v6A9wZRgRGyXYddphhVGxL0uI8iUTJWAKJ4aEYRjFjkP04L4nEcbWQ6BQZ32
DI05+ZMHmma9/vjAyjiqOa5IAFVjFCjUnjUCaUIAQgTAwEAgaiLgROn51Ie2
XAsYTDwutIJ/Fw8BIUkgeJNT7SGhRNTNU+pZZicTSmxhthzdSlxYVTNt8ne+
cvmHeMcykyQ1n3Pg9o9xIPS4UaTXnZgwtBILwk00GW6iePy6ltmT9/cujmTu
7Z4nPMD9vQsBDdR+LISP8iz5SATzce7K4SXACJKRgOcIoCHA+cplV58/OHsx
/VkIHykm/ujm4UCfEmESl+3MWWBbmRQE3fFVl+ZgSrJV/i7KOJCZ1HeMeqqo
AlIPZVmS0c17kcBAo4m8iBcR4TXgVqUfG94mgpDHB9YDLkALPBQvYaakNEtU
olmiksLn9OmH1l2hTAkQM/Gui9ZiKQ8ciyFpEe8XrDhRlb9EXgz3YpIzC8FJ
ceufAIryLW1MALItkBdfaVCLiQwGsfAv9Kh3dC1vRV6iIktuuvwLn9y8tDkE
l6SLy/jDfcung0uxLmEopcouc80Da4ZkuMGxkYvPSeDi/P2rtwEXJhuBTCT5
kGMAmUh6A1Qrh9nKeBcOiNtJ71a9kUWDTmTdn7VrCbAdo8G5CW57HccA7emJ
mrYDy4xWCR9hhhhhEOQhBHEOACeMgEKmAKLEXtyAe9Co6aoVZ+TZxuHsp7Zf
CQCcfWHnvvN3LsHKMe0+cnilD9M6qOk93rx3xWo1Y21m9L2dOY+F7rVulyQ1
K32bkQQI3HlLc9XehER1lkpvp4HvTUiAwzCqkzrD/ETRDHWeH7iglYSfgQP8
e6l7pXOniOJKNeAnTmy/UgzwpzddKq7dvnglaAi1nMOECnP5UOFf710JN+32
m/kdzDxTatlKRDfJ3+l1KmXr3/2WmHlvMsKMHnUygtvDx6m8jWIEr60PnGnW
h+i+bIa6z2V0ny/H+z19F8E1nKTKqerpfU14OvDplW2DTjHpX433zOPrd0j9
xy58ZusVF+5ZhoYfphBpBoEFLgIT18zFA9PhKBeMFusZBHYGI6Cqm3BIKwTi
quzFMvD3hBr40RmlGGC8w7gP3ghoK74lSwPfKFMLl9XNzRjfFxVeNUOFpxmF
5wQqPHFuc1UdKP3lR+aug4dSPo39uND9ftT9u1duAc2D3kUnXty1jzwE6N4b
+Jn2fjExMH5s7UZfFqqWMfYcA28nBqwip0bFgLqRDBgJTcjdUxv942wWOu41
+sdDsgkNWdLQHGD5PZVPDS4MkzWpQvUtxleVtzl1M4QhycCQkpGfBEE9FAhx
oIA0ABwgBvkWDDvFYzNAceGZTZc7cQYGJiUJMCxBGKIv/PWh28a/ffOR3x9d
t1lNQiC/oEtdK5m09S4m13QngWHt6GiQv0vAk9oVZ8YJ7/D7idEpktYBCQaz
stVILnD7GDksGl0joTyENBIxDArcs5wW1Ieg0TRDNOIMGnEXDR0UGGikAA1M
eVIkmDCAgAcmIf9w/6qtCYaJGJ9vWkaJxxd/ffj2C1+76dBvXj50q1EBbWFR
xviMS5lUE2HhS0/Xy1/jypUyJsCM+UfS2Lx1GWpVDQvuozlLMhoC3UdsfGVp
uzlPrAsho22GZEQZMiIyp2CQYYYMp+7oWYB2I03W41xtTgF8D5owUGbBhOXC
fSsvn3z44ivF/9sAmt9/assVHDRRJqxYTi7l1R8dui3z1ZsOjf7s8G0qynS4
wvkSna++jJk53kU2xLobo0WKCj1gTmnNL5EUPLQBT50uBisCD3l7bcuUTCOz
EPdmFiAEdbgNmxw69YSOGXKykUcYN11TchPzchNBcGIKGQg0AJMoQ0geEXJ6
cUWjJiSpJ5YWIRMf2nhg/JPbrhP/70V/88T6XU4SMUmBPgELlWUwM06QUlhJ
lLzx3VuOTL5082HwOXAF6y8lJSoQMfenWcEIxwu5D7taiu5xKdc3EsrpwA+m
48FQFq1nZBQOrUBolODVSXsWSP1Z57sNozPa1/cjMynB7RblyKmdwh0Zc9Ta
EHhmTQlP1IRHDCA/IoUMInFfCKIREVoTkDhRZUwQEMRELalKPsxYxFnlBiPg
eF7/00O3OtGpy/StoORyBpB3EiDWpLXWBEQvgEGaG34dAQdEcxzViFouOSpF
ewy8GpTP3pktO52hDus4n9s43tr6mopwgaOOLNmpCXZY3lCmJoSdwakd1j/c
0NTpDUucUoaXaAgvMeLFMisp8j7mnJYt4ZfYgNcB7wNeyInxi6d5TLyym0lm
SWKsAiuLmCT8Su3MgguWH7qdQSU9HVSa/jh/ZaZIzgwNfRNTJJ1ZklOdpb8K
w2YOYpPyYDP3tScHl/zgxNyRlz8/f+mp9/UOGs5ITXadEnyOm+TAA6hxYMFs
J1oV7YgEm35LQ+TEFDkqTllHoEBAC/blpV8dvkOCwi+u5jD3V7+CmQ1LWqya
rBr6FVVeJMGcIETyn7VL5DaGlgJ8jgqlrgVkEBsusKmZSZLcu8DWnSUZlSE2
xTNzrp4SjvjPn5299SfH52yGhwBiw+nHBmCd7t7udid57r293afv6+pRduXU
rfVoY9C2lNm25dyyllksGQnGpqTJpvzh9kUrdfS6nmwFuJ2Jb958GObB8Doe
UtmVZEKTPQwZd0vVmlVc1RYZpueBC+YCmpcMoYxFeE5nNmSU/lFJFTPa7c0S
jwrCw0yqBLmcqhA8hgGPCFDhRIWx2ARswEPEG/CcAk4yV9XXIhvrSstO3dfc
+/L72oYUH4RH/NwlTb3Y7uKmHu1m0oAELrtLE/H7E1v3ZB5atTVz4zyMITaS
iQDTACZi7PuHRSg8ZdmW7VCuDATBNwGuMlnAGY+OYCOMUfGEIMhDVZY85IW4
lOllU2ZlyUN5oCPRc2bFQ2UIDwNoLqLKXAASYsYCKETP7aiqw7BjUxkUfl1b
Wyeu3VzXpE2FciZ39V2Uub5rPj5Eu5MbOoacHDIPYs57uWcmk9BUiMf52xet
UhGqpAMiDKDj5M8P3+6k+Gr/CAPGVUzCjFyCXZwlqaA7b0Z1AAL/IrZBQf9x
hKGiPksqEjNJophbiuF1f5ZAlDL+I8pEFlUhiy69Ng1oJoo4GoRJuEho/u2N
PcAFXr+8vu3U0aHlcjKTNKm4cKR30cT9wyu8dKj0GXFB05g/PL72EiTj8XU7
zn5+x76zH914qZrjOhtdZwKOBBwKvE7Tyro3xLAcyFVM4oyWTuwarUoLD4UC
zlUkHlbcyuHRwuCRUPPgDlRlmbIQjuEywhIk3m3HzoCLhfj73YFYlEzhN4xp
bmUIGd1BfoPwiImAc4FCRMQTQ3EiBN3IDmEzru/qP3eoZzYSkuu3G4oQJzL+
6Dx5D3MgBTlJ2bYEcmeSlqhJiwhaXtp9LSXUgBaEQhoVM90atB0VMdnLzHDv
JR1b1VoVFiaWb5H+BnyLXr5RBecmJp1hmMzGX+wBOBCQ3FAn4t2bDJtBzuHt
4PMZJIqYzEeUDyUqQpDoYFxHhUuDEV0OJYAGSp8qtfdbSCRDkIgFI2EZkJgb
dCgsJp7dvDvGULHJdTUqpSpdTdSkgibE+wKR8BVkldNvaQ9BVC3T0U82ROhb
DtlUnIFz/rop9QGEiGtQalsnXi9FJgLpiPk9ipHl8K7jzQ6lozDQj8RMPwJ0
lIfQ0cq4khqejqT0Jnur2+CSQOFSeAAMQgMCE+F9JCiISSQElgTAgklHzmrE
PHGpeICPiTOIbCYczHyqPNUCoxHTcETG3rVsLb0dUEFcrmKguc81FjqZYROj
3I1JjOVuPMRkYBcz2RHwINvP0L2O68T//cfhqBTYa/wswnIVwIHoIEVRfKnt
iXI5YTXEc0KxKQiOR73T1zBsmoP8TK3NDoQhwE4K2Yma7DhRfPYZGvHzEuRp
vpjKSl7QtCTJwFxoyivCuBi4STIGJioTH09vvMyMUBLB9EyVbMX3ADyRE9/f
e4vA5V2UU+Fc0Qho/t2kf6sOrMxCSC30oSuK2dfQFd3CINRBRkfhAw/AB/T8
rLQ34ncVSlvqKGbxmy0ABULTzac/5oVSk5e9KyoLoaaBcUXNTNyaw9ASp2dp
SfrlY3Dy7oHFIk5FMiZX1TRrMhJ2SgztSpSJRlIuFmAsUPlbyICYyVTAQW2V
E9oHDpAFScTJp2X4C+n3vcxu1aOkTiv9TkfhUEkAuSGc+cC/mO2G8M8lEYoG
ZKGVdUNrypAIPdXRNyWW+U9fdmNBqPZzg12Ndw5bGqL9WsbVtDPazw21FeuF
1pfDQ9iGVUL7y5TvET/PFrbiItNWWETE7VQY2AuWiDQRcf4a2o2ALGwlo/Dm
sbWb9QR3//AiULuTJASU+lH5e5n0hzQK1izXRsBcolMImIVELALNIX6lHP1K
XLqOZjMkdWgRxVcsvEAuuTjOlzIEwRrx+hluzpLD+BJuKhsGRXWQI+lgyMgL
jEDWIwXLkYJVgoJNQv/bcJayzYkDJcpmKEooAmEJiZs2A/iAOES0/xDwAp4E
+EBGpO2YuHfkYk0KuZSE6T7+68DcpROPXbLnhVf2HUplCctRxiWUWLCoX6Fz
4bzKzQwsTX4PAiqtpPhDznk2C4V/QDkPZToQi2Y392HWGi+kSa5o9SrFDL59
DV7bfZziX3Vsug1RKti4eM/MKAnhqIJxLb38nDffti/nLq/vZelJhNATY+ih
5bu4mWoPpSfN0LMBn9Mwu7GSadLWvPTdqw9f+MyBm8a+cvCwky1Kx2xfglOa
Ygsls5ZEXbNuRXKTjRK4G6wGuhMNxXaFEtidakQpqVASP/0OcFLm57h7Nju/
o5rsT9K0P+K9l4i2rpWvL2PZSjJsJZmkSkDYUhzCVinjuAb4OVIBWahzB6p7
ZE6lWzHl5IbwFLF5wuwb8ZQwF/VMP5XP4ENRbcKbMlH4RImYV7928BBQdPJb
Bw6b3ksf6L9XH+j2HnJF3pR9EeGTZNxW3EYKvRyHT12I26rR4Qsc8P471HSz
mv84Df5kChgkAgca/JIyRADOcXC8cAjc5+ikVvHhh8RPr8D/HEdxhqNEoKPz
zbWLQpL4xUG+bpCHKV+nb+dmrq0dwAfsj7mmZdApRJhSHEwT13XOVhBRCUrC
tEkmQwUMQ2vDGUoQL2984epbJj534GbwaQ5eC0zCEEN2KZsNkHJbmLLzuDd0
ZTcyANXyoW+dZifGsFPLp1rIgUFb9ymjAwYnhtio5O1lgA2i9Are3OiQYZ+Q
H3navc1OjPFvMSZICgOngHFu84iZ0zc195gTbQqRkiYzFw7VD08ca1uo2Skm
9+Zlx2ZGR0EqAwNJOqfQBgaz/asDqgdgwpwmWl783gH0W7/58tWSFncSbfot
ixvaEmeXtBVa3Fh+yzBGeoZ1A8NNtWt4TL+Fhqee4qBRmaBDgCRG4Mw0RlUh
+ZcwOxQnoJQzQ5RiIUBFGKCi2Tu1whCmchmntihwNpY4dV/zIg6qyPgHupbK
fXuCLSSrBJ9zNV/iIy+saOkFI2SWTWbuW7FZpfacIgLLWkZaGQJWnuvKMp8+
cNPoN64+7MSzBOsBhhQ6ZdBJub/C4gP4Jw2SNW+zwapHsCr9Hi0jMzRYVO8F
K054id9/wJyYlfMJGmmizBgbkEraRIlLj6G7esVJckQpkuQNMe2MToyf0xeE
UJQOcmmLA9M6iNK5m+uGvSjFGJTK8DmGn7m4qQN9mLBL8tAAldpDdoqZ/N6I
m8vzEVToOrLJ56Qji01N0IhBkJqb4+HWNkFWSUuSsWTX2wQBKVg8wri0Zgae
BA9PCZ/fWeif1INNynH926gMizBm9sAjHq3K/AAwYnbr919hlCQY/7XcBgRm
Y046HJCEC8iFbdVNBiBq1Wne5MMXX+UoOt63druebJUwdCwLyfQWEwlABdAB
lITRYeX6aGe/XbWSb9GhFiJhSdu0Odoc4U1G1H0OHQqWEY6SkLC5heEkyXNS
FJb84X1XLhMMpS3fhZBklpbNGt9dP1dZE++ZJPkhnEQZn7SKj41T4aikCJUL
2yqwRMpFhWQaE0ZkJ/ogOEziQxsvLWPwWBKCRxmhAG4H3A+4ISdq44Gp4H3M
fFziYZWv0Imm8uDCqFUpmWTcTyAexfwKQRtDRpoJj/PD8ju+8DifiWZy8Dk6
WpNeJ0gohRtdiC8Kz1GgIvQskhx56BmDhnYzF4etTQbikEM4TB6s67BxENPr
pjzaYQ4nBzy/c38YEYuYIjiVBa6U2v/KQYx0IVOjiJgyQyOPAvHOsnMtKKwa
F4+XwRygvAHYK45eMapTPJgeBcxFB8NDDsMDnWoZh7g2IFET9/oUtBUFTFQi
bYVwIE8JEgYEEzWChhHxeo4kJJaZXVBmTqZzeSBOr61oAh+yIaSKIZiFPIaF
UnxOitnz2sycskr4EGDh9HevvEHx4CAQ8mbowRhUo8pj4DfGnz9wMzzgdSRL
Eh5kBruNgVXDYtgL7TrknRePuhi0YbFAkNfoZFjIZVhI2XGp2nseEJcWB4YW
cPbtVULz6xUFMHkZceJK+ZkFReXyJOTFIr5kvQUQ4GyiCMKcATuk+7hX95Pv
aJ7rFDKKp+eYmP7Ow6mKVH4ENE/LyqB7NAWlTK5kXggJdaRyK2UbiAHa8vfZ
gxo1TCcby//sUpUUwwopP2YovxeUns+n/btt1R+HtH8eHzDEsk6cgBGAIsfP
YXaN5iJwUtlToHP1mNxV16YsgPAHQ+7tqjqE3hfh7VXoJisx4EC5CHhEfvKe
3jVCxVc19J2rSeVZSGxmZh3xECSKGSQoOxJXSJy/s2/2xJaGZpo1ZcnF7PAc
WiNikDDzsHBFYcEl0SQb1oJw2mLD8g9pFyVdgHDQzwb4hVw+j99rsyH+34zh
AcMG3WLDVyIdFkyWBSZCILFxl8IES1PWg3eoESBsqe405qVz4ZBrAYLkpVM+
Wk+/vbMPKl/7VjpxE5BzzTkFp+7omM1CEguBpNSGZOKdfSMy/UoOQ6bQJh6a
vfD0F5ev5WA5/8CabYGwDIXD0sLMUwNzrRITqxjJxkTVOxrWJWrtNL+axyQd
4kJmHdPlS5qVAj8rf15f//4I5DOcKHiOY2pVcT4fXlYQI8CLciOY/HoFM/FX
aUai+JwASFSZrAggoH56zc/f3bMK7MXyqOBhiRMTbPQKRhrxMbu4UIbQCg0E
YzMzMY2G4FFu44EZ1gJyKyYeZ59eNBIBPpyEIuTsQys3AiPn37tmO1BSxsAx
EJIDa0cy4mZyVU0+HA4OKi2xC9vIicgYw65BkTZE+Rf88wA4UnziYuCYtayM
RBAXsPb3mwu5ubAFw/mH0tKdWCzN1B6Axaj2r96AP0mg3mGCuUCZBXikUdWJ
04tKqxV4mcacdOaqxjrYNbOZDxojIRquYhJTeaRhleMELwEajpKGz94zgFZz
YlfPEGh44qlNuxkN44bfvhANd1E0+aOv0zTzzN3L1zMjfwR08n7G4ict5UKW
ChRsWgPrzw/4lAuViIsSIQnzQUbD5CUSo5RbeF64g6/+UyTSqgLJ+XzAWEOj
HfQNl8ALOKRhyDNVK+2Kz8Ln09uqm0DRqOyoX+ViSOeLIT0gVD4cxf10UdC+
zk+uw+ekFwOgQDGAm2kGxMcLBoAApIBjgRZ2o2bEIL4MgBDnIHDKmEWU3hAK
eskDwPj+w12rNprj28o7PUI6tRJJCQsBq2aEENCzTlUcvd9HwWIw+HE+szDM
AJArTX9r66/P0Q6Z5wGGCDOpmMOb/joZHtSk92aWli2ggU4wmMNdZRFObyyr
PXWwtv3cwoJSfU0CAlA4rp1HKITuVwlo4DkOgJx7b28PMAIP3IFJWYaEt4pV
kcGBUcOAkXbdgAlHMoSNcibt0BWSiOpz85S/f4dkYz8zsXy/bczRyNtsWCv2
8prlKhgwgIIob/vnMGBQygmWzf5BBIuwUeb5MxQs/p1cZtPxwhlZtTgYEkQS
JXDLtvtf39t4kQgAZos55VKMGZ0kgKIsx7mFxeWnDrb0nd5Y3UR4vHwf3MBR
QZMpiydYSJIEyalnhhf5IFlNGzLNODLUdNQxhKT4QCE1TUI6QggZJEJev3sE
fcc/HV68gk1LPmKbCExNUzGHzE7adR6SECuLuQ+v5ShChKKGMzI7eZyJG+cy
iKQIg2/39PwY8BDRIuyu+1lAGrufNx/1CIZ1TrqCAxMPK0s7pZmIAxEv3yf8
iHgAJQYdydNzC8p0CFEUi2UG8/MxJLypudPJCSFjBcUYiozMutLqILPRwKxp
JHko0hRbcFCc/cwle7mEZVtIfmK2m4v4w6Flq1/69NbdbErqA6Roq3wsZnFh
lW8Y1kR5FclF3LAc9ZKDbhx1dRjl3wA4IBIcGHLBC+JGiCgAjp/29X0vhwdD
HRziiSQJDFj1vN9zmExiclfdvMzFld1ekxEFMhy8Dzq4GSADuCBjET/XkMo5
dXNDx8ufmLXg1NHWWee2V+g7cAAmAAmCkgrB5SJ7xgG4sAakCZ6x8SQTceS6
eJzvKasEPKbKZ7eE4DGXQk+4Nnl46eqJD+3c88JzGy/ltu8SIb5dVlELEqtW
Q16zVsj2SoNiQKLgAIOh4ZjPwCGX0pVTAUDAqRi5LBV1iLds6eYjUAOOoCov
eAAUMYQiCi+RlbZ0nnYfBhFODJ/jigwVaU5pQBa78YemYk9Vl5qRtDFpqziD
RB4hcb6jADOngISZ0jaQ0FsfuNuzKCTmu0j87ZEFIxce37ln7Okde7gtux8k
ZVo1X5KHfMaZ5DHOhHiIGwajVwWdeFimZAAUS4ElKRu8BXgN4ABeFzFRZwfv
NhoIAGZvVNysrMnMKyo+fVNnrxNHCuLn2nIL9LRDat9Jz1DzCyioMOcloHmc
h3Ywao/6Q0xIROXbmQZW85hEaghPPi2kFIPKTL768R17QO0nj2/frY54sFIM
j5IirRR2xNK7VRhh2AadriK9J0y9C6X1qcABcgRU3xdxMwmvDQ5+ExQOBgCi
S1wm92q9NSSU5MY+qT5pLmALp1AqBn1H5qqWRkSAvEP81K6GHh0piAcikD9D
BDANFREvR0QI8fb2IfXGyUMN/V0MAhE+XCjIAgFPsqk2HIbFuszTiYHu33hq
55WTT+xCv7CHgeExd6Tr+ejbLBgAAr29Id91CvoanTyWMmEQI3W1CQQYhHlo
D5Jn5OY3UL6KIMEXPN/efgr3wnjr+Jr9nsAwBNxmfLM4SsSOdREBwGxhAw62
tQIUgAPAcK4qlasX6JtSaQAAcSicIRSzXChS4pdwM44F+nGotZ8CyIraiXe0
DHUjJCkTEnh4c1WF0wekOiRLsYwWNQAWVR3z4me2XA7m4jdP79wTAohVRiUB
oWoquxJCAmJFolf6rQUAIhT4lADjWi66nI3PULSCOTqVooBoEgs7mXCyng8n
G5GTtPcgdc5ioKWYDUFhZ2dmTXWlAUjs9IqKulNHe+ciCNfVtZTMkJF2l5Go
yYgTxefEhQf7lkw+Nrg8s6VSHRxUDaviPchLwuTFDCOKgzmBdQ2Ok8oQTkaQ
k6RZRQWPHz2748rMYzv3jH5y+xXqgDHrOLrH4eltYB3eBtp/G9oHxYnKY6JX
yWe8CnESUxGD4gR8yFOo2GuVTRGX10hEhCt55relpcvgXSqmxM0JDCI1Id6l
IdC7eCPLjhjZE2FDWgQiafUJgIgTefkTkLc6fV0zngMGfDhlM2SlIZyVqGIF
HiLIeG6hmKBcuLSm0Z6gEDlxRY46QgSDz5LpL3aUh2Czgim+ixAmYF7AzIAf
Ys+mI3QgunwbbduX1Fi1FPKateNuj0uNwKJDURNDaqKmF8Ibuz6LiYvHhTU5
9l9VVcvhbfX+KQjQUsVHoGRQ4tzNOFReEwwKMIKckPdJeGnJLCorOXdPb0+U
gDm3vQrHO6JSMUNgKqcDTBKBSSpghGOqm7y3dXHmpvphvapCXio2caxtjmIH
vFLp9FdQSkOyX6uCsQFcYFoLYcxU2AARjtx9YFdhFNhOCYOcK3hs4mRs4GXG
SKH3ITkJEcd+VBiZB4Ee4Ys+qPxTIxPKlk9pbNJmjmMKp5RirI2IVuYvFgx1
Z97e3S45wiynCmSqZsiRPKdK/G41wIRAxRmEchCh9MTD/UtU2xN3ts4Zf6R7
OaJ0a+M8VdXldBkoyXOuJm7t7Cmfeg3G2m/A3Mlec7SGOfkhKtdgxGQIzA9M
jtRBqhZHj7rWRt2r1nkbLbNKoqzajQLGfQUQlXDdV8bIvVPtRhIoApqAKqAL
riqqcA+mF6tSPjEirZLpvvB+MSIUllYpAaGwskrwUERRhJNUQKnH6QcH+gCs
U48PL1JuTUU/yFXNDOlKZ0lXAdIV89IVAbyEU5aACTs1HyDrJDcnWGsFvs7f
0dSsGHPCIONS9QUhCZaLmcMkYjIUeppm3pimvZxJwlHGxbrxNbgyGU4XMg6v
0HZ4eG03z1mKcXhd5PC+2tX1IRFCPwCggfOLHvOXE3KsFfEhdROylprKckUC
w6RqJwGEiSmB4EtwNgx0mSFT/QzRimi0LoKfA9Eq4dGKIlpxhdbEe9qXalfY
TgG4ydfp54eHs7FjHGJ5IYhtYCoQyY7FwB+Of3jnHpXqvYzJ69EikXXbbfCG
OBWTeZ4i10nqUpJCxkleDpfcGnY9bXNSvJukGnZI93z0V/39jwBv8L+IyZ/G
xUMvdM18nJ4X4joNQ2cCCPCp9SKAz2vkVC9MKycpjAOFEIqZFDpNUyIIxQrD
Cj8xHtVzv4laBYXlk0da+1SU5cRtzMY/2L1cu8lW100q1CYeaO+IAGtkf4E2
hK1s+mtNOSHUbWKok4YNDJrKEbB3Nni/37BBViBm0abIMmmzFrQDaUv7XSjQ
1mKH8+BCwdIljvmrIlt40HL4EL/JXbQ2DZzEy4zuQ/FKEV7KkQJeKjxzWkLw
oqoHsGKLADF4OCmqjxFIzQeikKpKe8qHbCX8bCkP6bR4QjDxOPvUrFlRYAuX
rMqnvzyVDE9HbmGgihNAVp760sA6ScuO6YPs4xZZVsmM5xq6zMuIz6OOVTW1
Oo9xmbQLFNYwP6pcJsRoKQaqVh6qZIj1IrJylOXi3KY/NIuea8jJ1VTl2FRB
eKbCMqeNpwpOoZYGCvxgn6BoDjwwabDGiU88M2cpXFfGDChzKhi6kkhXgqML
nGQTASZezlI+EgCLkfE6f2lVFX5Tw3iFLnthGjsRDtg25miMBMFkpr7VPcAs
wOhW4XHTamliEhZgKvuJZorOZbFT5pf6AFsMgOWT4TrjSYXXuqkr5SbBeKGb
zGGWTtvs2Exc34LLqcw8gDFdMAcg0xUzpwCn55aWG3ydurmjC8nKx+cYsJXZ
TaeXA0/kD6OnHu+affrB9kF4iG/59uYeOO+tvi2zqbzKwi0nBK1SG63Jq+u6
nBSgFQGqIoCVaFtCZZZgmNGXmNAgVhNHKNI3sZoiX24dGxblAYNZJAB2CQFm
pswVYGbq3AsYkCD3jCXUjcIUYOqO5LL00+BJL7Ya3Gn3yDAGYBXwzrHado7n
h4buB+eYx+DVzoT+Eb9nBCPWTIkLlfwKsl/AlsPBVYjPURMup44hK45kRS/c
29Y/+VDnMDycyPizg0sEUe/pHLqwk7JlSM+R1t5Q2gr5YD/tBe7C4YbZAB2i
Vs8Al5wpcAkzg6puJWXeqs48rXAHkw1LElyQd9f5911MFuN+3qJhgU/aos28
iZ26Zq0I7/LTBmgV+pPxYNUqXK9p5scKGNo68Dlp0uZzk832Kr8R3EenRKyY
EEP/qKKtyiwRS88QsTwesRx0l0lMU9zXuhgwM10m7HR0avmgLDVT1mJm2jWI
sV0MYyk7UQ/Gjb2l6jHXNIHJwkxZBJ+j6h5D+C9l8WaVFpUwHnQnz1sx70FL
iTdv9qyQ4a2TojTxzotlw8Xi9Uizvd7Dpe8DESuViF3X3KoRK8kSsaIZIpbm
EctFxKImYg7nQKt5zNLTw8xdS4yr201YGdjdwVxZmXyOK3qRUEZI3YkdoAGD
JHfYGuhoZykRs+qmPTiNUkVBXQnvLIv4PFlxoLOEFj4vrq+Exxk4VJwwEZcP
AlgIlyxxBWfJOcpAvMoIr3Pbq3QEr+sVZfIVYUtniVzlDJFLMLmL/GDeLP9Z
xfjPXBu2sx+cs8ALm3cFko4EicO5VubdbxC2PUy6P82k+3cwmVg6PzxpGjFw
koAPYGUUPinirJoozzWcd+7giSvlHWY+TQEg5PdlykoCpwAJ8dYrFHaiybvF
1ePi//0cfjXHrEJa71IA4KemrQq/ciQvqQwbVhrsqEYKTz7a2TK+o7KcJTGS
JYkNMyQxysxFC4JJtBxsJUNiHpF49pHubr1IUBa+qEmHXyU1iXA632MX7zh/
28JVQUTi2kAOszZwCZO1vdc2f2pVCV7D/wUWjNZN/eh8YvuAgUt4GMuZhEeu
PVEA+wd2sIyBUGbRxM93KwjF6wOQ2T2OiO8/I6u7xOX5xF8Ct354zN+5tty8
YMuXPHW0t09ZP+Dv5KMDvfQa+Dvxrdm9TlzxqDNnkP/gmGufkrkUx5zJWiGD
WpRxsmV88rYgMHnLrxcUeIyeRO3sc1v3OpHTL+66RibUZESnsLOSbGl+vWA7
kwZ5l98WgguFSi9dZCHP9DNQ04vrJYz3DcCvgl81SPIptwqGQFqlioP3VaZQ
/L8VTCEeXXHcPV1f/F+FtWKfc+Jg/8wqHuCPdb1kAGOmARy7pbVJMDeyUN6j
WDA39mhXCzwiArc6J5G5vr46s6m8TOc/dlc3AHqzsrR2d3Z0ZrZUVuLvL6mo
FCFiIG6Wjy3lY7rCaeKWF4JbLEvccpiMCMca3V4uqW4TBfYKXoO101tciyzW
LL9rXNN/vt1m7Yzc0FTJL7vTXTxi3rQbHq6NQDTxNi6HgavcXYr66fKyFbr2
3NyoxsAF1s30rlGCSzlafAiaEK7IxGO9ncJRfXKo/+zjfbPOX1att65M3tyI
pg0h6w1BLYWowcxhvrp+4ZraJnkbusm7mvuBN2QuL5g8y6eW8IneommSR6dr
J+B4QDgm0EtfIkv4ct0FBZ0d2RZ4/+0UGDpl3MBaqR0uKvArtvizluPLXPun
z2LYZvOXkRunqhlXG3FdLeTjVE6uWsPXwE4utuYTfILDuRq+Ukr0Hi+M3qAt
mwCP466CuDPnE+BRyahFlXMlquh54vbWltMvLpgLD7AB4jmu+NNsCf6cvhDu
4shd0uROzFiHBGJLJo61z75wqKHV4SDMYSCMMd62iAnsSqa/TpoIhzCVJYR5
zKLDVuYMgLtsC6imtxDJKSDVHSckbdZ9FUttb4sBoCRwxENgDRKYML3tv7S1
3aDcay2zHl+ncyXWLKPQDfDUjEG8PlhECP7lUMEQ4teYTGdyIlFuKTTAr5Lp
S5qm7+QTc4ZPfHfNSvh/fGdNjTJ3bwmSEdsUYjG+QDIGTIq3SCqVMwUqnTTR
OHF/xzJFpCBb0wiL9shhIUNjqUvj+Utr6700cmusMZ7Giac37gYac4JoxCxf
vptq0V54K3MIwdt5QwgXVQQILrbMwtCqfytjHDFhaJ6W2otneQsv/MuGhusV
gz9PJtfVMezV8I63hGcv32P+pmQvzk0qHBnYAYuayyPtbXEgUMwxJIPafAkG
xeR5KvaSXvbEXKJe8YYLXUGw0fpqVNe2GbAp/4uY5fORX5l3JT9oeTVCIR9H
mZMPiCFOVzLZvHx7JQJ2BCjErGwe3Vk+BWYOAFFmTi3mq70h5RZijK/1HX2x
laGMfG3yeGsrpO+OCQt332hf3/st38uZu6qQ2USZf1IL3MkTVsEFK+bY2o+K
sIlEHNhTRg8AA9Cc1B8FXcyEDkDLDeEsHsyZVfSWx3NWHpg1TgUtTijU5E1W
gDTgDM1ZPhm1iXcto0Uyw8Va7BXYKxSYStnCsEdZ4TRn3tTGNR29yZuPEod2
1bgBpXa1RF/MpA/8K01sYUH/w2JmActf9702OPheMbN40onwKxjVDI+VfvcL
JrCKmXukjqmDtw4qsxjCYdw75wgzfnkz5JCmuzgvkav67ZguDoIwakOI+CUY
z0oHw8ZMzwoQVkxv6QJOsufgK5wefNYyBgffEd7wwUUzxquyuLNuVum5hiu0
W3juKJ8HEwqYzd4nJhT3iQnFB+P8KkcVg1w5P+OoZZCLu8ih+QtCrjJsuhEz
pxuAV9EMaesB2tRUWKAGoCFshFyKQ87cmJBk3GqaieGqAjFLKswmPrP1yswH
11yiMEM3WpolV4V2iSXkiZ3N+rjRw35ThjswxT8zX4c5umoLKav+rZz3pZtd
qkaNSnK5ZPF0Q4N2p2LC8L4Uv5JRyVBV6nesai6Bq2JetKKUSRFtzFfWDMcv
lIpXZ501AYZKZ4hTJzlRZbyUAStGmBJemC7c2thrQGT5zCSfBK4ONlfn19bU
Y5cFQ+c/sv5SXGl9z+ptZVMjhEsMRfYSAxZUbmLyH3SqXBp8IDg6MC54gpD4
B0ZGXUODU0NvqXD9oi4Ul4BZB4MEkCSXW5VP/O3Q0HvAJ+byLrGcIamEnxU0
IUQAmJ4VADwIU7BNynoOAOhUzpAkWm+IWXNPQVJpgCd8B4b9fq8X50OvGgaj
Ehl6PTlvaebd/XMzF1XWoFm6e8ma09+47PrzD6yWuzktnLDo+0omk1HILx1s
ZIii2xemTdOEUZXDRFq1FlHWAn4F4/E28UQVETrg5cDbAVXwOqAIrswm6jic
g1MUEvS3+LHSdqhm+hF9zQwRaqFICiJ6vHZVbRulQcoJosm7W4YyN9Q1WxBx
88SYnadVENXaEOHyZxFClKMhEo/zDw0tmDjcNYAw7egaBJgmntxwGQMTLn9y
MBUxCwMcSXT3sJjXNtF+Fdw6oNc76y2QrNpvec3alhcAEhEDW1U+BKE6gARm
CkJ4p4j3dKXH/DXghXzGrN3O2CI61dPPQzTMEKAmyoEpbzZ+tGPhhc3l+H6H
GIL9c/OECxsSvmv2hcMNrZSJTQJKqk4NHtK1tYvrQyJi98dHDUzGVZ5pdPaT
i1d4eTr78QXLI6c/u2SNXBLwYOWUZ5luLWZy/huYdOsNwRZKRUM6SmqwwLIq
1ipdn6fjrY0uWEL9xQqsfDsmB5/3fHv742XMeoAs9Dhunsnsnt9tBeSdOmrq
0UBVhQXavEVqniFQsnADcwsCJAAKrJIBVEIBJahZAg8brLgJFoZQAiInwgDV
yACV4wJ1/n3DC7xAxd4CoEqY/P16Jnd6HWndDJhcQ6Uvqw13jYRUJeP0Kl3T
pp3eBrjE7YDK4UPySn5Bnatbywlxe10EV0aW5KK7q5hW2N0+Q65qkauE6elM
tgitqIkWrkfC/E7iZfpA8XMbxtsiaJIrS+DuACiEirNVKR6ticfnLAW0EjNB
C7OnpXYy/vWP7rxSWSgrYSBvB6FcnJqbSc+n1omwhLvZosk60rGS8XyBNKX8
6SoVmstcqm/dvIhBKs3H5j2apmFNU9nUvs+bGOieIVLVhJSKvwEnBqkLdzbP
1kjFCSwTKWHX/fxwpkkeIs3x46QRngQHz9lPbrmqLNg0WSmCUjvnjkWN6xmS
rrZtkDohNuoaGh1DtVgkWeVkVTZd6OrWU8vwSTImxu1NKT79VM+4Oq4yOxli
kno1RCs1RKXTj8BnzRAiKplNmDbJBxHsHRlKuOgIC9SL0EjToxKVCE0zg04s
BJ1cF53zXaWVgM7Z57bvw3T64+suNdCBnUmB6JQxKfN1DDoH/EYIzIr0at5I
qZXeVOV6NX0jzirbq2GstY6nJ+H6NLA+yqc18T4tnwEowQffs2jpBmyRyU/x
9OPvwRniU2anwicON/WLWEcAJK5JhNAMleEzbBAZunBX82wzdAKawBgpQ3Th
SGOHyiU5rXqhj25mEIcw28dQPjF0vp3KTIEheHgYOn/18OLQDGWZmw+AXADk
BOD1xTpJuT/M7sTU+ona9dZmwWOVd1UxToyBB5CQKW4ARrkvAKmF917crjf3
MHMr0O434ElFVit4iqYfa8+eITwlBI8Za3vhwbUVgieaOdQw68KtjV0ISxxh
SQAsk+9qGx5/cnA9PBQ4yI0TM3fiAjlRQEYYMQENIIPYSHgmNtU2hcAzZXq7
nElvX8zM//faBkjVYkVtStDMdFgAWbfprLZ9F167mAco6iaSVEQNfqyD8V25
DD2REN81YCBUFFurECqYVkQ9f4b0FDK5oxjRo8hBbgqJHshHTt4lTA1UYyVc
U6PoEe8Vz+jRCJ6EyhpZWSJBTvEfDQzu4KhgTgdYywBzJW90Yq7/0RFNJ71D
wmEVL1cz7motXjNPyAfjACUrT4GJUREz/A8RcxefzE4jNHETGniMAiBgNVdi
dugAoIK4SGgAIhOavOkHzotnSE6+7bSQGY6cXIacJENOEp+j8DP81giD4hNP
dHVnrqrG76Ym8U7pjAGyDmOq4NPXaxiG9oQZHX1Wuipw6rIwssqhql3HpWvg
CaOUwmhU1sB780K9fOY65docgUQz2BmFjbIzCMwQYQO/+ffWnK0Km9zph8rL
ZohNLuOuOGySDDYythHPnWoer6LnzKGmvsmjnYsQojSDUqOB0r2im/CQSImZ
eSBKQQtrXPK6gkler2GSjLv9tgg8Vsy9bNYXd1scWTVPNbb/wmtr8FpCcfTz
ZHIrgiLD5X4+V417KugIbqJGEYO8DLvUjC8o3gN/BhXD6elHyCtmSE2KiZDj
DDXRYGrEz4NAjrg2H6mZTQ5s8u624YkHepaNPyECnzvbl00+0L0qhwGInlNn
n+3rNyE6/962jrNP9/RNHGrAnnpYOvuekQ0hq2qBCyGVTMJ6NZNfvFyGK7JW
REEj/ZoKhNCB9RJIEhqrdkles3ZYr8Zr8ffl5+djIFRdvQNowazPEO/E6Mwu
iGTgBIiktGMH5vnxgUfKHyNPZXRWzxCfBOFjJnkkPnGFjx+ZCBCD3CwGZpAY
4iYqmFkqmFkFzAjm8FmxE2iBaC02AQCdf7C9wwtQ5PSJviFBhuRo4nB7t1NG
MJ29a9ZsLiskYTr75LpdoTBVMcnq1cy0fhdvmOj0pKi1w2uWBZPl3WoY77aK
YEIeZ8/GzrxWUIA3n8PDu59ycrwuDViC/wEueR3vyUA0QfEHTtf/bk3VNf9e
nKD6okTWMTMYo3UzpCkaGDPHJu5sGZy8pQHPhMusKy2LGiAJ07RGwYROzAtS
IkuQqniQJh7t6AaQYgTS2YfauzVI5TNf8tDnJFW5GWqgCDPUIxQ9gUkCF6ce
MouswYJ/asMza6li8NKMnvosvqw7nNbatg2vLcdrSfPwr58MDAxIU4P7G/DG
dIzrk+fJC576xaMWv7nJmIiu/2Jnw5HxjnzMTzvxadWrbZqSsTyOMSDMjKwV
VxcO1jZFM3uqqqmULQ5kAVfwEBZseSBb6anZguSjQ2WScY4tJ0VgKagQqbKZ
gWWdj1TNJKwX8GClCawRE6ztrtVSunetVswsLAHI+ulNta4X1JVKtYwXvAiv
pcyYHz7oqGNvnpln5wEQKQmWslsQh9Ms3xNd9YfAFg3bCONLAmydEraoCZva
K5NZW1oGTMFDXAO6BGt96CFXCuvWhY0IusB6KbouHG5coOnKJbom7+9epQhz
ZAw18VDPMp2ILAuhK+eto8tKKdUwOe1Bni68KUl0bEtrkxDiA4vmnXx+49rM
7OpK7SQDbFjc9YK6enzQ4sy6Uau8Zm2BXkotQ07CdL0yoz5i49YmcRuVSW+B
VpsTET8NIILqDncrnbQ7BQS8ED74uwNUH5Cr0gcmc0DcdEL6HVNCF7Ms3Oay
csQLPKb4bsKyLbuwq7JNAqnZAuuFVBUwbOUSW4orpKrYneD52MoLZOuPXm2r
4dPdXVMSFgXCTry6ewc8nBg9I3EbO/DOuq+IxyW8bUu4lkpHZEMWcFadU53t
MfHaIrwWBwjNahdMrMvZg0FcL96j7SkUF6TIIf20Cx6j9HtMjz+Hhu1ecelq
eCBpV+cCgpzZo5rxBM4KBgp3mwiCuSPblALagDt4cFOCS0Poi5PJU+SBJROe
B6hLAnUCwgXC2A3iY3MZZimBOqfEJm7ikb41LHGFTEpBEVcQTlzgIl3gTqpa
JjPezEOWpDhlvLWwAEhTD+DNyQvlzDxOxDVsMe82rGELNavyqZ7xoQvsxtUu
foLY2qQgALl2XjhoUIj3HDjLq3OCjBvtxUqq+aZJljJoTpQ3ZleE4BQFnNQW
AsGSYsiBgGzQiV24pm7u5JHmRZP7GzAELLUxQoA4jPJDMCpyMTq/q6bexGiK
dbopM+d1TOa8OgyomBeoUmQpjixdO3sgU52fp3Nc2/yGC/iQOvdW+84moOpc
eHTdUx3jLOe5jStnCddTfqDAQ04BVGWQ5UK0tmXkYh/esWwlRmlp4uu4LGQB
xv69N2+7cKTt0GBYsn0v8hXz8hUBGyVDejRF0iwppITZerBvrWBJooVklWTJ
V66fL5VzcEqIr/M7K2mFz+Drj02s17tJB5VUl2WY2fJVPTVfpsECHKRjtCKx
uRZcVhlUvesY9b5kYjFu7qHRZ3ylXcLOGLecIsKSQYSJ/+fhQSFT2C0njfEY
ANec2gCPc7UpuEOmM7amqhyAQtMlTZDa+Y5E7cPnlJcrjOwp6GoGjhI2RhPv
6lyUNUbpEIzK7NzVTDHicld1TFIdj4/BnLp7Khb5PB6kRg9Il3d3KMentmgG
GCrvrql5FkuW56NyYPuwjyGXUrW7DzxfrovRqFFjng1GUC33XIwxT5heFVZO
RPPnZuVd8ssN1def6SKnNz5UWCihAR+noTnoOjt0MFfU4H12LmypbHCSNimT
1zb2BZOCazBJNyvFMVLx34dIPZMrj0wTkXZCZPyuRXODEOFtTcy7F2o+IWIE
QtqX1du+DLEZ8PMHVis/DJGoiQjWFuzS9Qbz0J0Nu04NKRFUOJFXrmx+uxMH
MlAaTam0TqxfT34JMdhRre1HiihQBKD+i4PthSo6orKR8HR3VSAPMS8PEWbh
JBCGWkPxv28pKZtK8b2o+KhS/PgDSxZQEewWXjF0CndMuRFVf7vA0rpVptTA
OBlKb1qJBPiggj9O65BJf44W8OKg7DOLSvagKwEjMFxU5NwIalYnpNzYQpVl
oOLk9BRtpaMj4YqumXrgT3ORTGeky6YY5P/VVVH+r9tn9ShdD6GuE6auAQcV
VGzmxzlp3K4RWWSp27rnLalbF0EqX9BDl9WOJdVS0VugcXQZG6y4oS9/B8YN
62qqSeliqiNMPzp9qffpje24qXKlajFQhKKFosRUBbSMmq619X324cH5U61j
hVfGF0zTlEdpRI9+b+/uzOf3XvHqd/Zd4Ziav3nOoKn5o+KxyR3rqnDVGOve
etbFpHzD4euFVHnNOgSCCkGsgBL+Hm1Dsav+M8amIFQ/5o+jgUpPmUoHhZ9Z
XLZPjXQw6je8FXrXQz1Q3/XMuuUMl5ushEdimmrPJbWPfWvfFRee33vFSz+4
6nJnwKP2R5YtOvmeRfOUZ98UNuC1Y1eXl1hqt25P20jXrB2pHXbjKvbDE7m4
XRZzs9A5XNuidC5ageeocuZo1vE5B3S+a5rqj4Dm1WB/oHvVhTtaBrDKRuUi
Wt76BD1qN5K9jksoe/XCT/fsGn9x7x54wOs+W81jz6weMdW80T+M3XSBXSy6
zNKxVWzTaLeiHH+rDYtqXB6h8Ipj30LIk7ifwq7DtUtA3WfmluwT8du2pnvp
78b7C4vHrm3pdJLwXE4OHYI50DY8xC/g2Z4kjkxJxIXtVQ0eImiRMAFEwI/4
ONTUhwuGH+rubX0LoLgUnqNjG9p6RCdaikqmoqCGRjqMcBjpMOKdWXgtqRA4
+eLmi0/8+PLtpnunDU7+4S45sPz7RcSBHNdWrYy8ps4z+P/ae/M4vY7qzvvm
2Z+n933f9137vrTWVmuXrH1fWpJtecMrNhgkY4yNjcE2NjvIgNnDYCCBKAE1
A85GZoxIZkgmMj2BCXRektYbmljTMczz1jmn6t6q+5x7n0VyPu8fo8/n3m49
3f08t+r3rXNOnTq3rnZ/TMidL6BbQ0PnHAiW3kgI6hP5n/m0CI1K4BxHHoKT
O2rsfQSsMi8whmjm5yZh6u6ORRQKYoxYyqwZR/AcM3CAnz/SvXb6wTb0FFOP
tHV4Y8EuuHjdo7I9DRmXD/T2TK5tboJFOkhvtxIZ4PKBjIvfO3LA6s2AjI3O
2Nb3NI45L6spAJiCYQMOo/almXEE0nCoLX5U6XF1KhwiBBi4bjjQt3QgGMGL
5wbnAxeOreAIiTO2ooYnBPIB7tyAHkEYrIQcZ6I4mXlb5/DU433rxWU8Pagy
TIIXxMXbwWSwZrLRF5UgkCKa+OENI5/55Z1n4bACeA5e/vDG9TAbuPy+Vcut
NgLoZy8fPTT95aMHwblYXfhaDLJHbogub25tUl5mo591SbmtZZXBkOFoJEPG
bS000cCH2ylA7XvTa1JBSjolCakgISDzvG3L1WKqpkKEFsE54etlYjcAlYAP
KuHsUMlmXWQVnkMX37lyBMhRR8wLmQQho3BBMKTN+eorh/eCzfnJN4U36nSQ
wWyShowemIzyZoeyzGZgsoZ4aXYckl220uw4JHsSWpcKI7BVdyNQ6S8+rFCZ
aC2Yb6OyKRubYwWvHW/EJdeZg3XdsJFE5yqWk5DOCXzFqMQKKjwQjogXInJ3
y6zTjEuyBKOEAUPaklf++OhBmIfCfNRq15ZfNTACQAZ29miqcCCsRELFKKjx
WgMJ43GpLeZr6IaqHUOkB6oNJhLj8r4DHzc0LvPRrBtqLTjIwnHUtiOq6Gh/
HW5ymtxT02lFk7e1QmWR+B5fA4UjSueuYZiXwiEwgXNw6omB9cpMWBwPMW+T
cb0J6LlZklHNkEEUBMFUgMlAL9PqQ4YYQHq0MuKYDX3Dyrjzsl5Juc7AxKgL
aWE8DcWs/PJX4w1lRSalU1m5Fc+YjJ463ULO5GhDf3jyfN+GwPT9YChmDlBV
2vR5wUMIz8GZhzpX2VTkM1Qk3jwq+rOkosmbCqBh6itHD0IMYrW4qLh7wRyG
inMaFe6dwuPOsNfvKllvUGE8sLTVJAVtTblpllQyo/mGACFeuyMXIKIAhHAa
4lv80Vs7l1mFk08NbbLCU+/uGwEq4FDzE6sA9Jf3Jl7X4gPuhdaRpeSdcA6A
ihQdBGF2AsMfE5RNLqEfXDhXE1oPGuQdPinDP0GyGbd80M2sapwba1GtpovA
SLLEYUVf8mjNSOVxKD9Mr/KmbFSe2VrV6FJ5eqxpQIQGoHJQKYvjOp9G98yd
cg0qw9HtsfZg3FPRmKXUA+bMAqXtZNKTDRIEKTquPQW9FXdvEptwZLUH6qih
uPHYzlbG2svlB3d5c5up+IR8SMp/gOKUkELFldqodbG34irvkKnimaw+VGap
+DxPxe1kJdh0+L6OET3EePm1fsM85X6JjYbuRmFCm8kC3uVe4BCllxt3mLon
ZXV7mtrPeenlvnhrzyDJrVYfpd4oddRLcIztCtLLnNOiQ1GWGi9lNO5iUpG1
2QnMj+qU+xYoeakGsWHK2xhTTu+CCYOU8t7ON0vlyyur69WgVlM+JbTPoFaB
W7pBfV13NMV4tVXpWXdZKUiujnWM1t1McrGaqR6QWuu5ITl9NwYzfKVCILNc
bYshtFFJ0GaObvx1Gd+5Z/p01zBXwu1ZX3QBStA40x10cs6gMOp7C6kME7oM
VVahmKfKuS0lhHWV4QCFraCPtpuZvF8Pk/er9NbW8M5rnAGbWuRleuethrbG
PlrtppXGTKCrwkgh0pe9tuNQO+bWNhZY9x+gLawS+WjruR5QAvIGp3Z0DYm/
6yqvNhO6qbLuYqZU3UxuroKRNWznX6SY7g1AE44SeiE81QipcWlUArQ78tuF
8LRTBD+3phtqPYqXU3QVY3Wep65YXpqTrjM7qpoy1RWm0Ol05VL2CU3Xa11l
lW5docxX1/Ugo2sPk1or89LV5XZXOcNV35Ezz3lZr0zfbihsWON2xhoHTGus
3nzQT9xMq/lCQvRHlcCQsA94ahx2azx1Z/tiCrMw/iph5C3IJs1OW0WAtBCT
k7BojgNp1L02UFE5dWRgUB2Bn/7l8ZMikPvgBgyWUOvDjOK9TMqsRFNcFvX4
Ke4e05zz3WnIbSzLUGxsP3EXvuqT5FmOxBMppeGZFnLZ9R3utd50+sLs2HLN
lD0Hchql3Tea6PMmOJJLmzuTDcVlUV7ReHaKGumuYlNRKORQihoud9gxx8wY
1gs94GW6uUmNV+P5eHLCo7yrmv/OdsQc56vyhMbtuS7c3ygxnaQWL6ZxVwdt
0BaEEjwQFA4rAOcYL2Oxv4wgEYrVxySzCk0ZIZHlJ6PKPpgDM6Wwepcho7Hs
TuM1rE9nbZM8x0fLDMqtMlIQ1rwyUtAncZU2LR3yUjCBCkanDra2XOsrxsXP
qeODs356+eSZ5NMbN019adceMZY95Zx8+/LF9iSnn0lT5TNyRhg7u8LUTQ2/
fHrZXTG925DTMLWUxYhx96bq97D6j9IJeS9+jhUUZzPKOWclajOew7+4r6Vt
anNF5bV5hUVQt4dCooYhkFAo/L75c3/6/dEROKwgnvEn8CsgKhwBUNYlKsxo
lKjGzLWfz0TFnZyzrq2PtO4NX0las3Rqr6VZVlypVo8gUpUw7htB5a6NRqis
uVNG2/HrKJ0yyhsyW1nwVxlXFOTtDEpbOMTgFGdPYfPxHHELe+3j23Zo2v7i
q7t2+2o7YGagcIoT49cSI2Zi4hz08HLfMeuufN5naGs8hqwh9Y0AC7k1gnH7
JmrrWQJ7fermum6U6YpCYRqdD9RWiZ8+2ds+9d6eluSB+jKrAnSW8bLQVwzX
39+9FxRGgaXMSmIU+BAj86CTfIIZDyafIr4yG552uTl+1awz3xRNhT/7DZmN
lARVkPBTWHmjhHGjy1COWgvrXZ1VgcGNWT0yElLhTLX+6fiSOXBYUTwHlfa/
+JyYkZRfr/6gr6xkNxNUIV7/qJ3MWMYP7gJHJ7u+6CBJ3ulYbbu+qMa02irY
lqtPxv2Ocp4LyMmJn3/VM1dfdLU6tuMGrhZBBQBqm0cKT51pWTCztKQ6Obeg
MI2axaaaU0/O7iU1ZdJKxlhwKE0rvOW8ePHAHjvfOORMfmyrHfSR0+WOl/LD
WQpruONDhrDMI0VSlnvzTZON7yKFPecIm66SWQxgvFs7+4X+7FeIgo6002sr
2+CwAnD2lLaWpFWyoqhl2UvLzWtJ2pi6/Qi+wivuEg5O1iWp4xVGnVysc5ch
HzaUZR5s5XF7IX8noqbshH8Z8rj3Uu9IuqXeTFaF8mUJx+nWhdNrhJrymFlR
3iLD5OkddW3CL9/S3Jw819mAUrZ5Chr1EtSZF2FVxhFGy1l0V7DKOn3/c1tH
7dxijHGzS1L73RmXKTU4RwwBjTVbWW8DojJ3C7rvLexP1TCZcxlO2uX6TNYF
gnTWNRQjco0akSTg1MO9Cye/vGQTHFYEz8Hp54fm5iLqL757+Ggmk11GXpwX
/foju7YraTllF/NDUxtRtis9RrJ2MRaXCmz4WwFL6feNWwddwk7IvcVdwl6w
rJW5CusszKcKiwV3YiAeaZ43vby8FQ6Yr87MLqpUA3F7fbv4hbcJHb+4dDMc
0x+fvy75gVkrrQJTz6lPDnX66BnU9VSBktIT1SzLMB81y/Si/+eR4WU//MOj
B2KMuV3Ej1apqVFre9zQ1NhDRI5Jd3jEPZa5z5Rz/MYXUmkr8OHLOxuaQa9r
s4tL4Cvop+sW1HWz4ngOKv1QPamh0g/Va31zNDSSUPptm3JMXv7G0QMzLx05
8M1Lh/dyCYqFzvjUN0ordAymXi1zwpDTWIctTB3oQEKVaXlVEqvXV9ELckvb
XBR9dVHlHlvRE6BoCL8Nwm1f0srLPZZD05tqW0WYc0/3/MlPLhoFaeAoyUbR
APxF+fXryExaY7qOIN0Xf3Bg1+SXjxyc+uKRA/B9iMlLLPQbmymelB5lJe+0
Np8wJKe47smq3E7duIvPQ8wc6mK41dd9vhoGL29rrLfCk8sqSpJrKgqnHhno
AEWmH+oeEMGvUBX2c+0egNdQ1mJT3OlPzFvnN1zVHAYFLiWZIRulpLaC6WWG
CYxfCspYeZVljF/9npjgiGH7k68dOcCWNmpbeenjtsixnir7K598p0Q2lmLl
8rz7Frt6xgb33BCRvZbYt/mKDDarsACURrUDcI5+5ofbRoWxfmyoG21qhsJP
vbhwQ67Cq5SjI3wO2WRuoT0Mnjb52SMHxv/oyD51sxNlf6TO7g0Gi5wRa/va
04bOxgN76GY6/jY4uReHUd7qEntC1rFmXiwT0hX3WnNfn7XoxST6xc8uX5CR
6NKUK8FR7vzcRP/FCxs2qtGucs1ZZaK4DXNoMhv52e8fOTj9eTLquneelzrI
YUwWmS8r50yPTJXamUU1kVSKIBZrNo05UtRtSp80ihz9pXcSUrbs7OLf8qx1
r0XdQ27Nc5D82tO9rZlKTmLnlnzEbFWva1n+uTUr5PQ3DFKDgf+3zrJSOxib
5zfYUypbbzb0NtZ1tUei6NNgV8Er2vUuVu/2hVnXX/gv+M7LWvO2G6L5zHv7
uux58Y3WnJsbdzOLvgly4D86N7wcPuMnhYWFcrvElLFd7KhpF9fcaghtrPhS
3RS/rKDVWdmGXToHTWlVAnnjpO7LWup+P6lDM7eI+FbG5nAEps/1DQp1npuz
3J6F5XkTYGRGWpnU9I0moMuTgLAK4X5eVlZmj0Bts0M96ShJMFz8WSKBAu6o
vr2GexrtnnLjn8uxrqt/wd45+DoAwEilLWvZ5/Oyh1H2sBrh6rh2R8eACDQ9
AIhkB8AvPju793oAgGm3JwAdfH1Anr2+ZAU3Dw4OgtA43fLYyrDYfFnxcpvO
QFiZff0P5c/MGxs6U7UfvxGlWdig2qy1X5GqPRxB1D4y9eSsJfawP9JQnTzT
3Hbtga6FwavvHhR/Nf1gzxLAAY43xpqbwrhgHJy5rbUZ0CA8AIgA8FCQYYa0
JD0Gepb02tuWLfHNknrcs44YiGhVz8KIf0b+csDPJKTU2t6uE2H/FKwD/FEf
4wb8YMiltstIdxdnDcMIwICZFCusaAAQ4MDYnn4W/O19nd2/u7djIHm2pdtK
AAsBtApBgEAhRKoSDcn7OnvgcGdVc2Egs0w5Lon4Km/ma2QNjxrGuLTU6wx8
fd+tEmdU2yP9TpK+z/EVdiVQv+kA0Cl0OLqP34DKL68dLaJZE7AdzUH+5O0d
9bpJ0O3A7860NPz7o/1z//3xgcUAANiDIrQHQd0eKBdxvgdcxAfnLLNXSsLX
wUDoOrJ5HjsU5DFZHRm3u9epun3Ngbts9y6DCaOCaIBxDO2+TIxnW1PE1Jkg
CIFscNiPOAT15I4c1mGwATPPzlkBx2/f0TMHbUE5+YVrb+9bm7yzY/61O9v7
4dBQiOgo6IsrPgSootDrJsC9GwFPAHZGhFFNWmt4LdUe2JM8Ze9pxUwNf+PZ
Jf2OK4A3x+zgDZE/LEzHkaSsUIAMPBQLUkkAJ+8JM3enDhjhItwXwooPEbK+
cVf7EApbRsMc5b2/e/jqYwMbrBCcA6Ayb/6TJxsrkre3VF97qKOehjk6kVK7
qih8HYI284LmMwssUVMHnLW18+NZCuou+L2bBB1Ib+PxzduyFFSvJRI/hWcL
ot2T1WcgYoU4EgpRkPPio/OGzlAEp0w2Hg909Uj91NCcfrhvlRyepn7xNPpd
u6utBqZpcFiNNEjhNXviXuIsulwbrKzMdJB6ZuObXLcfP7x0gVXACBpndGhx
LLG+IVWpY27tdbJ7DTU566yeeYXv3JqLmrPPq13M4SkJCzQ1o8lYIF/Y5U5h
oeGBor1Xq+LzLr118NjE3LIeVW+oFEaBaaxGVMoVj7Hm2jeeHJyXPN83ixuu
LrmnH+lfbxXQoIXfm7mztWP6vvZ2OMhCo8Y4J7MLjSqZVE0Js8wWcqfh/Qp/
MSnXyNxmXsD44gRjLJt9B6676vc+knowvSV29o/JsuRzXF8VHcRzTEmuDmGb
iydoUM8R9nkQvPMh/IheofoqUF94bDiHgQL3OLeOIQExfaDPvL2nD9RXFPz2
icEFAWbgV5gkXHu4d60kIUi/0zU0+dzQIoEcnqfe1TOoyLA80SjJBo0MkvXc
3K0+Q0jyTQOMWZYGP2OQUjNMq60yB2BWhbpcuHOLx/VA0mdb+gUCimrNNiTA
wIif3g2H+H6LAgZ4EU59syIm7APLIYQloZuL6Qe6Oic/PH/Z9FOz5gMsv3ts
YI4LGsN8VBI0ChjEJZ+BJg7nALISnDnTXOfrQQqzgyanxF8ds8JTqCV9hi3t
X57jG+xMILP7IFiLUpMDzBm91cDGqDnlAgVpuM45ZiFdHaoBTbcnNPBa5wXL
WgvQWEE8R9zwCIezAuCJ+YCzz1naU5Zm5uaW+qnHh2ZbAcDHik89M2eR2+oA
P/qM0Kryp2fm3rZ+pKcwG3ri/wH01HrR44o/XKU5Kkqsdl7Wt70pczCzQ5AH
iZ1ZDlZ26qHf5An9UmbsXPAqpuvwDEZMdiL+7CR82NlNoag+nwCjE0Zsohwy
dhap2guXAPy43N8vRXW/BIdxA8ONBqTGGxAjpSQXDoyEoizDcm9yV2qypF5+
SAckpXaLm1k2pTKSzKJCr9WbEYhebEbiLkYEF8CImG3Crg69+T6M7PCxLxEe
FMOueIIiTIX4OfwewlLthYwVAjrUFAZyDVkB4tRa43c+MBgBiuY77EFe7mcq
UmrEqIJArlIFmTS16Wlce126SLiQrrKvyZ+EcRmiWPmpJLy6unqrClEKfUjY
yluLGEIQcUOgLEVNhvo3On4lrPsVXMJ6S2djJmYh3TKDMW+typAEUt2MMEsd
s6BvpVVmjnAMOB4mDOiucLM0jHMaHluepikXa0T1QVU7zlAzGFC+BEUPK8En
5peuUYJbxT6KbyTF3WM/kar47871zlZDXlP8jQd7Vnsq3uyMeDuIkAsWIPiv
LixegJIXMFVk4WzWFlzCu/ZZwuqSIiZgKGfk0VLHugmQv2qUcL/DEF4PO9T4
N4yLx77ImeyhVZthlFlqYwB090KkYGNQ6oPBSGrGCsx/HmIQ1jFI3t/Zj+FB
LS4yAQIFjPJNeLaH+cwtzU1TT/Ytnn6oo1+Fka+/MHfW1NdWrpj8wzXDVh5D
QOQ60pAVrkqDlzatYwmoNMczTiQL/YZ+SuH3OwkCKloxC8YGGLtSnxMEILx6
rGxaCCrwDImxJToEFT76r3HMgJ3IEGagwNEfpqY4PZXzUdLflbnkbEADnkNg
9m2fIigITH5yNtxFK77Flx7ph7LOe7s7rfDrH18wf/rLy5bCYQMSY5aergeQ
cqYUpYjxDTR5MB25timMvpmEDB4UAipKOEeAUAWbr3vAyCE7QC7ou3aVZzif
qOYBqfIBZJg3EIUASAD4sIK/u6+j305vZUAHZCusOrIT4CHctkJ8GiASkcUv
s6eem7N+5mFhgQQkM0/PmRUCPoTSkhDa1OLGUYKVqaV8vQoHSo3jBewdKrSN
N/V9/ModFOxS9EcMSoySBM6XuB67YFKSvl6pOMNYss5FikyL1/iQsizVlEAM
WUymZPqxgbkgvjrSmZLpd/QM27DU8qYkgpxEkZ1bW1omP7VgJxyKld+e7++z
IghLBED5+Z+sW6u2zFCgRNMzomfNjRuvS/gVr2I7vSUfam9kQuUTonTzYVU4
psb+vXcRFvOZt+h3rJDuYWpNMpJGlXJ6MgqdODNpmZlyoKIpFQgILup8gFjk
M70kKqIz99FMQhz9MsZcZNNRw9DBZcqrGFNyprkVTUnU9DaAhxXAc9DAJEY2
BTD5zZ4mTBwQG4Fs7tcu8iHCFX/I+0mMXGfYsRr6VmTSvbhr2x8lQhaYb6Rn
yY2J6XXikec/DWnl8WjwwWM+P+ckMhLT5/tm27bi/o554utiQcUiwcRGcDSK
kuoMIalkTMgDHbPixAewotyNEAr4CIHbUXxAZBJFREIzOxvqsR3fP3T05395
9GT4OpZUCn15MTJY2gqKnuKkWqmU/Qi1iESvinu3gYzyWLqvMaIUuVvHsIlM
30LfkrhYhsFqWyoxr+5s3trkQ8xsH4NShNjEpp6atUAZlTfubh+afqRvhfi6
FPARxmVVAPgR9kAjSKXH067IlXvYmSd6V1h5xJFiiCyMyREcwBF5pKDiaPpb
u/dbATxHFFO57hdR4MuTEbU0obYxw0RYVHKp2x7t1mO7wO49RNFC0zXhDMrl
mhSlMkTSIbL8KQo7cYovRRStBHWKrFYfhAb9jE5ENzrXHuxaIOhZA/QAB4vF
jx/uWw/8uG2QXJ2bPj8w4gtQGQGk2yAB07rJj86CwmwECGJg21GFeIDCDEBh
PAcBIAWNlYYa+zb3/MypoaKOiIpI3TfOcYHM40QL3SBvFnJIN2XcOCttjo7K
Bacefzxd7VUgw6x5D1mfccqV2v6qzQedXj5jJtHxMjywZrI4MP3owHorKP6/
DP4LHFmcJUqzzGsv1JXgOeK2RJPPD90EMBUwQU/EDHpgHmWFGJAiBNLMV7bd
lPz4pm2Tlw4c9ivyN+61z3NVCNy/eJ6YSKXGPrI0SN21o1CpcF7W9+p8wgDI
KA/hnFZ1KkDjvsu6qpBogYImyMyH+sjOiF/ZY9uZIJ1VwQii0+IDUBc/lVYT
JMb2WEgPgXP1qdkb4RDgwNmGSYCzjIWpwncZr8TM09m2SCAkfGlqUBRlguYg
8IOjK0rsIDUvbt4+/Qc37YNj6uKeg0BQiXtnHCMjk8gKm7C+caRNgkfA815i
h3ZcCaqlPs1VmclbjZ2J1I2XU9kJMaQM4DmqkwLHZGvBxisLKo9OF0cWo0XK
hpw2PkvnYXquvndwxDY9QiRhe2x4QhnCU57h0k6hY4nsKwNL9NzQ3skPz9pe
4oRFaobOkhRwkRRUJM18edtNwk4JlgSPkia0RgUZpvviTNVSKePZmlH6mHt/
O3hRzxG7yheRvacIsiWO8/PycOgQqxzIxlPKF8M6ZHBMQEFV0Il8VDGS5Cyi
cyZ+d6P4OipYOxS4vLnxHiuskNOdnOXn5Zp9jZQ2X+8GD+dppKKenIUUZypl
WJohagWEWorFAtSE0ytlnF6MXJ87gIIGz+zv7pOsvf7yzr02a1GHtZ//4Mgx
pCyRIWsxZtnRm7WULffkfS8QItkzeXmfs/t+hvcZyHEVs4ZPrPRDLqYjNyG3
2hNfywRaO+BrgKGvF88xnT7x/RnxO8eAQIHcDqAwmCOF9X65xDgYPDs3oBk8
JE0Qh9FWHhIYge8VgSp+B+rQCZLRA/6QwaIMSczDc5Q1ejIEE7G+gePUU0Or
rDjiGNZxVChaMWJRcYgUxolFsHk2i9EME9hRhsUyOzNJs7+U3TzDpk/ExIBr
EyN1S8XTRCDtHulZyOt6FGg6o6foG4dicJgWPmaFFYWKEfhzFb678QOn/AEr
oijEIy+4aXKw5MiVNTW35GoTq9MmMlMMo4jghpVhvPZQ9yrbMOabWKrpgB+W
hb4LrgnTLGJGQplFAWMlk5iIu+aVkkEOwXwGwZA3gkZ+POKFoCuua+TNYdTx
nfZkUtYWq0AOg7YPEIm0QS2uuXrdC4JvUeFHIkwIlyr9gbyID4Sd5pxgAuLM
CE/gdGfBnskl5cdyJbDCL21h2EM9bWHYw+LswSsgewiVHr4rvTHKrer2cPq+
9rkBYFBoLeJAgBBBrGACwjwKCLHRw00tv33fmhEVBhosFuE5qrMIh3EXC7fz
ZsibQy7F6t6XMcE4VPmaUUL6jMFh2nsMyx0OBTklikOqWQfLdkDnMO7DYRvD
YRw5TLg5TDYntgGHYA0BRQVithOSkrSZWDYhAlaRM4olDpt6jsSPzfwM15kj
HklbYSItBajw1zaglUwYSYCGFKDJcytXA6QRhtFSPIeA0V99acdOlXvjsAx6
Y2lEiw28eXQ9oEalWqPmy2re8izBSXu3s/XNhrtGOLlbKuaSw9bwLBBHl/j5
Nlwi8mK0mRidoKoFYjQPGc17vjT8yN8UBA+6OZ2eU7wPWNU5zXrmXOhrOL3y
vYbhrEQ4w/pURoFpcWTmZbioHWZWpDSrCYGkgrKaScgQlPgorOkdHfOnnx/Z
p8CkbHAAwKwg/518fHj4f35q0ybPlYMAUzjHwVjP20i5z6mxmuB64qC6uec5
IpGeAsLe3GPcnl9mkjjXJnEOlU1O0K2YYENhAXNMfD8PaCzwgbGBgbGQYPxi
S/SByerwHjeMyb6CHcpw5gxjIusMsmYwjTROVZZMJjJcJQ1kYC11MGuZ6DLh
WEsAc/Ir298ydWHTWADotCKvf2HrTqBTHb99acsOB9Rw8rm166c+t3nbT/9k
z/5XXzl4ePzVY8csemxfVF+0gEPBijV+5UxgqWplXBt/FjNGMOS8ZgeWzxuk
clXehkOXhcPnLPOeEOI0qHOKycNXkGdkFVEt9AG2lgG2GIENgvX8zkDiDoAW
gRwVHaVBa4ObK7TRG5O1rs2S2LgnsWGdWDiwsFxulQIWFKc+6oC5eAOztkZz
oODUvV3LFKmCcMGqiGMFrQArHIBrwExJIqjl0q5quFpBOitsEdq99t0JFIbq
zHLI1jpGU9/DVFafG7nFgMOgHYO+QMiupB9xJYfGvbsMsoKtgdkmsgLB1Tgb
dyNb7INsFYNsGSELNvbygoIzfsii8x8s2Z0TskFpZ8X3yYHCeDYrdS47W0/U
upNIntTGPG/zjipqWdsaZCLReiYSldROb6rttKkNIrVRoHbmvas3K2oBWoWs
VcHgGmFwpQffhlUmySiSLWeeRa2KilwWluY2UX0O5L6fyvqQjqrXDVVGcUFJ
Kq3iqB9iZ0wPhBhgS32ALWeArUBgQ8rGKmiJ2aDOrKABzmEx0d/qMbOPcKzC
VxndTN3Z1QeEIqWFWebbm0xQ1QzKE9SoZ80LmteZsy3NelBqA6o7/0YmKnUB
OvWOJSJGRUDDCk6IUDkwr31sw0ZEMu6A+fW/O3MKkdyB55BablZQlnvW46aY
UFp2Ceu3+9nbQn6YWBwm6Ix6BG4DimIexEEexDADYrkPiCUmiOJ3zmDhtgBR
QegCcbowtH26PW/39KzCvQpEAeaIAHQeA2JQB1HF1tMbauoVgVaBYym5PDtn
KVtyA9DItefRhhgCpCW4w520kCEmj9TM5JFiJntIXYRcumIv+fjqddq06Lcf
HRkF9BC4fMIObKGN3UYnralsokXePKgQRALL7cy66wlXCrFq01ljfPlRom5V
emet35+kqBuXld8DPHURhrpKH+oKGepqkbowmD9FnctvI3qTPQUHJucXH/JF
j4qyglDiZ6Mnl89n2vILFX7CgKQ1fEbqqN3hTk8deXIXYbhLEHew8Y59a+KZ
5kW6zZOO2WplQkmOuyhxp2blwN3Mpzdvk2HjzGc2bbW5K2K4W2NyB2ZP9BZy
N3m/sHVqil7BhJDMo7iArWrnZX3J52MGhF63H9g+uIiHsJ+Z5MQYAqt9CEzw
azoNBKFu+tzBI0B4ZajoOEAINhCDSAkhGzw2UvAIdzQk5SVfeuuS3a/u7F5q
BSbm1rRzZAb5xUc2Z9RDxRb6bMcrkRlmgIzhOYKGUAL5xlhz57UHunaLd1jH
JdbbmPVGDswYM8f5/NYdZQyYpQyYy7zADFx+ctVKMcf50wMHLr60eZPaLsoF
6DkNUN5EpuQ5P06AriYYjdUg7l7rQh7QPgbQOANorQ+gUR7QJmciruC0AnhO
6JkkBemVZaUnAVQdUo7RejKY8pPwqq0IUKoBGgFAZ1aUVyfnF5enS7L3Zs5k
iGEySmTq+5IJPreLV88oLsFSdjMZoSjDYZw4FPzt1jksZTisYDic78thGDCU
plK4acdFu0LFyqxM5SeJxDVEncr9YADJ3e7tQWIvQ2KCIbHeh8QQT2Irkaib
Sj8SL68pP2ubTB8SnZu+VpE7r8ElUsDQigOR8Ps17eK1PM2th5Ld+Y2Cy/rp
+7pHBE+bBjLnL8jwF9aCQ80mBgFAXPPZnXxL6xKkr5sJDr0ZDAv2Ds08sfqA
ODBInPnIhs1WCQNiFTNjnuXUXqjJCaXWEcQYgQjfYtZHm0dzILo3UfMwiZ8y
QPTz2ZjbLOBB7OYDR1iVeQUwmNeEBEY5AoG/C1gGSbwAfQAfAtjKGMSgP4a2
UfTBsMpw2r0CvDtsDGOIYVg48NVXq/LaxOtV08Wx/isL6w7jJbbh4Co1Jz2B
a/PLOoJXH+7fJN21nuYRQC3j0AwwOyCE6Ow2jRLNq48Pnnz9fM9I8p62hVYP
k9TxRjMCaE4/u35s8vNb71R4/vapNeuLTTohp2PVMnT2YPoR4NSiR6ARfDTs
wA902v4aViC5iNJ1A5qPmQTuXiQ61xKJxmIO57DzTTqT8r60Lp7OfJvOFp5O
6StpAtPFGEQiMcyRKIylYFE0Hoxie95mz/hR3lEvreF6haJAr8SKIoox8fps
wBCOybaSNQLFswLJHeL/I9Ml8ZsCl3cPPGoFryxrPjrZWbZUvFRPhhOpFCzu
bFh89YHezYAnHB0GovbNkoRoSEfUrhYKplpMMcVZGkIsQ1NPzzo09YHZ+xSa
LjL1om+GzKhOpptOWakRfP0r23baeDYweLb64lno7cU5PD2Mpzs3+WnCcx2h
yN02aXhxDzw7eTwLyJGPy4VIRLSVHLl4DTbtKtDM6BBuIuc2lSEfQIMIaETM
uHe6Z9ivnu7cWWYnGtFTC3O4H9gULMJ9/lYY0YxwVhLQBNJHEMm7AU4ENOyF
qRV8ozZeCqwCqcIs3tW9JQCgovPeZEedjTa3dtGvw21Y51blIsV7GeYUvLxj
TqNgToFbdSh+p54dWKPMqxF9qjtf2vPLTIhhRfJQEOAV1/fs+r0KX4hDC5mE
eRNDcJ0vwSUawS73b6TRtW2m9IdWVKe+DJB/1iDYWNDh3L+smdPo7cMN6NxB
aBHDbosdhMIWVfPE7629IG/J027HG7JdfydjcDPgWXy/T7y2UPF8tbtg4cSe
xvUlxLPu8nWeQ+T1dVMLLIOptSTMYGptmPMyhDkIMIuzZn7lShByDBMtD47t
fDrs4aw2PBI2F9BFfAMUEyjjC4cVwHPw148PbAeQp9/Ts0KBbOSZEGTs9QRC
HJx57+rjwDAiLEGe+vjoCX1CVcCA3Mok2MuZCVWQQbqciRm4iLbM1yi75/4v
EdLrzZgBM07cXjp5DNLtDNLFDNLNeIbfG1ZI4+LmZxFz+25T20R3mYuWBHNa
pKNupJNN8SFAGsy0RVuxxfX4QecaQlqZj1qNIFcJkIWhvry16yEw1BZnqUvg
HACuOaRDiHRIRxrMdLV9m8aQss4yawo3u666dl/3ouTxpsZUMxzUzbAVJoIV
vfokjLsJEa5vpqu0VosngtPPj5yyWQ7xLOczLHcwyYEC3+RANRGslpFc+Xtt
S2L9wQKMKYbA4vPE7QjxyN36Y2zxI2v2dG4FY+taGXRLGHSbGHQjPuh2miUi
CG0kN3STK8rmA75Wnr2EZIcYYnAKeElWQBdiC4ltWNljAFaFvlaNjWrYjngj
AChOxsrtShGbSTxONDZIkxrRTSoeAKMwqTFvDo1VSo1DVaLEchghy2okBvIY
CLsZCCO+ENZ5RwZGbFuSlRn9goEjd6usUfSU4HFs5mPbUobIRobIeHoiDWOa
nsiYF5FXR6uXg0GlTZSDepwgoYzLj4+oYFfZUAUj2FCr0QYSoYioa9byBFEm
JpAl9UjqmeY2tWYpvjYlb2tbKy3l1JNDx2xLyRHaw6SrwhkSGjUJxdlXAggN
AKD9yGVY55JhsdHbpRt5e22DRH0Tdw/T+CVicYPDndcuEcqtxx0cx7U7M5p4
HMsYHBsYHPN9cOxgDGQ0LY5hDkeBigBSfLYwknaeIGgseqKvl1yGhZGEv8dH
iICRnGwrOaz8ugDxhO3XWxWbG0SYWRJvTVKaNU9xSnjGveZfMYpbr62tasem
A58nGvvBya+DBYKeg8p4WnnebBpxaKZsxhg240xatRfOATCmCK0g4O1LlyTf
snC+CjxbGY/NFScXZ2ws4eUvE6Cj3r7bKPn0oLORp7OcobOeobMoPZ2Gsbw+
OuPKYCpC3ZkCdOeU8YoIK4lVIm5r2WPPosaASvHyIHl7OOUJpuaXzRZHH8ad
cdutB+VC/Zm2BW+05MH9Lpb4WnPtWPM6LEKG852tK2AWhBz60GgscmZAI+Sp
xGtsTBllgOy0gQwhkJFrH1k/OvXi6JZffGnz9p9+Y/vuV7+1c8/4H+/e28J4
cQ5M7S7eNJYTXv59A8y0N/fGeDAbmKCy0qRSUHcad/rTqAR4sU7Oi8p2xmbG
cqQyiFTmg81M4g6DeQuBQGkbewV5w8I23iO+qj3p5oNtHGIIDNE0SUx62gBA
Ad8KK0GTnmvLKjpUEwR+W2ADjVuwfOlo8vaWVbBsJACG7HxQ0YfsxeGMP+hj
0kohb+6mLmw6a3OX4LmLMNy1urgL6txZMSBPOBPJHqJXb7purAnhwsjCVBMI
EaCHZfwqAbjRdN3azUJedx25GaxnGKwyGRyHO4dqGQYr0jNoWMb0DMY5Bq+u
r1iSHCyco/hT1k/4472CvfOCvVNJadwhQJxnsod+mWNPTrjBCMJEHM1dbbwx
ROxNPTPnxK/fN7Qz+UDHcrJxLvZknPjGg50r4KfIXy8TJ3IUyuyQnqH3ojDM
UNhIk5lfvLx9F6BIJDI8FjE81jieGqo/dE9t8FjgaxD1m9fg5a8Rj5uIR+6W
IcNTe8BYx8BYTTAKyJ6yYaQaJfDomPNUQFb78NjGpPHj2dvEqxWROWq9KZkX
XpJsKdovOLwbXzuA0D2uOLQW23GhCz/ATSZnIwK/owLER4A6PJ6efXrquTlH
A1MvzIXnXb27fwcgiAByJjBKGKocu46hkdjJFMN8JiQMmQwCd2otUzEIpcEW
2sQA4FfJkFdhLhbprti4yVeS537qh4clfNkgj3ukkOGKIw55E9o9vTV8jFjr
WaKZAl9deviMnHt6+FJy7pONBbumO4pvI9bCyfzIsenFDQ9Nrmp9VDhYevzh
cmcuApddoq7DmSevsCDOuwXsGyHmgPb600N73niocwVr7yLpQdP25jRvgMhj
QCtgQAsyi+aVvqA1OKB9/dLefYhYCeNyuZgv37Fl+uMENBOnW75vEGibHZfr
dX8ulg5H7E533Z9bxaNWx6BWwaPW6IMaV9mRSLueHgLUbMQKIycJsejkUNVD
k8sbziXn1NyNR00+3DdhXdnU9SChhus39Q5lgrxbKWX4+obqfjJiIcXW1Ifm
Hnz90d4NHF5hBi8uqAtkiFehN15GYrDEF692wgtsmI1XgSsZA4/cdLLT+Y71
0p9QwFgvQOebOlQp6RZubyq5A/Ely7yH0YOqeoaqcp6qlvRUGQYs4V0vNNkQ
2y6N1moAabooejp0eVPbcyJoEzRNNxQsx7fvKBsRBuy0MGB3oa8UHC5rPmpP
BEri3bC4PU5uVZC1B16SNRjJ1ZXdAQDKCoswbQcwow7gijVXfUyqJMAUUOTZ
a8/FlMJzB2XAkW2gisw5AXLTx3CT8PZ/RuSVSGuW9Jf/kAjaQqhwt8Aa/k8+
q/ucC59KJvJqZNgp49lp92GnhbFIeZQpMW7jpgOZuTK/5hErisBQwNJQMFeY
n6NCdTgHARgwQcgMhfsh3QwBLgkvckQY1pZf8caqirbkntoeNqYKmuxg3UKf
9zblqey4Fn6JooibouS7h9dMvbhpa57vpHI2g1LELFrUPRyHkocxckdY3yKU
tjLYcDtQMCiJo76CQamJQYnu9FPP1qJcW3d6jgwbRByFNI56J1uL9scQHXRD
4r+LxP/efmVt8z3TC+tOKYSU3UF4ZqUaH2CmCBEKiV97SZiq2ya7SndNl8a7
JUXJhnhhcnFJ3a9vbVslpm0GMVgg0Mcsa/kQYyRmS/AcBmKUB4ND/H+LFfXF
ZRGDS4DxWFxAFE81MfDVw/L8kYEL94glY1enII9LOYNLM4NLCYNLnw8uzZ5m
J3SlK35UmRrBxz3S0ggvhZMQwEWMLTiDuzoLwKhDWZ5+Kr0CYpThAQsD1sYq
JsuD2Myp+cDl/b3fEWEWnINXVjY+BhjBIa1R5I3WvIrX11X1AkdAkeKn33nE
iv7oDIVOPkNNmRnzXHvf2hFkaEsg+cSqtWJAPL1mHd7HqQOzAoGJ6FM13UVx
uyPGU80KfF+d+jIQcJE42UZMcE9hMkr8AiYnQlh4XFp9KR/gtDCoFDNZ/MH0
qDDRTcgdxUQIFUHNKhuVMAGjLIzbUdnLRF1kZSA1oFuZUgaXCOEirM1x8Wuw
LNRuaWZnZnV54/SmqlZpYiJ6QJOOkVJiRPdFVjGcY1MfXr9pPlkPgAM3pPnI
+nWsY+GekcKYCfj6JyT/9gy9ikv+cVkKX8LL3+rID3Kj8EWM/LN95OfuDqLZ
Od7aI5zLNnHcYqd4RHACFCAJAZMH8bN9Vow3HeBxwHS0+5iOMoaFKJ5DkoUN
cFwZqnkhMNlQtJNmWoBCF5Ggr7ukI4F8TEj3L8nHV68JJj+9aUNg6uUd26zg
T3+wb6+YGW2f+tSmzSJ+gXPw2vvXrrfJKcRz8NqTa9YDPnAIiwPn4C9e2rQN
aEKiWokrMDhogD45MmoFxGs7ceq+c/yPb9qJlHGPDpbJQvczV6qdl3Uj9B0D
N+bOi5hR725R0klHrZhHrc2ua+cAm+cDWKPnekxIASb+93bhlu72YUyPZgSf
mdmcJt7mVJicXdnS8TVxRUibcE1v1zm7vKbtW/D9RH/hCSsgzlB8WR6tVW8n
E0vAYDsyGNan64o/N4C47iIzQAKrW6c/MnJ65v1rDuIkfjXshrV6DSCIGFYA
hjGgr8Q2VBUEFHiy5PNr1yNKYQaoBJNglEC5n8hSzb/8XQJqBwFlhDQEVFR3
X26Y0Bq545sOsloTFLLS0nMBA9XC9FAxdToxHSoF1nRe8LhyYkEGqHzHaCmg
dKNV72O0Kk2YJtc0f0bwiW5MxDsf02FSIIUu3dwuGvvqSPVhIAp4ktN64KjZ
4UhFPm6OmPW7MDL07NoTyadWH8XjXcOjePvi6m4AKHod5iuguUVIgH9lyzYr
TrQBaV+/tPsm5CzCBEuuTdZc5sv98jjRtpNoY+59iOrV5Cm0FTK0dTKFDvkM
bUt8aGtgTFjY9JFAGt66I846bWS/0EoUOVZLeUfWalXxVquGQFOQIWJxO7C2
QUOLtCHmhRjcZ5BXDJxN3dM+z6rj5vXwewVMUjEM5wCAFgLCxE+fWLXPpikw
855Vo2TBwGkCdNYCPAeVE0UGw7YpQ/TWCeBG4UD0RkMMV0E7vRjJynZ9z6CJ
cYYRZc++sGfPHkkMLLTWFzAgdTEg5THrwsvTg2SYrSADUgjPETBdSXLEB8Ap
qkCr1N9clTsTet1c1TEAJSi80gGCIz9DfKrIVukrIPBbUDstCQq578PS+AnN
fGDNiekX1o9NfXTkjKBnE23BF5r60Mg+8d8dCqUNQFGYDFjymXViErduHRgy
K49+P3lsaHZycX19cm5NFRy07hACr6eHUqGMTJGKjb5P8NxkOj7tLsEw7oMP
j4eprKxMytuukAgmfOpm4Ekw8Az7wFPPWKEAA084FR5hiRaqCL3M3wzZmcWi
VDMEDq+eoSiPzJAePJEZEq0T/k5gdA8ChVhhFMXBVI4whXSQYH1Ds0QzT605
Li0PnnV+rMDkhY1nrZiA55iySWCRxKvHdZhGAabQ1MHubmF+dnd1Jnd0tF/b
29VpBcRrXeK1/jLnNtwiusxhS/snp2j6TjnM7hDq5R/QH+0ijIxHJ5BHC8P3
1wCjLVu2SIzakQ0Gox4GoxiflF6TlqSwMkOClN2KIAzNhQGSPmyNCpMqvU0O
UJPPL2A0+vssNatTsEx2FZ12AyRszy4FkVXgBRDmA4oJIJUPUABR0VN86qUt
t01/cvTmmQ+tH0s+sxbz08nHhg8bEIUJIjBGdtZRWCMdIrA8CwGiuISov8y+
uZfu4BYNaY5HLo9UFcIhprDiHPjMxaUdVujiQ522FEBVkDc+HjbpTw2YmPJ5
O6mdXLx4pfiMvjjPUS/DUZTnaL0PR3Xn7e3n/qYguEExFDcQsoTxGRCG57aq
DA1PlF/SaGJYkpmiy0cHL14+Netbk3NrHlDcCL7OC7720/8u7219MgB4hXyp
cjIK9Li7kPJsiqWwDMA1loTFEjSJGOpjG04jU+IQAwU4CrmNEdgo8auAlELJ
apcx0vuGVwJQCFUUzhWKpQQQVAIHslQiAqKLyweSR5pLk2MtZVaJL1ruvRk8
tmz4M0JrN6FlPIhKopXcvXt38tixY8LdzQZIoufVQ6fm2DFSP8NVhOdq1Icr
2tcL3maTbZcSBJX8PRhnIwBVjb9dCvF2qcVhaXpJ/UclRZRvkiz9+O6FL7+2
veu531TnHQFmgCVMZH8EAYuaRAE9JwptjjyTBDHEKqZWRRRWuAexxhQiFQCi
gpMvbb4dk9rHMHWFWNFZGSkAC4hy4DosXl6PcJX6wpUAmsoAJoHZ7R1VgNTF
z8xrtop5pAIZWytIEPwFIbWHkGLq10PJtra25MmTJ4Xr2ynEXhdhwu4BBqkw
j9RmH6SqTaSEudopkYLKkEUoRF4QHPCIcHdHrDrkKuq1AoK35sr6FjBOwBMy
1YzniODvoyqHiQcQddu8bwQAKyukoIIDDFXQ5ioBXIn3XFH9AMA1XRqlBwBq
hHlmDoT2Io6yd9wKwFnV4GxonYVOD0xVwKYrSnRNP7NuzKYrkGq6pt+/dnuQ
oSthkxQnu3Txoa5GwAmRaiOwLn50ThuANfn2rmoJVhA8IvzZJSutoXJvj/CX
BlVG8bmiCnRfu3YD/NWPVqzYFWaoGjyfWmge4qna5kNVJQVSiirxv5fhEOH5
u2UgFVF0if+dUoQJj7iz3pXD7CgbsQum8iPtNlCtWn5pWeOTAJEVJIrAPCmK
wDyFgSKcDOwQ3BxDkgoYnoKMD/QkSwRDMsZKnmwcSLYkMCYGnmaeXzdmQxSa
3ipC+MjMSMvs5HDT4PTmtrlwzKxr6Uk2FxeXe/syg5kFxIzybUhLETEDMZXN
DGOJwOR4WKK/Imb2EjNGvXgfvhaWinYKJ7fv2smTY090dz+Du6DL4EnBA0AM
nU8tEA8y67M3+YBTbpojgAY/7mWc331K5S7lXC4sIvR9GIlXhwcAJPF1l32T
tfCCwBLyRO4wJACrlaFXFyzeQ5j1AYJIWK+vI1IUm4cuHxz67o/PzP/W5N6B
jydH2t8T5C1UxGbroODoLqSqJH1UZYUm1lfeerW/YEOyKtKbzAtW4HVZkav5
weKJ+kibOpJyc64QQLFJc0mCAnRJPhRkaDn+C1Gwj/FHvfha1KagrW3hG2Nj
p/78xIn7gAEgQA1OIAAAQAikGbmgl2cHGBT2+KBQyqAQIhTAjtgoUE4opmMA
h0DjkHhtSBxtAoWj1UQAzPTVxwiHthPSkN9Gc/MVYW4+gjxoVNjmpprMDVBx
+fjciz++ffE3rQCeQ4oQFRnJQBssD8CBgHCYVHhhgoCEKWgSlISSgwW7rdDV
+YWHJpaXnHp1Q/ldl3ZVvz0w0ZaYJx8webUkVA3/hcOKwjkAv2KFxbeHZVho
AVqvDuQvEm+9umSn+KP8YDe8DobG2mo6pctP9NVKtGIKrXPEieVjXPTdTl41
sDIcEmEVsbESE7IrW7cehL/89vr1JzmiZuE5omgCluCrImm/D0jFDEhhxqbI
LLUMeSoBIswjncLakK3ita4k3Iwspm0VtMQPMOkmBSvUIkgURN4vAkfqgMgH
bIxcZFMQEUJ4DiqQwMbo0zWboihDUQ05MuXE6K/swIjYCersWBWIRujVxcV7
VD8JFOojDBXbHLczeW9nFfJQgOe4OwaGf27LYnnc7v4j+vX9jt+xi6Z7XBZH
1khfPXLkePLQoUP/UF3djcHuK+ibkIUJfbnikA8IhQwIUTxHdIsCh4pOwqh/
UNfeokRhCLI/uiVJZGhJCjUAhH9B6aPSkqxre68euOQxetfhOXRlc/256f7i
08nq+N5kfmi7MiH1sd1C2NtQ4kqyAWAcUOSSENiBVuFWlisbIL6fhQ0QAYhS
23AvpHbMrXYGNgBg+DEJfYCENm4A6k4VOgn/F1Of34mpz/ixY4+R0FjGgWEq
PAH+s6jvYR+V8xmVYzTo9eGuFMblUTnEk2ozIuEvinyGeKEzxJXU+hBPMArH
SeHfVOYfRYXzIzdNzq99az6jcJUMTYXCk6tq7p9eXH6nCDlnl54JTC4rvwcC
m9K7hV4npovCu+2YtSS0E2w9aG+VoO5RfYCLn3WIVyHrM4j6h0h/4Q9G3Pob
PsCl/yWpv3uke9yG89eG/kYZMuov73ZKyoyy0LL+20eOPHnt9OlbLuzY8ak5
ONAh0MQwQg3yEz7qJxj1ExQ7wBjXA0ZGeDGO1xbww7vUGd7KtLPDO8gECgk8
R17b0v2CGt6TnWW3i7++Z3JN87s4CMp8IYhd3ljzrgBAEGL0zycDr4978fpy
CAn248cgAghAwMAgj8MADL/EIKpHmW5/b3nYgP9GDBwkBoxKry58iRgQisHE
4BUxw7g4cerUPb88depO+H7ICSUnZGWEJU2C+JN9tkk47gNFjIEiz4kAFBA4
NXVb+4SPHahEJqKcHXhte89/Av2tAjLwauBPl8QPXFnW/G5BySeU/hYHQDFF
h0J7R/ZiU3aIAA9HSWyI+fTBHkKxo7rYcCihsc+3M/Y+P1Vot/fmvDrI+d91
oVPuNO6kly9ZznafILl8otZHRkc/B6MezT6ltuDx1mNq2Etff0D85HNC4gfB
DASypCDCUJBPFBgxH1EQ0ikAhxBNtQsAQa1mFza0fQLiN2EX4Izx3Gsn5nwe
CYhJFz+75q22DeiruhPMxScw44ooIAic2883cRCQLii7HZi4sqZKeHoAw+UZ
HESsCDAC7sBtEsI8JYoQPQa8fL633vYKRElEUfLDhQsXemwwq98O/LcEyCHG
GxAdiXMOHarMt/6CnAYAGoAIoELrNGGdECBiHO+ABEYQAaREo2efddIHj5A3
HuJ3a+D3vtgSvReLQJl4IeTML3U7IfG4vLfn6z8+0v/VH4/N+oqYN8I5Mrmr
50O/2dL5foAFw/5t3R8AZMJIShi8hbIa4itaDSuUIS4xX1waGVxovgHQtKtu
EZQ0gHnZDz8bpJABZgoKDc5R5JH9gHhB0fHB++67LxP78XeEx2HGUXTQX2h4
wLJ9PoUPYaDkcy0t94PbgAPchqxviuh+Q2ECaMRzpCTgSQnQiBUB4n9PCbfy
DhFvnFXGRJ9AQpARMPNRyphUM7RE8Rx87dDAi0CMZmBCuoEBw6KWi4VdAU6Q
lUyJCfkS04HECC9YeljQotYfwUi0WkQHhCALhLUZFnZls4j1wbDA1ANK3gaN
SSXndhJkUOxpRn9//9+fPXvWZVDcN9/+vUGMca8JERPRiIE9cWC142nQUaYY
/nHWrEUzp06dRrfTTsSAUdGJAaMCmBSkJSbKEaNIwVLOl5GcpfJng0jTU1j3
dK/KW+FOQWYQ0qlybGBQgBCkpEKysqPrD5AXoKQAzzHDssyveyBZilEvmpHX
VrU+GnWYmF5S/zakIUEZhisrG9+jc2EEoEGGjG4kIyTsiFOV15wYCIiXxyBU
WR9CPCIKDzgAG/hFyGluZ9yLm4a1a9dmsC/UFaLhCNFgPHCknf5i2KGhDmiA
7PTTOHCH8OXR0VGYe3595cp7rZZUF6NowNRklsYD4h1MQMhoA+RH8SUCymBo
CEDH2TvaCaNxmlO8lGzE5EDFfSqsSDYWHUkurL9HTEseE9PRD4gZrpAb5ir3
yIE/2VV6P4icrI4f12YVvamDXHwtF/9fLy5J6SmHu9IQydzOLGmRiGEUUQzn
aVgiV4+79BjPPyUFj5KCqswVPQApGNTVQ08v5PtBff1iyA0l9+/frwIGq97f
/FfmZP6X6vGi+Fk5ahdiBnHQNvsj6u/FgG5VSb35NR+yx3ExY/Olqq+NtL7/
NxWYwd0gvu57bVXTO0Sg+aSYbDyEk8978JbFt4HSNKTpDP+Hn2qp5+iVLR1P
gwOAAQ8/S9bkn7EZQPkH+JGcB8pjsLArqWYOMu0M41ctU1mbTbNOWUJiACMB
1yC2XLebqnvfJwwGjOJUjoEIMhC5sGPH+TfGxsbwUywncKz2x6DWBwPKMuD0
QrzWNYHP/6V2AwpqTVPmluwYEWEI01kf1HKds1LlPKAMUbz2ovj6HvE6PEV9
g7DvxwoZHMrxHNYHufj+rDAEH7Qg7vygFRdz0PMoqzzU4AcgFA7id2n4axiQ
FxCqL6+HO/BvBySE1G8d8LEFRERU/H9AgXLxnQNtn/ne2gXwdbI1P656ChIK
NiGjpqlHx0+EhP558exZOIb9b2v/B4LjGIFg3HXRZsBRiHBEEY6g8O73ipnD
mb9auHC9urAJbWZhlfnY+iYfRI4BInIaCm8Bb+jJScT0/0hIlAzIn9dHNtlD
rjq8AbLOL2IIYGNhJRzjb3NRQVy4zYT4+fN4v9kHcV6K5gJVJpMRApOh4kE4
QtKSLKx7EDC4vKn1WSjPF2e4he0eQAJp6PczECHdQAACEeABboOsLdecIPp8
a4TxF5KEX2/agBUK4C80Z+++ffRnRMJx01VgZrmVXrvkfKgiISxmBk/88tSp
s387NnaHCgVZIgoduzHOTDLbfKA4YkNBj14OKyoMR+Ki4QJUL0aIBnAs0oa1
gpWIIg3gS96jRj84kDATDVSlGgoBxznx8xfwXh4BhG4o5OC3lb+ytukJWL9K
Ud4vMpDyu61BHOWPgPxAgy4/GIS1jLeIEgF/du/q5TOHDuJy4JfvvvtuD1vw
vwwCjKcpSALO6QTEyBaAo8B1xiNHHsDYS4//NMeB+UEfz9HlQ8Ahm4CwDwFh
JhgMEgHwf+13t8F1/gsue38VWEAeyEZEdSqEZA9hWCGRsGoo0cDZB/AdRSYR
QACYmRT1e7Ia9wUkvPIE2l+gJ1jFlNVJ4f/2rt07sUhXOIKxu+66y2Po/yMJ
f8J0AliS2cIIHyfh//zEibvBCYAJsNyBvy581H8a2Ocj/AEKGSQno/RGPggE
EYG4jgAcYAx0IyD+/36MMv8F5wk/thmImH4CNLZqyQQovZUJQJ9QSoIrsVHq
OCN4V/bDvcTH2q9grH2EIsMvfn3NvH86e/RIUhb6D4N+8pm7xm3kvyTRTzo/
sotUmlNEr1Wi6/ZeTRdY0YM+EcAsH8X3OYrD31LiGs8JTnHQe0ILFEF1J1aA
qoZ/QZkjngM+pIsNA7vSGeNKbxzjY7NegDFe5kgOVt5T8s6sxniFv3FfylSr
hen8w6cO7VdjHNLGKLh8sKj7Xu5JQ3OjrF9qPuxono/LfELzL+zZ8zB8wtcO
HnybnB6kaC6OJZYM3JRFR5Xn+mi9h9E6wWutNHaP4gQziMOp7h3ELPcZxxWm
4fYUtT37cVztb70XMdY75Azlnz148rgaypecoZxyB+I/kbJjpKKxx7xUVqkq
enqlUtYw4WriJ6aK8Hua0SkQfzO6yEfIXYyQ+Hw6qjlSQlrcyMxnRmbIUVCN
TojASnxGpgjIKk0RMfbiRGzLamQ2+Njh+YwdDpnD8o0jhw8n586de0kblu4b
A39F4p0ioYx6wSZv8UA0EO9HJ0/ehc5MiAc/T1KKBQ/x//ni6HAi8uoLJNDn
8K53L0F3MoJSBA/irZbWdxtWgvHDz/ShRaQcN/bAplY5Uys7buKUayHl3MMv
nx95zf42dQ5jU+nmqYg+8v7tph2w6Tsu3Er99FvvQKV/NvQzCvNM/VAfDISF
CVVmFb7CoMOfgVDVKFQ7aCd+8w50pXegybU371ZCWn6jcnuGIpZ6j0Axd75L
t6F53iMQtKxlwqEYo2Nz6ggEE+oxAtv9LegQs/ohdXzl2QN7cBCeHhubWrkI
70wdtoynHeu3l0yRjqdNI4pVdI302iXLDj1WouUSY+7vjxw588bx48eTlZVQ
XFwN2gk9NsdylG1rhrKVMWMvxLu+uDn8MPMJw0+GNHUkm8pqeMrWmNXw6/Yx
nP2oWUwvjALFYNxdeccJTGv/w20H9kuzNWxp/8rNMajWQK/ST89IncTItG1o
A712Ttcu4djLCVjJAu1Onjz58z17DoF2+TlqtzlD7cod7dSw45weCBZJHXKQ
qlRDroGJXDjtGrIacv3+prMH5YvqVaxqqM3ccurUj+7eMmpx2mlPd9TH3b8a
2hl7S3PaUeIBqllSfJ0IUe+UNvWuwhw13JihhpWk4Rdbot91jT/T94V8Bp+I
WhqZnAEKCB14sD6rITfkbyk7Uba4spTf/eSyQTXafvLIscPGvVKV/DD7NUl1
M8liFBrXM1KFnZhyQi4Y6yaSPFtQTCZvvXr69M0iorkTN/LJRbYNGcpW5Tn0
gq8N5mnbCsCIkzUc+oADg9nM+LmorVldVkNtno+ZdN3Y9rOHtm60AjDCrND4
h/bu1GvKKlKHFqjzG12vlI2P6yx7jMr+GZKZHE/JwiTZM8uX3wXBp5hB3IZ7
RuYi2fr0kl2ATE0NM9KCeI691pt4REnmHl2gViszW3eUqslodIFKMKQW+hvF
JhpdJFZP0+u37kWDCCMMDKRxP5FUy130+2+k1i0ki1HPRaNLPcphSObaV0Ln
VWN3YayIQkRJom8fOXIHvPmFHTvegjFeLhKtTS8RilPLjKoAJVT1GDLpSqaI
uViq+4qS+wKBxBi6DTWqynhMgTxL/e1gA0Uf/3rr6Lrk6ZMn37h5bAzcl64S
WDHmYe8wpK6RSLdKc6dXVdF4isjerdPHDiiUz5i7shyFWZ2hMPV4TsDYMRZG
84I3if/fAV+TtCK278r8mne0MXNoTo+KrEbOSh8bV4tihKfuOLAPenjqLQf2
gRBQ5cDGEKX80PnfuioptbK18KrzlACwbpux4wsYc1aRoyTDWUkCaxLvVGNC
jJGjYNEexvjvDvUyKNLKzI05RcqzGiFr/G1ZBYoSufiJ3dtev/XkyeSpkyf/
9Y7RdUoYTpcSfrT8O/30LI0WY1daFMUKw7tc0qiAfrcKGRtWmaMuK7KyYcDG
V8R7HAMBxNd94v9PiOHzbMjRR40aEWHf1crEAhFGn1JnxKir9xkx6/0tWCnp
I3wL5ihev1n4mrGeZpj7ptHHXXv+Bv30NtKHsWa8PnLcTJw6desvT50iU1aV
oz5Lz+t1IaiR9gh2R5+a1HEjvj8LAcs30PVcAIVQJRpLEIdDZx8U1u2M1cLM
cjmhSkgorSrTbyBt8jFthRQRfPOz20enbz81BoHbz+7bshFnvM8MNhjxNvPg
exDjd4Y8RvFOg488eaZZGz927A7svlzkWZyhPBRYh7nhg7nlb2CK6TFbowCN
J2H6boX+T2KdTM2jTUxEwMlUlNV42upv7xKklBpP8PW7LyydpZK6Ruzm8Tz3
/0NK3U5KGcWSjT5KJRxDB0qhoavNUamFGSpVmTqQQKU4M5ACttG7RxeJm7Ry
IhVmNZZ2+hu9CIqU0IfTK88e3AevqimtLpT2/HL9mZJoGn+PxLqDxDKKXZp8
xKKUXgisnW756nLUa36GelG2KOQeWQWoV0wfVHCAVsLwnVCGr5FxUGFGq/ys
BtQeH7sXJKF+8shxXIaevHfsxBe/vm4xvKpK1ZKNTpxdyg8oFCpgCGXYvxYf
oeQU6COjo3fa9q8hR5XmmiqhPpxKZfyoKvIcVUFdJauBmalyMuVlNaQOoEwx
t937H9sXLXj9jAjsRH/DGApQEI5z1/XVBerXoG9V4OB+FCHKQztdWneSPMbe
la0+8kRIHpAF5AGZcKPlXOSZnaE8Jc4gUvLAICpDecLcIMIJw0EsLn4UxEGB
ahj3xMkUz2o0HXYsH643wYrv/v37fzW3pxssH8kTmtxVX6JLw4R09sCh51dZ
dzEWrs1HmZBp4eCA75tyFGcoQ3FoHTGkrJsaOxUkjj523OKIEPxeW5xqZvbK
iRPLagwdIVP3zS/t3jJ9x6kxHDMvHN4PP5J12zDriurKeDwgHn85aihjFGF0
+CgTZExaS46yDGQoSyE/ZmpQlqh7zBjmrIaZtobMdQmQA2+DyHycSCl+8ihl
rafeMjb21Ze3j8CPoMC2tlzW0V+ytH9FPsOEHrBhvYXEMErfOn3ECDAGrDVH
MfoyFKOAHyN1FAXADNVLDDBg1UwUEGT0iOQwNEIwNF6/mdzJPx7ctiXsqHBO
Hr5Dgp6fZd1NKhgFEHhHuxXjVADDBCEYGKn2HDu/J8POz+NHQqNjoPTR4Ok9
Kpg5KKdCiB8VpAKUH+1yjwzrIEqB34MyGJjBRr+yNAx3QLTUdlagiExvup9O
hoLkGYIYFQ1yPxm3ID9asWIEhgJMZPDBC7mo0ZWhGgl+KLSQXdKHgh4Mg6uw
Khn/HWTWS4O+4wBu29LHwT7s/KDe+dI1hOFWraS8Vevb8skVqpDEXYGNf0HP
5bXuob43qhDkNk9G34+OjsJ9OmCCOnPs9o4Muz2WOgjEz8+2U7e7B4HhDiqY
CSN1e1jvdjgAeuf+zDDkNcew1+M+9O9iBCArFFFW6BLUaKTusOIuhsY/oqfE
W/cyBknu4wcafL++vh7H1u7du6HTkd9cBGjLUICoyf2ETK90oQAhnXvIqnAG
iCtYpjtToroOXsWNgvvFOvc7PLvdNP7+uyi6H2WFb1BsSGCYILkt/l333nsv
mjd5i9p1SdCSoQRhfgz0kgT6GADTw0lQwkz0AsZQWKuuHMoSLdPotxjYb8mw
/+XjLDw2GXI/2wnfgCYX1n2OGbJX+rXHyU2fOXMGhoFW2onGH1XI1Q00ZahF
0CfjOICCRNSYcCdFShk3QCKE1PMJFfse6G/MsOvjDvr6ukgN9aFRko9/TelF
6376ubHDl7aPv8qCDFvKpd/A/m/IsP8DqRkPGAuzqOv1saB3PfEf0idpV+ZX
3+yszjV7WHwT/fVM/2NKCYMb1+JHwpd/dz0uXkm5oQPzwPuI+wFnSosbKUWd
pxQxXQpuCMw9b+TcPWPSAjxH1UwtmR9pIPyj1eJYIr5fZSX4MbAmGw0KUgcC
9CYNhJSCduxDKpOwHiANvGyQ65GW/IwtV79Qk34sAP9qd0ngH/od+36emfrz
TFvkSwXm19xiW/7WornCHN0tvu5BBWI+Q2EYZAhQ0Kln+SgE5bTwWAz0Gw9V
uhYpC+zaIybtmwZDb4IcVSSHel2TI6zkMNzAYjO9Z8Sk1O22vRfgVyY7ytaA
G7gbFcKex36P8Pwvz7rjmZoSbRC4n+mC70WiWG+lHuaePG6kLcJvQq9DHo7u
v6S+BpMPt3XVync+u8wx+VzygW6djrgAnydcADxHYT/X4yEf3hdn3e0eG5x4
PP0E34uqE6wHqYuNhXHZ7cY9c5E3odvL7G4vOK/uedTvnaUdrlc6iLuX6XDr
3A9aeU5IE60Rr98kXr1Pdb6YBowZlibEs74g606vy4h1ZXuSzp+oTueedW3k
S2NvQqeX2J1OdzBFxrVbGMVf3DIu7yUednI/KVmGIJkWN/CwtcR9IkrUul1I
sgm7PeAD/Jys+74pY+DxV+BVqiewHqJ+5p4fbTysJf4m9H3R+dRKnfh5e8tS
hb74ukru8qPEQC1W4TkOI8FlgW5xjwB8mvR9OAvbL2ZhR9ACBVCIMAjhpt8a
ylqC1lT8AVqJvzsUxfeiQgHrbdTdnM0xUhGJN0GCAkaCmGH07YEQZCRY7YQ8
srBjwN65RAwA6HQaA3iOKyME3Q+dL45lKfT3Zd31ndnT32x0PfMIRzMFkf8m
dH0e0/URh371u0B/2LProXzttgnpG8RRLI7ZgvjTUezxqOpxMe06K37Ub0De
nXVP9zhdqi8O+0HeQn/5dupV5kG/Zs6z4E3o6TjT07SzREhzrwh5xNPOwARs
qXY5vd8sCh0Tdgf2p1ol7MzmqLT2HWVbRWzZajDdnnVPD6RlWk8v4HvRQq/1
MPWqMVXizEnhm9DTUaangzzTMaanZWyjMy2+lor/b8XswzlMud0rXtuoep0s
C6TShhXbNt/NWff6LOpe96pVTaoYNt/tRq/DX0IPe1qS4jeh18NMrwd4vuNM
r6+gZKab7wh2eD5gLm31KjAs0N/i6zHR+bTRaU1BfnJzZ7vq9TrfTndlyxZk
TDnaFniVjL31DupbYy7E2ZOSN6G/g9jfIb2/gW5nPwSwGLgTicX19zIfymPY
6Xni+zOq03W0L29u77j8xJo1yVNzZ9mYV2bT44uzJ5zWZK13Uu8a0yDZ40ba
svS6ejzO9Tj0t+ptIFptPQFE212dYLp6KY92HtmSC7T3gb3iF/jMK4ePWaGL
n922TSe6JMPU7/LUPgQE/WDuMbqWefCmmYksv66uDepdS/hid+2wuzCf6cLF
PrRSP4JnXKIIVdc12VpcfPHc8pXQpTIihI6DrsTuTGTYqcMZ82oXedCyqXzc
DvfISTO1WHFdnRrWOxWGPjCJMxt3Ry5Ky6L482bVh3IJbVi7IuhOrivDGXbl
WnpLvQLAxWdKwR/l+eD6LXf4wA39yuvjUw5x5JHtwgVpWQzpLMJ1UFbSWEMH
NNXYDmTYdyMOhvoKvh+GA0bfMSuaZnKvOse+gz75HNrDYqbH5mcFHSVY9GcM
YAjLdcimVJhghHlsTItvMEQd8gg13vDSskOMKXBNjh0yj2Aap0cTz/OEaW72
MKl1Je1ycKzCC1uzJ4SiTetd1HhjE4N+591SbmzLoU/mZNgnc7LC5ajDgF5S
4cfAHKPJaQdFfY7tnWW294KXTZ6VPQNHfHV278aLjZ5LjX6UGsitaxng+93p
49foIcaKFjKNHkoVGRqcucjas3nZkqb51N53O1y71rTNVG8TvmaWOcn2iotZ
7VfmNJBhk6k8IOTWOT9jieGrS2KjgmiB0WRu1cbIsDbzTRbXVJyuyX0ZNrk/
F5XdO8j5qbyImvwYQzBHdUvuTe6hJk84q4B8k3uzUlk22b0S7Vcntlhvst+i
qJ1MbMu91V2MzeZa3ZOL0O41X7/SrKXU6veYHLvZtrN67bk3uSPDJnfdQKHd
yGOTl1GTH/dm20ivdeTe5DazyeLrDrbJnTdCZb/ii+VGk7mMuPFaV+5NbmUs
WAHT5HZflSe0bLamsnuzNr8ah5XU5CcYiF1L7Vjz0517k5szbHJbWpWT9Mgk
TmV1oa4VV0PlYWrye02I8alCHNg9uTe50WnyhMyIsU1ucVTW3iMLlZlKFmNl
f7XRZC+w7TKWvtybXM+YL67JzdTkCWfZ5vpVNmpI1lCTn2Qg5mpI+nNvcm2G
TW7MRGXLQ2WPeiVD5XXU5KcYiLn6jYHcm1ydYZMbMlHZzpllprKRl11vNNmA
mKueGMq9yfS0F8wf2k6Ka3Ldm6SyvcS1gZr8PgZirmhhVu5NrmAsNpcerb1e
lZ3qYH79dJSa/DQ1j0vBGa/Nzr3JZd5NnpD7MGNjq3NR2acWN2Uhc5PRZL+s
OL42N/cmQ/XP5+ySK1zBUc178xTdTM17PzWFy4MZr83LvXlFjKnKtxta+Wbr
SCkx6wMZojs/94YW+Da0IldFUyv4+RWybUZDuayW8drC3Buadz41seU0tOxN
UtRer9pBDX0mQ3QX5d7QBGOM8uyGlr5Jitqp2Z3U0GepUUYKi1v4WJx7Q2O+
DS3ORVGfOu8URXcZDWXuezDRXZp7QyO+DS26XkW1WlNW0d3U0OccTN1JWOO1
Zbk3NHQ+NV3lNLQgVVHxLr2ZK+oqkEhZs9urNzQlScXRuzz3tgYYw+u0Nd8U
dUKm1m+cqPuorR+kRnFpV+O1lZk0NMo1VDVQM7aJGygku1ZygBr3PDUkbYJ1
OJPGRfTGiQP2fukSr+1wRItnLNo5XrR0y14HjXYxVd8p0K7KBdDyC2DdEna7
ohnpdSl3vegxutYL1C6uotqAcU1GjUpqz+awGxWzGxXJVSymfNNdGICNorUQ
60MZQrjWv1G0bwPuYiteahmHWwBkSYNq3Hn7+Y/4g9ANVi1lGeOY0UC/vCcS
ut6/gc6uIPOTNJXYDYdnQ2VRtWwWlSsFctHUvV+TpmnKMsZxavKHqXlcSa4B
74jT5HNMk5tJU73J2Kzd2A11KfBSKX9IbzKo69xGCcs457CxiRumMj0DyfoI
NY9LDxkY06Q7zDVX7lxltjeM5zyuvaqdbjmt9HoyBU8gVoqeY0bj0qbuN/k0
rp4aJ77fnKRN9vvQcO7GBtuNU6WF16GW5x3R9DwO66MmnXqOx8jUb/ZpTZ1j
bqAl2I4YnuEq87MbXYwa7NoRPdfA+pjTPjdqRtp9i8/113hef1Bdv46SR8+7
axL8VoFuNi6eS70YKG3zuXjcHxZGdbW8ZPHqXGW/FSw+/c1UV7CrOLQHtPVx
ujyu3M9IgG/3ueQKZmhHzf7Gy45n1N9qjDKZeru/aaNk6xN0oVyKxLBVO3wu
voy5+Ig5dC84JcY59ryRc7/duHgu7aEAQlhu8rn4EvPiL8ASrLx4NUrxsqNp
e163jn7Zc9pj0vokXSiXyjBMzy6fiy9mhmmIGaZUUQ+re6PX2fO0m5z1KW9s
jNWO3T4XX8hcfNAcsND76OLOWeELtNJs9H4u3f8WowV+7OBre31akO/dAmPU
hjLufq3ah12GoM2aQFTFjjuXYJihfT4XLzcEFv9vt0dtgLGXwfTd797XxS8H
TfvsWC/S1XL5LQOq/T4tiDF2B1uAEV2Q7/RjdG0eNRlsNvl+45K5ub5B0UGf
S6YNSQvGmShdDVa47HSdzZRWsJ1NmyhYn6ar5OZQhvk55HPltGFnnrpy8bXv
gjZK4arHtfIXeI8s+trOCj6oX7FXDskg5LDPRdNelnF1wWpQwoVOaEUrevd6
VK6w2Xe6hdn6TIZg0CcUcFcK15mkuakdq3Nd6S6t8OtKuvHR+myG4tMnRNxX
l6QrichZkt1d8O+I2WWupWM2BfOwcVFGSDdIrxnVyMflxWsXpWaz5yzt3xGz
e5jqjJStud9Jf/kSfQJXg2OId9K5Ei9kMmm/vOrP0bupEMstim3Uv2+2y5VX
Z7dKfsT4BK8eto3uePZtoBpq6/P0blyRhzEULqVtQ0pCi6pZrS+YvcRNmrGX
/iS1DR7LLHZ26THjE5gShhTbc5Fe9li0Yuf+VNJmfdHsKH2CYHTUt32bwVb/
UgWZ9SV6N+4OOWPc/2H2bXjS+AS/eRlmqb7ptIFZ8WKTQlRGYn2Z3s14pDCX
FPp6xm2w60hpPd/6Cr0bF7QavfSffNvAbmL3fuMTvIJKeyB+NZVM+Bu/+TEt
8Vq/b/aSHvkZJuzLqW3QljTY6SytxMlrYyMzw1x9Mfs2PGd8ArfkZ/TS5zNq
gzE9odS+VJCNj42k40upbXAyRHyF2wv6J6Q86I6bOn86tRnpZlmUILW+Ru/G
BRbG/PbFjJphhC6UsrNepnfjggPDXH3SuVgm18tOVT5mfIJuTZUfMjJUH/dt
Axvd0p9Ig8Auexjm6qOmZJm0gZptfcO7l4zp1oezb8OnjE/gvLVhrp532sBk
BdnZC8EhDXP6OOeDvm1gw2AC3PoDejfOWxvm6pmM22CHsp81PiFtL70/9WK1
9CMb05AlkA6SjWmMXnqf0waPzElKG8iaWd/KsJfI73ql9Ng2fMH4BIN9LrZ+
PG0bUmJLigJkoMIGNEYvvcdpA5OdYdtAfsv6I0ZVLj5+1LcNbGz5+8YnGNfL
xcePZN8G8m/WRUZVLuw7l9oGLQ3EtoEcg/XHGfYSbVnhlaZh7xx82fgEJqBJ
iY9puuk12WdjS7J6MnxnvbXRUQ85zWBm6GxsSVbP+g4jLBf5vTX7Nvyh8Ql+
MQ26PsoleWUZ2DbQeLa+691Lhuu7l2+D56rXH+lv75VxMXrpLWYbXFNGdmmK
xoKcCnoGNLZRpyxzSgDmF1sSqXI6y7pqw/Xd7tsGNj7+jvEJhqrScBjx8Vmz
Da74mF2TIQ2s7zGqcr10S0ZtMAJLunjrPzPXy8XHZzJqgxEMfM/4BM5VG65v
LPVitbkW2wbKicgvbBEBvLO9F9LJ7NvwA/qEHzDXywXHxzJugx2U/anxCUYw
zwXHMr3ljiD9Ass/o094hbleLjg+5FwsM+dlA8u/oE/4U+d63U7I+NQD2bfh
L41P4AIaw/Xtzb4Nf0WfQJ3FLuEarm8PvZXHnJcNjv8LfcKfM9frCvvwU29K
vVjXnDclsHzV+AQuoDE+dUfGbbADmh/RJ/yFeb26BzI+dVvGbbC96I/pE0hw
M0zlguMt/MX6teGvjU/wCvvsT93o2wY28frf6BN+6Fyv208bnzqafRv+O33C
XznX645mjE9dz3e4X2D5t8YnGH6aC47XZt+Gv6NPoGHB+mkjhlrttIGZtLNt
+Hv9E7wCGqOjhn2bwSZer9CH/Fd6N+bW9JQPXs5fstaSlNjyp/Qhr3r3laHQ
srTNSIktJ4xP4Ly18an+e7ixudd/oE/4kdNRnLe2U0OLUtugTd3Z3OvP6BMu
07txdxYbkdR8vg20wQ0TH/8v4+3TdtFcHhq/wPIf6RPIBrK5B+NTZ/PEUAP4
4PgX9Al/bXaRbjgMYYZ4YvzaMGl8grGewgXH2i5DTBvYxOs/0Sf8jdlL7oDG
7qW+jNpgBJa/ok8gO866aiPY7E5tA3x1tcEIBv7Z+ATOCRnayO2F9dJLjwDf
Dmim6BPIU7Cu2giOaf8Ik3rZADYiu0pv/5P0XYTCyK2pPWbsbAP+1fiEtF3U
TG/Fz3b5NvyaPuFv/bvI/tRG82KZNqRElb+hTyBXx/ppo5fqfdvARpX/ZnyC
4TG5mM9j5PpFldfoE/6H00vuaMboJZki8Zixs2343/on+Plpu6MqUrlJ14x/
pw+hmIANaIyOKjObkUlw/AZ9AgUEvgENdlRJ2jakBJa/Mz6BSzwYEBdl3wb5
TPnX6N0Md8kFx/mpbdAmWmxQhqffo4/5aYZdlZd9Q6hAxPgYzmMbOMdybA1t
8ChDKNM1cLGyx6PR/JKweJIPWP6f9Jac7zaGfyhta1LCTDxFjY9J22mBjFpj
xJp4ks/B/Qez0zQvHtUNAXyUbl2ttM2QT3ilmJCrgQ8rG6BftuUXI+Mpz3hf
rgwC7Zq8Hu467YgYTwX0fj+nvzUSD3I3L3uMwz+/LaPwJB8kScGqadN6TXKw
vfL92GART0XG+zEPZjUjRvmcUTY0xJN8yt8/OijZ9qrL6VP4W2yzfD93uZvz
frTXswxszfZ2Mu318BzO+5Ub72e0t8Nsr+6J2EAVT/KJYr902msPnTamvdrj
mvjrk0/FojDbNCytTh/Y7fXwY877VRvvZ/jFFqa9panXZ0c7eJJPMaIg3TTt
TWZ70aTI92PjMzzV6e+XEhw0mk3Gbih2LjElIMOTfO7M/8M0mX5kmqPidJco
H6LyK6bJdU6T7bxuUbrrazbez7DAdWZ78X804vnQCk+ko5xzmMO1xmyv9vwL
PorCk3zKw7/Q3xrTuSrnmuHv8JoLUq/PdNPtxvsZ7a1i2puX7vrk/vxTZttw
Gl3BtDcv3fXJ3eevmu3VwkS7vWgmEs71pURweOox3s+YIsv3U0EW/i+e7vrk
buP/r9k2ZJesrW1mUSMZ5njHM3LLbZqAmfl8Ytd2cThmYumub8B4P8NlyveD
v7HbG0l3fXIX51+bbcP2EmtBNVaxvfL92HuL8SQ3QZ6mvzVcSJ7ZXhwzYef6
+NBjjvF+qZFsAJobdq6KDzTklr2/MVuJxBIRQWXU0dAH012V3BKXJoym44gy
rZTvx97tiacFxvsZoad8P9upYaPptdS0Gp7kTq6vO421vSR1VMzw4uKfdwS0
WH+vlMI8alfMcGrin3cAtITejqbBpregNkV1B+4OfLQ2yh09ababMNyEvADl
IlQkYV7Icv3vDU8IjQnCH1lB9WhYy/4z/W9n8BxR8zr4E95lDNPv06QZ3xQ+
x9Wg1e5P0f/0/776f1/9/9ur1u/9f5SMWzg=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"cd82a627-92ea-4cad-9c17-b3a157d96e1e"]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{960, 508},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
Magnification:>0.8 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"f7b2cc3a-022a-46e0-9872-5348cc32d875"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 308, 5, 55, "Chapter",ExpressionUUID->"d90cc9ee-2f1b-4f3e-b72d-3d49e4e77ba1"],
Cell[869, 27, 192, 4, 26, "Subtitle",ExpressionUUID->"80ed7abd-b84b-44b2-89b0-a64ceebab980"],
Cell[1064, 33, 413, 6, 51, "Section",ExpressionUUID->"40e5c9cf-a495-40a0-bd7c-10810f35b49e"],
Cell[1480, 41, 730, 12, 25, "Text",ExpressionUUID->"0c16dd5a-fc17-4628-8a31-ed15c5588720"],
Cell[2213, 55, 2662, 68, 126, "Input",ExpressionUUID->"ff1bc6b9-bfbe-4714-b168-988c5766f764"],
Cell[4878, 125, 424, 9, 45, "Text",ExpressionUUID->"f5d0e29d-7168-4632-ab8f-74cf715d4c7c"],
Cell[5305, 136, 1182, 35, 48, "Input",ExpressionUUID->"065a9d15-c153-448f-bd48-c97918527503"],
Cell[CellGroupData[{
Cell[6512, 175, 7026, 184, 315, "Input",ExpressionUUID->"56883acd-e019-476e-8615-1dd35cb1a9ac"],
Cell[13541, 361, 19464, 352, 440, "Output",ExpressionUUID->"a1ad8f31-8693-45c6-ad1b-5c67c62af159"]
}, Open  ]],
Cell[33020, 716, 653, 14, 83, "Text",ExpressionUUID->"c14211af-75bc-476c-b5f6-47dd13f367b8"],
Cell[33676, 732, 2069, 58, 62, "Input",ExpressionUUID->"bcf0ee86-055a-4a94-b90d-76a7f5429812"],
Cell[35748, 792, 358, 7, 27, "Text",ExpressionUUID->"7eaa3407-966a-4ace-8030-3fe1f82a91b0"],
Cell[36109, 801, 3715, 104, 93, "Input",ExpressionUUID->"1823f3f1-d564-42ee-8ee3-05eca448e6c0"],
Cell[39827, 907, 378, 7, 45, "Text",ExpressionUUID->"354d3a55-fb7a-4024-8432-3af56ff413bc"],
Cell[CellGroupData[{
Cell[40230, 918, 3200, 92, 197, "Input",ExpressionUUID->"b870ecb3-21c8-4461-8988-d0b6cc99cd08"],
Cell[43433, 1012, 66966, 1126, 302, 15365, 279, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a8a83189-3a28-4573-bd1f-4181db769a0d"]
}, Open  ]],
Cell[110414, 2141, 612, 15, 45, "Text",ExpressionUUID->"63fd64d0-bf90-4aba-8dd0-43ff83a89311"],
Cell[111029, 2158, 5494, 168, 178, "Input",ExpressionUUID->"9e301d18-7486-4a2d-8196-0281b775bfa6"],
Cell[116526, 2328, 160, 3, 27, "Text",ExpressionUUID->"6d458d29-377a-4df4-b4c1-447552b3fbc9"],
Cell[CellGroupData[{
Cell[116711, 2335, 4391, 119, 245, "Input",ExpressionUUID->"c81be662-4445-4c5b-841a-fa2ee7907fd0"],
Cell[121105, 2456, 103466, 1749, 444, 29989, 544, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"cd82a627-92ea-4cad-9c17-b3a157d96e1e"]
}, Open  ]]
}
]
*)

